{"version":3,"sources":["components/projects/project/project.module.scss","components/landingPage/landingPage.module.scss","components/settingsPanel/settingsPanel.module.scss","components/header/header.module.scss","components/alternatives/alternative/alternative.module.scss","components/searchPanel/searchPanel.module.scss","components/projects/projectContextMenu/projectContextMenu.module.scss","components/navigation/navigation.module.scss","components/listView/listView.module.scss","components/infoBar/infoBar.module.scss","components/App/App.module.scss","components/sinkList/sinkList.module.scss","components/tagBar/tagBar.module.scss","components/collections/collection/collection.module.scss","components/navigation/navigationItems/navigationItems.module.scss","components/navigation/navigationItems/navigationItem/navigationItem.module.scss","components/collections/collections.module.scss","components/alternatives/alternatives.module.scss","resources/SquamishThree1.png","resources/DStaWhite.png","resources/collections.png","components/parallel/parallel.module.scss","components/Auth/auth.module.scss","components/projects/projects.module.scss","components/parallel/parallelMenu/parallelMenu.module.scss","resources/DStar.png","constants/appConstants.js","constants/collectionObject.js","constants/strings.js","util/collections.js","reducers/collections.js","constants/alternativeObject.js","constants/layout.js","constants/urls.js","util/alternatives.js","util/util.js","reducers/alternatives.js","util/layouts.js","reducers/layout.js","reducers/projects.js","reducers/websocket.js","reducers/header.js","reducers/notifications.js","reducers/settings.js","util/queries.js","reducers/queries.js","reducers/scales.js","reducers/search.js","reducers/auth.js","reducers/app.js","store.js","components/scene/Scene.jsx","components/alternatives/alternative/index.js","components/alternatives/alternative/Alternative.jsx","components/alternatives/Alternatives.jsx","containers/AlternativeContainer.jsx","components/messageBox/MessageBox.jsx","components/icons/Brush.js","components/icons/CartesianProduct.js","components/icons/Coords.js","components/icons/DirectEditRef.js","components/icons/EditRef.js","components/icons/EditClone.js","components/icons/ParameterSpectra.js","components/icons/Pareto.js","components/icons/Perturbation.js","components/icons/Sketch.js","components/icons/SpectralCartesianProduct.js","components/icons/Tags.js","components/parallel/parallelMenu/ParallelMenu.jsx","util/parallel.js","components/parallel/Parallel.jsx","actions/notificationActions.js","actions/parallelActions.js","actions/updateActions.js","actions/alternativeActions.js","containers/ParallelContainer.jsx","components/listView/ListView.jsx","containers/ListContainer.jsx","components/infoBar/InfoBar.jsx","components/tagBar/TagBar.jsx","components/collections/collection/Collection.jsx","components/collections/collection/index.js","components/settingsPanel/SettingsPanel.jsx","components/searchPanel/SearchPanel.jsx","components/sinkList/SinkList.jsx","actions/collectionActions.js","components/header/index.js","components/header/Header.jsx","containers/HeaderContainer.jsx","components/notBar/index.js","components/notBar/NotBar.jsx","containers/NotificationContainer.jsx","components/collections/Collections.jsx","components/collections/index.js","actions/websocketActions.js","actions/fetchActions.js","components/projects/project/index.js","components/projects/project/Project.jsx","components/projects/projectContextMenu/index.js","components/projects/projectContextMenu/ProjectContextMenu.jsx","components/projects/projectBox/ProjectBox.jsx","components/projects/editProjectBox/index.js","components/projects/editProjectBox/EditProjectBox.jsx","components/projects/Projects.jsx","util/projects.js","actions/projectActions.js","actions/settingActions.js","containers/CollectionContainer.jsx","components/App/App.js","containers/AppContainer.jsx","actions/userActions.js","containers/ProjectContainer.jsx","components/navigation/navigationItems/navigationItem/index.js","components/navigation/navigationItems/navigationItem/naigationItem.jsx","components/navigation/navigationItems/index.js","components/navigation/navigationItems/navigationItems.jsx","components/navigation/index.js","components/navigation/navigation.jsx","components/landingPage/LandingPage.jsx","components/landingPage/index.js","containers/LandingPageContainer.jsx","components/Auth/index.js","components/Auth/Auth.jsx","components/Auth/login/index.js","components/Auth/login/Login.jsx","containers/AuthContainer.jsx","router/AppRouter.jsx","index.js","components/Auth/login/login.module.scss","components/notBar/notBar.module.scss"],"names":["module","exports","Immutable","Map","FETCH_ALTERNATIVES","FETCH_COLLECTIONS","FETCH_LAYOUT","FETCH_PROJECT","FETCHING_PROJECT","OPEN_WEB_SOCKET_CONNECTION","SET_NEW_WEBSOCKET","ADD_NEW_ALTERNATIVES","CREATE_COLLECTION","UPDATE_ALTERNATIVE","UPDATE_MAX_COLUMNS","ADD_ALTERNATIVE_TO_COLLEECTION","DELETE_COLLECTION","TOGGLE_DRAGGING","SELECT_COLLECTION","DESELECT_COLLECTION","SELECT_ALTERNATIVE","DESELECT_ALTERNATIVE","HOVER_ALTERNATIVE","DEHOVER_ALTERNATIVE","DEHOVER_ALL_ALTERNATIVES","INSERT_LAYOUT","CLIP_ALTERNATIVE","CLIP_COLLECTION","CLEAR_ALTS_CLIPBOARD","CLEAR_COLS_CLIPBOARD","CHANGE_COLLECTION_NAME","SHOW_HEADER","HIDE_HEADER","SHOW_SINK_LIST","HIDE_SINK_LIST","TOGGLE_SINK","SAVE_LAYOUT","HANDLE_SUCCESS","HANDLE_WARNING","HANDLE_ERROR","DESELECT_ALL_ALTERNATIVES","DESELECT_ALL_COLLECTIONS","TOGGLE_HISTORY","TOGGLE_VIEW_MODE","TOGGLE_ALT_VIEW","ALTER_ALTERNATIVE","SELECT_PATH","DESELECT_PATH","ADD_DATA_FIELD","REMOVE_DATA_FIELD","UPDATE_PATH","FETCH_KEY_SETS","FETCH_VALUE_BANDS","FETCH_SETTINGS","ORDER_ALTERNATIVES","ADD_ALTERNATIVE_TO_COLLECTION","ORDER_COLLECTION_DIMENSIONS","SET_LOADING_STATE","REMOVE_ALTERNATIVE","TOGGLE_SETTINGS","SET_ALTERNATIVE_SIZE","SET_COMPACTION_TYPE","GATHER_ALL_COLLECTIONS","SET_COLLISION_PREVENTION","SET_VALUE_BANDS","SHOULD_COMMIT_QUERY","ADD_QUERY","REMOVE_QUERY","CLEAR_ALL_QUERIES","SET_COLLECTION_DESTINATION","SET_COLLECTION_MODE","UPDATE_COLLECTION_TAGS","ADD_BRUSH","REMOVE_BRUSH","CLEAR_ALL_BRUSHES","TOGGLE_SEARCH","SEARCHED_COLLECTION","SEARCH_COLLECTION_FALID","EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH","UPDATE_LAYOUTS","HANDLE_EDIT_NAME_START","EDIT_COLLECTION_NAME","REMOVE_FOCUS","SELECT_PROJECT","CREATING_PROJECT","FETCH_USER","NOT_FETCH_USER","PROJECT_ID","USER_ID","LOGOUT_USER","DELETE_PROJECT","PROJECT_EDIT_BOX","UPDATE_PROJECT","SHOW_PROJECT_CONTEXT_MENU","HIDE_PROJECT_CONTEXT_MENU","ID","REF","NAME","ALTERNATIVE_IDS","UNTITLED_COLLECTION_NAME","findCollectionsFromName","memoize","collections","collectionName","find","collection","get","collectionObjectConstants","args","values","join","findCollectionsFromID","collectionId","fetchCollectionsNotID","filter","getCollectionName","stringConstants","getAlternativesInCollection","alternatives","alternative","includes","calculateWidth","cols","margin","cellDim","buffer","getCoordinates","rows","rowHeight","x","y","Math","round","removeViewName","length","letterIndex","indexOf","slice","sliceViewFromName","name","initialState","fromJS","collectionsFetched","clippedCollections","showHelp","shouldRemoveFocus","IMAGE","MARGIN","CELL_DIM","BUFFER","ROW_HEIGHT","DEFAULT_ALT_HEIGHT","DEFAULT_ALT_WIDTH","DEFAULT_MAX_COLUMNS","LAYOUT_UPDATE_MESSAGE_TYPE","host","urls","getHost","alternatives_fetch","collections_fetch","layout_fetch","project_fetch","project_select","project_create","delete_project","update_project","user_register","user_login","user_fetch","settings_fetch","cartesian_product","parameter_spectra","sampling","spectral_cartesian_product","sensitivity_analysis","websocketURL","collectionCopyWithRef","newCollection","alternativeCopy","alternativeClone","collectionClone","collectionDeepClone","alternativeEdit","alternativeCloneEdit","alternativesRemove","alternativeRestore","alternative_sketching","deleteCollection","sinkCollection","findAlternativesFromID","alternativeID","findAlternativeRelativesFromID","refId","alt","getAlternativeImageURL","alternativeObjectConstant","fetchAlternativesNotID","altsSelected","altsInCollection","alternativesID","altID","getAlternativeIDs","map","renderIf","condition","Component1","Component2","removeFieldFromDatum","datum","field","addFieldToDatum","source","shapeAlternative","inputs","outputs","viewId","collectionRefId","collectionViewId","params","parallelData","Object","assign","gltf","image","altView","isSelected","isHovered","isLoading","shapeCollection","col","collectionNameView","altsid","isSinked","tags","viewType","dimOrder","keySets","isEditingName","destinations","currentMode","isAltering","isEditing","isLiveEditing","isCloning","isToggling","isSampling","isSketching","isBrushing","isCPing","isPSing","isSAing","alternativesFetched","clippedAlternatives","getLayoutForCollection","layouts","layout","getLayoutForCollectionFromClipboard","deleteLayoutForCollection","compactCollectionLayouts","gridLayout","toJS","j","w","h","layoutClipboard","layoutsFetched","maxColumns","layoutConstants","projects","projectFetched","projectLoaded","isCreating","showContextMenu","showEditBox","editProject","selectedProject","contextMenuPosX","contextMenuPosY","showProjectContextMenu","contextMenuSelectedProject","connected","websocket","headerShow","listShow","headerX","headerY","successes","warnings","errors","showHistory","showSettings","alternativeImageSize","collectionCompactionType","preventCollision","fetchQueriesNotID","queries","queryId","query","fetchBrushesNotID","brushes","brushId","brush","valueBands","showSearch","showValidation","missMatchCollectionNames","user","userFetched","userLoggedIn","combineReducers","newCollectionsList","state","action","type","appConstants","set","payload","update","push","setIn","findIndex","clear","index","newAlts","alternativeId","collectionInputs","collectionOutputs","mode","mergeDeepWith","prev","next","key","parameter","newValue","delete","width","db_loaded","project","indexOfListToUpdate","projectId","projectName","projectDescription","xPos","yPos","header","notifications","settings","scales","dim","end","val","search","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","OrbitControls","require","THREE","Scene","initializeOrbits","controls","rotateSpeed","zoomSpeed","panSpeed","initializeCamera","object","scene","children","boundingBox","setFromObject","size","getSize","maxDim","max","z","fov","camera","PI","cameraZ","abs","tan","position","minZ","min","cameraToFarEdge","far","updateProjectionMatrix","animate","frameId","requestAnimationFrame","renderer","setPixelRatio","devicePixelRatio","gammaOutput","gammaFactor","shadowMap","enabled","render","handleControls","e","stopPropagation","this","background","add","antialias","domElement","setSize","props","height","toneMapping","mount","appendChild","setAttribute","customStyle","loader","GLTFLoader","load","traverse","child","geometry","center","material","color","emissive","shading","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","onresize","innerWidth","innerHeight","aspect","cancelAnimationFrame","removeChild","onMouseDownCapture","className","ref","PureComponent","Alternative","transform","left","top","wasDragged","toggleAltView","preventDefault","handleDoubleClick","restoreAlternative","handleHover","hasEntered","hoverAlternative","dehoverAlternative","handleDeleteClick","removeAlternativesFromCollection","handleDragStart","move","element","document","getElementById","style","topState","replace","leftState","elementTop","elementLeft","parseInt","setState","handleMouseDown","el","target","addEventListener","handleMouseUp","removeEventListener","deselectAlternative","selectAlternative","situation","selectedAlts","selectStyleName","classnames","styles","altWidth","layoutForAlt","altHeight","altDimensionStyle","imgDimensionStyle","id","onDoubleClick","onMouseEnter","debounce","bind","onMouseLeave","onMouseDown","onMouseUp","CircularProgress","marginTop","marginLeft","onDragStart","src","Alternatives","renderAlternatives","alternativesInCollection","data-grid","l","i","isResizable","onLayoutChange","layoutForCollection","numColumns","floor","alternativesLayout","altIDs","generateLayoutForAlternatives","item","compactType","containerPadding","useCSSTransforms","AlternativeContainer","Component","connect","MessageBox","handleOk","confirmAction","open","handleCancel","handleDeleteCancel","pressedOk","pressedcancel","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","message","DialogActions","Button","onClick","autoFocus","SvgBrush","viewBox","title","fill","stroke","strokeWidth","strokeMiterlimit","d","strokeLinecap","SvgCartesianProduct","SvgCoords","strokeDasharray","SvgDirectEditRef","cx","cy","r","SvgEditRef","SvgEditClone","SvgParameterSpectra","SvgPareto","SvgPerturbation","SvgSketch","SvgSpectralCartesianProduct","SvgTags","colorCurrentCommand","ParallelMenu","handleClick","group","showEdit","showGenerate","showUnlock","handleUnlockclick","lockAspectRatio","handleLockClick","searchButtonToggle","editButtonToggle","generateButtonToggle","settingsButtonToggle","searchButtonStyle","backgroundColor","editButtonStyle","generateButtonStyle","isSCPing","settingsButtonStyle","brushButtonStyle","sketchButtonStyle","alterButtonStyle","sampleButtonStyle","liveEditButtonStyle","cloneButtonStyle","toggleButtonStyle","cpButtonStyle","parameterSpectraButtonStyle","sensitivityAnalysisButtonStyle","spectralCartesiaProductButtonStyle","options","defaultOption","Provider","value","Brush","handleBrushAxisClick","Pareto","handleSampleAxisClick","Sketch","handleSketchAlternativeClick","EditRef","toggleAlterMode","EditClone","handleCloneEditAlternativeClick","DirectEditRef","toggleLiveEditMode","CartesianProduct","handleCartesianProductClick","SpectralCartesianProduct","handleSpectralCartesianProductClick","Perturbation","handleSensitivityAnalysisClick","onChange","onSensitivityAnalysisDeltaChange","placeholder","ParameterSpectra","handleParameterSpectraClick","onParameterSpectraSelect","onParameterSpectraDeltaChange","Coords","selectParameter","create2DArray","arr","countUnique","iterable","Set","groupBy","list","keyGetter","forEach","pairwise","result","func","colorWhite","colorUnselected","colorHovered","colorSelected","colorSelectedRelated","colorSketch","colorHoveredRelated","colorHoveredSelected","colorSketchPath","colorBrush","colorBrushed","colorBrushSelected","colorQuerySelected","colorQueryNotSelected","colorSelectedCoordinate","opacity0","opacityMid1","opacityMid2","opacity1","Parallel","componentDidMount","drawChart","inputParams","outputParams","dimensions","sketchData","componentDidUpdate","queryEngine","advMode","current","memo","temp","total","sketchPoints","brushSelections","selectedDimensions","commitChanges","changeEditingState","submitChanges","findNonEmptyBrushes","findNonEmptyOutputBrushes","findNonEmptyInputBrushes","commitDimensions","commitValueBands","commitBrushSelections","commitSketch","reOrderDefaultOptions","updateBrushes","alreadySelected","toggleAdjustInputBrushes","adjustInputBrushes","samples","dragging","data","idMap","selectedPaths","colName","exec","colId","brushEngine","d3","domain","range","nice","yDomain","padding","svg","svgEl","myTextField","select","on","keyCode","isNaN","getAttribute","myTooltip","myPath","selectAll","attr","path","myAxis","entries","enter","append","pageX","pageY","text","each","call","scale","minMax","childNodes","node","focus","parentNode","property","originalColor","originalFont","myBrushTextN","myBrushTextS","myClickAxis","myText","then","dimension","console","log","catch","err","keys","invert","updatePoints","splice","sketchPoint","sketchPath","sPath","exit","remove","p","v","transition","g","duration","brushExtent","noBrush","outputBrushes","joinHandles","multiPairs","mpairs","mpair","canBeAdded","strRes","split","queryFilter","boundaries","inputBrushes","inputBrush","newExtent","brushIndex","b","extent","brushStart","sourceEvent","brushOn","currentBrush","selection","toFixed","brushEnd","thisBrush","undefined","tempOrder","br","shiftKey","deletedBrush","nextBrush","count","deleteBrush","polyCount","Array","from","rogueBrush","brushesOnDimension","obj","lastBrushID","lastBrush","elementBefore","insert","isInput","addNewBrush","pairs","handles","dataPoints","sort","a","concat","myStr","dp","toString","raise","Promise","resolve","reject","startIndex","queryResult","boundData","resColor","some","ungroupedPairs","uniqueDims","pair","substring","groupedPairs","every","selected","unselected","relative","nonEmptyBrushes","pairBrushes","ps","nonEmptyDimensions","grouped","brushesByDimension","nonEmptyDimensionPairs","reduce","array","anotherArr","dims","drawBrush","prevDimensions","subject","JSON","stringify","dragAxis","scaleCoefficient","original","origin","delta","nodes","liveData","liveIds","idOfNode","parentElement","editedAlts","dragPoints","addBrush","alterAlternative","editAlternatives","infoRef","innerHTML","setValueBands","shouldWarn","warningMessage","sketch","currentDimensions","defaultOptions","label","orderCollectionDimensions","selectPath","deselectAllAlternatives","cloneBases","cloneEditAlternatives","toggleParameter","removedValue","newValueBands","contains","removeDataField","isLocked","addDataField","backupValueBands","toggleSketchMode","toggleCPMode","togglePSMode","toggleSCPMode","toggleSAMode","toggleCloneMode","setCollectionMode","toggleBrushMode","committedQueries","clearAllBrushes","toggleSampleMode","createAlternative","selectedIds","createNewAlternative","cartesianProduct","selectedAltsInCollection","newCartesianProduct","parameterSpectra","newParameterSpectra","paramaterSpectraAltNum","paramaterSpectraDelta","spectralCartesianProduct","newSpectralCartesianProduct","sensitivityAnalysis","sensitivityAnalysisDelta","newSensitivityAnalysis","handleConfirmQuery","operation","createNewCollection","setTimeout","addQuery","toast","info","autoClose","rtl","destination","cloneAlternatives","display","altsInCollectionBefore","altsInCollectionAfter","hoverAlternativeSpecial","handleMouseEnter","handleMouseLeave","handleKeyEvents","toastId","isActive","success","results","selectedAlt","brushResult","sampleNum","newSampling","handleVisibility","menuHidden","handleOpen","menuOpen","lockRatio","locked","unlockAspectRatio","brushCount","pathStyle","paths","selectedRelatives","opacity","refid","axes","random","clickAxes","points","sketchPaths","brushTextN","brushTextS","inputBoxes","customStyles","container","base","zIndex","isFocused","dropdownIndicator","control","borderWidth","borderColor","onKeyDown","tabIndex","defaultValue","isMulti","isClearable","closeMenuOnSelect","successMessage","errorMessage","toggleHistory","time","Date","getHours","getMinutes","getSeconds","collectionsFetch","layoutFetch","projectFetch","fetchingProject","keySetsFetch","valueBandsFetch","addAlternative","addAlternativeToCollection","createCollection","altIds","deselectCollection","clipCollection","dehoverAllAlternative","addLayoutObject","editNameForCollection","hideHeader","hideSinkList","toggleSink","setLoadingState","toggleSettings","toggleSearch","isCreatingProject","userFetch","userFetchFailed","cutAlternativesFromCollection","dispatch","getState","otherCollections","oldAlts","filteredAlts","updatedCollection","newCollections","error","alts","refIds","fetch","method","headers","body","response","json","batch","warning","refAlternativesToCollection","toastyVar","closeOnClick","pauseOnHover","progress","cloneAlternativesToCollection","cloneEditAlternativesToCollection","ParallelContainer","editedAlternatives","newId","viewIds","ids","alternativeIDs","alt_ids","psnum","psdelta","sadelta","collectionID","collection_id","fromCollection","queryString","selections","removeQuery","clearAllQueries","removeBrush","ListView","handleRowClick","selectedRow","columns","sorting","paging","showTitle","maxBodyHeight","headerStyle","rowStyle","rowData","components","Row","onRowClick","detailPanel","icon","tooltip","ListContainer","fontWeight","InfoBar","TagBar","tagOptions","tag","Collection","cmpEl","getBoundingClientRect","prevProps","prevState","snapshot","shouldFocus","removeFocus","loadTags","toggleTagging","isTagging","toggleEditViewForCollection","event","isEditingCollectionsName","handleCloseClick","deleteCollections","handleEmptyClick","selectedAlternatives","handleMinimizeClick","toggleViewMode","saveLayoutObject","handleSelect","selectCollection","handleHovsClick","handleRefsClick","handleUnselectClick","handleBlur","nameExists","isMultipleInputs","updateMultipleNames","updateCollection","nameHasTheSameValue","handleTaggingSelect","actionMeta","colToUpdate","updateCollectionTags","handleViewSelect","handleDestinationSelect","setCollectionDestination","handleFocus","handleKeyPress","handleDrag","isDragging","handleDragClick","handleTextChange","changeMultipleName","handleAspectRatio","updateAspectRatio","handleUnlockAspectRatio","updateUnlockAspectRatio","React","createRef","destinationOptions","collectionHeight","selectedCols","dragStyleName","loadOptions","pointer2","onDragEnd","paddingLeft","pointer","onFocus","onBlur","onKeyPress","sendMessage","tagEdit","menuPosition","SettingsPanel","handleSizeChange","altSize","setAlternativeSize","handleTypeChange","colType","setCompactionType","handlePreventionChange","colPrev","setCollisionPrevention","handleSettingsClose","settingsOpen","handleSizeClose","selectBox1Open","handleSizeOpen","handleTypeClose","selectBox2Open","handleTypeOpen","handlePreventionClose","selectBox3Open","handlePreventionOpen","selectProject","handleCreate","newProjectName","createProject","newProjectDescription","onProjectChange","onProjectNameChange","onProjectDescriptionChange","FormControl","InputLabel","Select","labelId","onOpen","MenuItem","SearchPanel","handleSearchClose","searchOpen","handleSearchText","searchText","handleSubmit","handleSearch","searchedCollectionFailed","removeValidation","searchedCollectionSuccess","emptyMissMatchArray","onSubmit","TextField","variant","helperText","SinkList","clientX","clientY","newPoint","collectionLayout","layoutObject","restoreCollection","status","layoutUpdate","newLayout","Header","handleSinkClick","showSinkList","handleHistoryClick","handleUnselectAllClick","deselectAllCollections","handleSettingsClick","handleSearchClick","handleHelpClick","handleGatherAll","gatherAllCollections","positionOfContextMenu","backgroundColorStyle","htmlFor","HeaderContainer","listX","listY","NotBar","hideHistoryPane","errorMessages","warningMessages","successMessages","toastClassName","draggable","closeButton","NotificationContainer","Collections","renderCollection","isDraggable","refWebSocket","altKey","clearAltsClipboard","selectedAlternative","clipAlternatives","handleAlternativeDelete","refAlternatives","ctrlKey","clearColsClipboard","selectedCollection","selectedCollections","handleCollectionDelete","copyCollections","copyWithRefCollection","cloneCollections","cloneCollection","deepCloneCollection","cloneAltInNewCollection","colRelList","selectedCol","findCollectionRelativesFromID","colRel","altRelList","altRel","ev","handleContextMenu","showHeader","getRefId","filterdCollections","cloneAlternativesFromTaggedCollections","tagName","arrayOfStrings","foundAll","namesMissMatch","toLowerCase","updateLayoutForCollection","layoutId","collectionsWithRef","selectedElement","refElement","checkNameExists","unquieCollections","counter","compareNumber","collectionSubname","numberAsString","integer","refIdsCollection","namesExists","collectionItem","filteredCollection","exists","showWarningMessage","handleNameExists","filterCollection","subName","handleNameCounter","newArray","updateMaxColumns","matchNumOfColums","scrollX","editingNames","editName","collectionsDivStyle","minWidth","minHeight","mainRef","onContextMenu","onResizeStop","throttle","onDragStop","draggableHandle","url","sessionStorage","getItem","localStorage","onMessage","onMessageRecieved","openWebSocketConnection","Websocket","manageNewAlternative","coll","_id","updatedCollections","minW","minH","moved","static","addRefs","editNewAlternative","newAlternative","addNewAlternative","fetchLayout","fetchAlternatives","fetchCollections","alternateIDs","correctedCollections","collectionsWithoutLayout","filterCollectionsFromLayouts","hasViewName","shouldAddNameView","currentName","cnt","sortedArray","dateA","dateB","getNameIndex","addCollectionNameView","modifiedCollections","Project","handleSelectedProject","history","handleDelete","deleteProject","handleEdit","openEditProject","onRightClick","username","userName","imageAlts","charAt","toUpperCase","ProjectContextMenu","handleOpenProject","shouldCloseProjectContextMenu","handleEditProject","handleDeleteProject","ProjectBox","fullWidth","InputLabelProps","EditProjectBox","handleUpdate","editElments","Projects","handelLogout","logout","showProjectMenu","renderProjects","handelOpenEditProject","handleCreateProject","handleHomeClick","handleAboutClick","getUserProjects","doesProjectExists","pro","currentProject","setItem","description","updateDeletedProject","editElements","updateProjectDetails","updateCollisionPrevention","updateCompactionType","updateAlternativeSize","CollectionContainer","parse","refResult","ws","readyState","userId","updateCollectionLayout","altids","nameWithoutView","altsToBeCloned","refs","editCollectionName","layoutID","App","projectID","fetchProject","appStyles","canvas","AppContainer","removeItem","fetchUser","ProjectContainer","navigationItem","to","link","exact","activeClassName","navigationItems","isLoggedIn","Navigation","clicked","logoContainer","logoSrc","logoStyle","ColorButton","withStyles","theme","root","fontFamily","fontSize","LandingPage","handleJoinButtonClick","handleLoginClick","handleLogoClicked","buttonStyle","Tooltip","interactive","LandingPageContainer","Auth","onUsernameChange","onPasswordChange","password","onPasswordConfirmationChange","passwordConfirmation","handleRegister","register","autoComplete","Login","handelLogin","login","AuthContainer","location","pathname","AppRouter","routes","component","running","dispatchEvent","CustomEvent","oldFetch","userid","projectid","ReactDOM","store","createStore","app","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.0cf06205.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectContainer\":\"project_projectContainer__tkzkA\",\"imageContainer\":\"project_imageContainer__1iaDM\",\"textContainer\":\"project_textContainer__1denn\",\"titleContainer\":\"project_titleContainer__yV22N\",\"title\":\"project_title__Oc0MX\",\"descriptionContainer\":\"project_descriptionContainer__2ooeR\",\"description\":\"project_description__14DCK\",\"userContainer\":\"project_userContainer__3zH_V\",\"circle\":\"project_circle__o2MnR\",\"initials\":\"project_initials__3tjbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"landingPage_mainContainer__1-HFz\",\"content\":\"landingPage_content__1hjNX\",\"imageContainer\":\"landingPage_imageContainer__36-WM\",\"titlesContainer\":\"landingPage_titlesContainer__1mvIe\",\"titles\":\"landingPage_titles__3xnE0\",\"subTitle\":\"landingPage_subTitle__33KxK\",\"mainTitle\":\"landingPage_mainTitle__2tEkN\",\"buttonsContainer\":\"landingPage_buttonsContainer__2JAQH\",\"buttonsStyle\":\"landingPage_buttonsStyle__10jNx\",\"image\":\"landingPage_image__3m7te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel-content\":\"settingsPanel_panel-content__3RBWA\",\"projectLabel\":\"settingsPanel_projectLabel__CNhJT\",\"projectTitle\":\"settingsPanel_projectTitle__3XhgY\",\"inputLabel\":\"settingsPanel_inputLabel__16XdQ\",\"textColor\":\"settingsPanel_textColor__2B2Rk\",\"containerForProjectAndName\":\"settingsPanel_containerForProjectAndName__Aq05i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"right-click-menu\":\"header_right-click-menu__2S5co\",\"right-click-icon\":\"header_right-click-icon__37C9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"alternative\":\"alternative_alternative__3Zy-8\",\"alternative-selected\":\"alternative_alternative-selected___Q7JJ\",\"alternative-selected-related\":\"alternative_alternative-selected-related__3wbOR\",\"alternative-hovered\":\"alternative_alternative-hovered__oSW0r\",\"alternative-hovered-related\":\"alternative_alternative-hovered-related__2W0bk\",\"alternative-hovered-selected\":\"alternative_alternative-hovered-selected__1aOBB\",\"alternative-image\":\"alternative_alternative-image__3KXF5\",\"alternative-toggle1\":\"alternative_alternative-toggle1__-DgHH\",\"alternative-toggle2\":\"alternative_alternative-toggle2__3c9Qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel-textField\":\"searchPanel_panel-textField__1_qbA\",\"panel-buttons-container\":\"searchPanel_panel-buttons-container__2xQeD\",\"panel-content\":\"searchPanel_panel-content__9j_IE\",\"panel-form\":\"searchPanel_panel-form__3OuE6\",\"action-button\":\"searchPanel_action-button__3SF9F\",\"panel-button\":\"searchPanel_panel-button__1UyXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenuContainer\":\"projectContextMenu_contextMenuContainer___nezp\",\"openContainer\":\"projectContextMenu_openContainer__1o2ck\",\"editContainer\":\"projectContextMenu_editContainer__3McaB\",\"deleteContainer\":\"projectContextMenu_deleteContainer__2xqRS\",\"listItemText\":\"projectContextMenu_listItemText__31Fso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__hqASe\",\"logo\":\"navigation_logo__29Y6Y\",\"nav\":\"navigation_nav__hAati\",\"logoContainer\":\"navigation_logoContainer__1ENn0\",\"logoStyle\":\"navigation_logoStyle__3pxZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"list-container\":\"listView_list-container__jCeoU\",\"alternative-image\":\"listView_alternative-image__3mYX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"infobar\":\"infoBar_infobar__3pdfJ\",\"infopar-a\":\"infoBar_infopar-a__1uRfG\",\"infopar-s\":\"infoBar_infopar-s__-eoDB\",\"infopar-r\":\"infoBar_infopar-r__2YaiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"App\":\"App_App__uQezi\",\"canvas\":\"App_canvas__Kxp-h\",\"container\":\"App_container__1L_HV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"sink-list-menu\":\"sinkList_sink-list-menu__2RzZT\",\"hr-sinkList\":\"sinkList_hr-sinkList__1AF4p\",\"items-list\":\"sinkList_items-list__274Oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"tagBar\":\"tagBar_tagBar__1H-mN\",\"tagBar-span\":\"tagBar_tagBar-span__37aJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"collection\":\"collection_collection__1tUl8\",\"collection-selected\":\"collection_collection-selected__1OrOQ\",\"collection-related\":\"collection_collection-related__1-3Q0\",\"collection-name-div\":\"collection_collection-name-div__3AYzm\",\"collection-title-div\":\"collection_collection-title-div__2oFFN\",\"collection-input-div\":\"collection_collection-input-div__1fQbi\",\"textInputStyle\":\"collection_textInputStyle__3YorQ\",\"collection-titleView-div\":\"collection_collection-titleView-div__1JDFz\",\"collection-name\":\"collection_collection-name__1V28t\",\"collection-name-view\":\"collection_collection-name-view__3b7wU\",\"tagEdit\":\"collection_tagEdit__1Y-kx\",\"arrow\":\"collection_arrow__140E2\",\"down\":\"collection_down__1UOD-\",\"up\":\"collection_up__Up4CA\",\"toggle-button\":\"collection_toggle-button__pwTPt\",\"icon-handle\":\"collection_icon-handle__17Uy-\",\"pointer\":\"collection_pointer__3MDXc\",\"pointer2\":\"collection_pointer2__1bJnG\",\"start-drag\":\"collection_start-drag__1PNHd\",\"dragging\":\"collection_dragging__36Z3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItems\":\"navigationItems_navigationItems__1u2op\",\"name\":\"navigationItems_name__b0lHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItem\":\"navigationItem_navigationItem__2VEr0\",\"name\":\"navigationItem_name__1nIdw\",\"active\":\"navigationItem_active__2-FdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"gridLayout\":\"collections_gridLayout__3NxWr\",\"container\":\"collections_container__1xvP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alternative-container\":\"alternatives_alternative-container__1QqUy\"};","module.exports = __webpack_public_path__ + \"static/media/SquamishThree1.e36ef145.png\";","module.exports = __webpack_public_path__ + \"static/media/DStaWhite.3fef72e0.png\";","module.exports = __webpack_public_path__ + \"static/media/collections.d948da91.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"button-div\":\"parallel_button-div__ZpGrv\",\"button\":\"parallel_button__32awR\",\"selectStyle\":\"parallel_selectStyle__1sART\",\"inputBox\":\"parallel_inputBox__v5_xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"auth_mainContainer__3b9bM\",\"content\":\"auth_content__16JSt\",\"authContainer\":\"auth_authContainer__3Yq8n\",\"titleContainer\":\"auth_titleContainer__1JVWQ\",\"signupBox\":\"auth_signupBox__f8KWQ\",\"inputContainer\":\"auth_inputContainer__21FZB\",\"buttonContainer\":\"auth_buttonContainer__1F7aB\",\"inputStyle\":\"auth_inputStyle__ycit0\",\"textInput\":\"auth_textInput__2wVm5\",\"submitInput\":\"auth_submitInput__1JQUc\",\"titleBox\":\"auth_titleBox__26H6x\",\"title\":\"auth_title__2Ic2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainsContainer\":\"projects_mainsContainer__1SnSK\",\"controlsContainer\":\"projects_controlsContainer__1D-R2\",\"controlsContent\":\"projects_controlsContent__1ESIx\",\"initials\":\"projects_initials__1tHW1\",\"userContainer\":\"projects_userContainer__2LtrM\",\"userName\":\"projects_userName__3GORV\",\"circle\":\"projects_circle__2Ge2Z\",\"projectsContainer\":\"projects_projectsContainer__1jTl5\",\"projectsRow\":\"projects_projectsRow__3Id5q\",\"addProjectContainer\":\"projects_addProjectContainer__3IT8-\",\"plusIcon\":\"projects_plusIcon__2STRv\",\"logoutContainer\":\"projects_logoutContainer__1bsg7\",\"logoutText\":\"projects_logoutText__1nLNj\",\"addProjectText\":\"projects_addProjectText__2tbx9\",\"homeContainer\":\"projects_homeContainer__gTYkx\",\"homeText\":\"projects_homeText__ZHYU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"button-div\":\"parallelMenu_button-div__CqXRo\",\"button\":\"parallelMenu_button__3HJW0\",\"button-visible\":\"parallelMenu_button-visible__QLnNP\",\"button-hidden\":\"parallelMenu_button-hidden__1ElCd\"};","module.exports = __webpack_public_path__ + \"static/media/DStar.d0e93082.png\";","import Immutable from 'immutable';\r\n\r\n/**\r\n * all the action constants are present in this file.\r\n */\r\nexport default new Immutable.Map({\r\n  FETCH_ALTERNATIVES: 'FETCH_ALTERNATIVES',\r\n  FETCH_COLLECTIONS: 'FETCH_COLLECTIONS',\r\n  FETCH_LAYOUT: 'FETCH_LAYOUT',\r\n  FETCH_PROJECT: 'FETCH_PROJECT',\r\n  FETCHING_PROJECT: 'FETCHING_PROJECT',\r\n  OPEN_WEB_SOCKET_CONNECTION: 'OPEN_WEB_SOCKET_CONNECTION',\r\n  SET_NEW_WEBSOCKET: 'SET_NEW_WEBSOCKET',\r\n  ADD_NEW_ALTERNATIVES: 'ADD_NEW_ALTERNATIVES',\r\n  CREATE_COLLECTION: 'CREATE_COLLECTION',\r\n  UPDATE_ALTERNATIVE: 'UPDATE_ALTERNATIVE',\r\n  UPDATE_MAX_COLUMNS: 'UPDATE_MAX_COLUMNS',\r\n  ADD_ALTERNATIVE_TO_COLLEECTION: 'ADD_ALTERNATIVE_TO_COLLEECTION',\r\n  DELETE_COLLECTION: 'DELETE_COLLECTION',\r\n  TOGGLE_DRAGGING: 'TOGGLE_DRAGGING',\r\n  SELECT_COLLECTION: 'SELECT_COLLECTION',\r\n  DESELECT_COLLECTION: 'DESELECT_COLLECTION',\r\n  SELECT_ALTERNATIVE: 'SELECT_ALTERNATIVE',\r\n  DESELECT_ALTERNATIVE: 'DESELECT_ALTERNATIVE',\r\n  HOVER_ALTERNATIVE: 'HOVER_ALTERNATIVE',\r\n  DEHOVER_ALTERNATIVE: 'DEHOVER_ALTERNATIVE',\r\n  DEHOVER_ALL_ALTERNATIVES: 'DEHOVER_ALL_ALTERNATIVES',\r\n  INSERT_LAYOUT: 'INSERT_LAYOUT',\r\n  CLIP_ALTERNATIVE: 'CLIP_ALTERNATIVE',\r\n  CLIP_COLLECTION: 'CLIP_COLLECTION',\r\n  CLEAR_ALTS_CLIPBOARD: 'CLEAR_ALTS_CLIPBOARD',\r\n  CLEAR_COLS_CLIPBOARD: 'CLEAR_COLS_CLIPBOARD',\r\n  CHANGE_COLLECTION_NAME: 'CHANGE_COLLECTION_NAME',\r\n  SHOW_HEADER: 'SHOW_HEADER',\r\n  HIDE_HEADER: 'HIDE_HEADER',\r\n  SHOW_SINK_LIST: 'SHOW_SINK_LIST',\r\n  HIDE_SINK_LIST: 'HIDE_SINK_LIST',\r\n  TOGGLE_SINK: 'TOGGLE_SINK',\r\n  SAVE_LAYOUT: 'SAVE_LAYOUT',\r\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\r\n  HANDLE_WARNING: 'HANDLE_WARNING',\r\n  HANDLE_ERROR: 'HANDLE_ERROR',\r\n  DESELECT_ALL_ALTERNATIVES: 'DESELECT_ALL_ALTERNATIVES',\r\n  DESELECT_ALL_COLLECTIONS: 'DESELECT_ALL_COLLECTIONS',\r\n  TOGGLE_HISTORY: 'TOGGLE_HISTORY',\r\n  TOGGLE_VIEW_MODE: 'TOGGLE_VIEW_MODE',\r\n  TOGGLE_ALT_VIEW: 'TOGGLE_ALT_VIEW',\r\n  ALTER_ALTERNATIVE: 'ALTER_ALTERNATIVE',\r\n  SELECT_PATH: 'SELECT_PATH',\r\n  DESELECT_PATH: 'DESELECT_PATH',\r\n  ADD_DATA_FIELD: 'ADD_DATA_FIELD',\r\n  REMOVE_DATA_FIELD: 'REMOVE_DATA_FIELD',\r\n  UPDATE_PATH: 'UPDATE_PATH',\r\n  FETCH_KEY_SETS: 'FETCH_KEY_SETS',\r\n  FETCH_VALUE_BANDS: 'FETCH_VALUE_BANDS',\r\n  FETCH_SETTINGS: 'FETCH_SETTINGS',\r\n  ORDER_ALTERNATIVES: 'ORDER_ALTERNATIVES',\r\n  ADD_ALTERNATIVE_TO_COLLECTION: 'ADD_ALTERNATIVE_TO_COLLECTION',\r\n  ORDER_COLLECTION_DIMENSIONS: 'ORDER_COLLECTION_DIMENSIONS',\r\n  SET_LOADING_STATE: 'SET_LOADING_STATE',\r\n  REMOVE_ALTERNATIVE: 'REMOVE_ALTERNATIVE',\r\n  TOGGLE_SETTINGS: 'TOGGLE_SETTINGS',\r\n  SET_ALTERNATIVE_SIZE: 'SET_ALTERNATIVE_SIZE',\r\n  SET_COMPACTION_TYPE: 'SET_COMPACTION_TYPE',\r\n  GATHER_ALL_COLLECTIONS: 'GATHER_ALL_COLLECTIONS',\r\n  SET_COLLISION_PREVENTION: 'SET_COLLISION_PREVENTION',\r\n  SET_VALUE_BANDS: 'SET_VALUE_BANDS',\r\n  SHOULD_COMMIT_QUERY: 'SHOULD_COMMIT_QUERY',\r\n  ADD_QUERY: 'ADD_QUERY',\r\n  REMOVE_QUERY: 'REMOVE_QUERY',\r\n  CLEAR_ALL_QUERIES: 'CLEAR_ALL_QUERIES',\r\n  SET_COLLECTION_DESTINATION: 'SET_COLLECTION_DESTINATION',\r\n  SET_COLLECTION_MODE: 'SET_COLLECTION_MODE',\r\n  UPDATE_COLLECTION_TAGS: 'UPDATE_COLLECTION_TAGS',\r\n  ADD_BRUSH: 'ADD_BRUSH',\r\n  REMOVE_BRUSH: 'REMOVE_BRUSH',\r\n  CLEAR_ALL_BRUSHES: 'CLEAR_ALL_BRUSHES',\r\n  TOGGLE_SEARCH: 'TOGGLE_SEARCH',\r\n  SEARCHED_COLLECTION: \"SEARCHED_COLLECTION\",\r\n  SEARCH_COLLECTION_FALID: \"SEARCH_COLLECTION_FALID\",\r\n  EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH: \"EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH\",\r\n  UPDATE_LAYOUTS:  \"UPDATE_LAYOUTS\",\r\n  HANDLE_EDIT_NAME_START: \"HANDLE_EDIT_NAME_START\",\r\n  EDIT_COLLECTION_NAME: 'EDIT_COLLECTION_NAME',\r\n  REMOVE_FOCUS: \"REMOVE_FOCUS\",\r\n  SELECT_PROJECT: \"SELECT_PROJECT\",\r\n  CREATING_PROJECT: \"CREATING_PROJECT\",\r\n  FETCH_USER: \"FETCH_USER\",\r\n  NOT_FETCH_USER: \"NOT_FETCH_USER\",\r\n  PROJECT_ID: \"PROJECT_ID\",\r\n  USER_ID: \"USER_ID\",\r\n  LOGOUT_USER: \"LOGOUT_USER\",\r\n  DELETE_PROJECT: \"DELETE_PROJECT\",\r\n  PROJECT_EDIT_BOX: \"PROJECT_EDIT_BOX\",\r\n  UPDATE_PROJECT: \"UPDATE_PROJECT\",\r\n  SHOW_PROJECT_CONTEXT_MENU: \"SHOW_PROJECT_CONTEXT_MENU\",\r\n  HIDE_PROJECT_CONTEXT_MENU: \"HIDE_PROJECT_CONTEXT_MENU\",\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the collection object keys.\r\n * At the time of development, these keys are not finalized.\r\n * So, this constants file is used throughout the application.\r\n */\r\nexport default new Immutable.Map({\r\n  ID: 'viewId',\r\n  REF: 'refId',\r\n  NAME: 'collectionName',\r\n  ALTERNATIVE_IDS: 'altsid',\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains all the static strings used in the application.\r\n * It can be easily changed in the future\r\n */\r\nexport default new Immutable.Map({\r\n  /**\r\n   * this property is used when the collection does not contain a name\r\n   */\r\n  UNTITLED_COLLECTION_NAME: 'untitled',\r\n});\r\n","import collectionObjectConstants from '../constants/collectionObject';\r\nimport stringConstants from '../constants/strings';\r\nimport memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * finds the collection with the name passed as a param\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionName\r\n * @return {ImmutableMap} collection\r\n */\r\nexport const findCollectionsFromName = memoize((collections, collectionName) => (\r\n  collections.find((collection) =>\r\n    collection.get(collectionObjectConstants.get('NAME')) === collectionName\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * finds the collection with id passed\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const findCollectionsFromID = memoize((collections, collectionId) => (\r\n  collections.find((collection) => collection.get('viewId') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * find refs of a collection with the given ID (except the ID itself)\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findCollectionRelativesFromID = (collections, collectionID) => {\r\n  const collection = collections.find((collection) => collection.get('viewId') === collectionID);\r\n  const refId = collection.get('refId');\r\n  const colRelatives = collections.filter((col) => col.get('refId') === refId)\r\n    .filter((col) => col.get('viewId') !== collection.get('viewId'))\r\n  return colRelatives;\r\n}\r\n\r\n/**\r\n * remove an element (with id = collectionId) from the collections list\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchCollectionsNotID = memoize((collections, collectionId) => (\r\n  collections.filter((collection) =>\r\n    collection.get(collectionObjectConstants.get('ID')) !== collectionId\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * gets the name of the collection\r\n * @param {ImmutableMap} collection\r\n * @return {string}\r\n */\r\nexport const getCollectionName = (collection) => {\r\n  let collectionName = stringConstants.get('UNTITLED_COLLECTION_NAME');\r\n  if (collection.get(collectionObjectConstants.get('NAME'))) {\r\n    collectionName = collection.get(collectionObjectConstants.get('NAME'));\r\n  }\r\n  return collectionName;\r\n};\r\n\r\n/**\r\n * returns the alternatives present for each collection\r\n * @param {ImmutableMap} collection\r\n * @param {ImmutableList} alternatives\r\n * @returns {ImmutableList} \r\n */\r\nexport const getAlternativesInCollection = memoize((collection, alternatives) =>\r\n alternatives.filter((alternative) => collection.get('altsid').includes(alternative.get('viewId'))\r\n  ), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * This formula computes the new value for gridlayout width property\r\n * when a collection is dragged beyond the existing boundaries\r\n * @param {int} cols\r\n * @param {int} margin\r\n * @param {int} cellDim\r\n * @param {int} buffer\r\n * @return {int} grid-layout width\r\n */\r\nexport const calculateWidth = memoize((cols, margin, cellDim, buffer) => (\r\n  cellDim * cols + margin * cols + buffer\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * This formula computes the new value for gridlayout height property\r\n * when a collection is dragged beyond the existing boundaries\r\n * @param {int} rows\r\n * @param {int} margin\r\n * @param {int} rowHeight\r\n * @param {int} buffer\r\n * @return {int} grid-layout height\r\n */\r\nexport const calculateHeight = memoize((rows, margin, rowHeight, buffer) => (\r\n  rowHeight * rows + margin * rows + buffer\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * Using React-grid-layout's function to get the new coordinates\r\n * @param {int} x\r\n * @param {int} y\r\n * @param {int} cols\r\n * @return {object} new x and y coordinates\r\n */\r\nexport const getCoordinates = (x, y) => {\r\n\r\n  const newX = Math.round(x / 200);\r\n  const newY = Math.round(y / 60);\r\n\r\n  return {x: newX, y: newY};\r\n};\r\n\r\n/**\r\n * removes the collections which do not have a layout\r\n * @param {ImmutableList} collections\r\n * @param {ImmutableList} layouts\r\n * @return {ImmtableList}\r\n */\r\nexport const filterCollectionsFromLayouts = (collections, layouts) => {\r\n  return collections.map((collection) => {\r\n    const collectionId = collection[collectionObjectConstants.get('ID')];\r\n    const colLayout =layouts.get('gridLayout').find((item) => {\r\n      return item.get('i') === collectionId;\r\n    });\r\n\r\n    if(!colLayout){\r\n      return collection;\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * add properties to default collections list\r\n * @param {array} collections\r\n * @return {array}\r\n */\r\nexport const addPropertyToCollections = (collections) => (\r\n  collections.map((collection) => {\r\n    collection.isSelected = false;\r\n    collection.destinations = []\r\n    collection.currentMode = {\r\n      isAltering: false,\r\n      isEditing: false,\r\n      isLiveEditing: false,\r\n      isCloning: false,\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n    } // default\r\n    \r\n    return collection;\r\n  })\r\n);\r\n\r\n/**\r\n * removes altsIDs which exist in collections\r\n * but don't exist in the alternatives\r\n * @param {Array} collections\r\n * @param {ImmutableList} alternateIDs\r\n * @return {Array}\r\n */\r\nexport const correctAltIDsInCollections = (collections, alternateIDs) => {\r\n  return collections.map((collection) => {\r\n    \r\n    const altIDs = collection.altsid.filter((id) => {\r\n      \r\n      const exists = alternateIDs.findIndex((altID) => altID === id);\r\n      \r\n      return (exists !== -1) ? true : false;\r\n    });\r\n\r\n    collection.altsid = altIDs;\r\n    return collection;\r\n  });\r\n};\r\n\r\nexport const getCollectionsByTag = (collections, tag) => {\r\n  return collections.filter(collection => {\r\n    if (collection.get('tags').contains(tag)) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * @param {String}\r\n * @param {ImmutableList} collections\r\n * @param {ImmutableMap} collectionItem\r\n * @description checks if name exists before editing the collectionName\r\n * @return {boolean} exists\r\n */\r\nexport const nameExists = (name, collections, collectionItem) => {\r\n  let filteredCollection = collections.filter((col) => col.get(\"viewId\") !== collectionItem.get(\"viewId\") && col.get(\"refId\") !== collectionItem.get(\"refId\"));\r\n  let exists = false;\r\n\r\n  for (let collection of filteredCollection) {\r\n    if (collection.get(\"collectionName\").toLowerCase() ===  name.toLowerCase()) {\r\n      exists = true;\r\n    }\r\n  }\r\n  return exists;\r\n}\r\n\r\nexport const  handleNameCounter = (collections, name, collection) => {\r\n  let counter = 0;\r\n  let compareNumber = 0;\r\n  let filterCollection = collections.filter((col) => col.get(\"viewId\") !== collection.get(\"viewId\"));\r\n\r\n  for (let collectionItem of filterCollection) {\r\n    let subName = collectionItem.get(\"collectionName\").split(\":\");\r\n\r\n    if (collectionItem.get(\"collectionName\").toLowerCase() === name.toLowerCase()) {\r\n      counter++;\r\n    }\r\n    else if (subName[0].toLowerCase() === name.toLowerCase()) {\r\n      let integer = parseInt(subName[1], 10);\r\n    \r\n      if (integer > compareNumber) {\r\n        compareNumber = integer;\r\n      }\r\n    }\r\n  }\r\n  \r\n  if (compareNumber >= counter) {\r\n    return compareNumber + 1;\r\n  } else {\r\n    return counter;\r\n  }\r\n  \r\n};\r\n\r\n\r\n/**\r\n * @param {ImmutableList} collections\r\n * @return {ImmutableList} collections\r\n * @description  sorts collections and add NameView on fetch\r\n */\r\nexport const addCollectionNameView = (collections) => {\r\n\r\n    if(collections !== null && collections.length > 0){\r\n\r\n      let current = {\r\n        refId: null\r\n      };\r\n\r\n      let currentName;\r\n  \r\n      let cnt = 0;\r\n  \r\n      const sortedArray  = collections.sort(function(a, b) {\r\n        let dateA = a.refId.toLowerCase();\r\n        let dateB = b.refId.toLowerCase();\r\n  \r\n        if (dateA < dateB) {\r\n          return -1;\r\n        } else if (dateA > dateB) {\r\n          return 1;\r\n        }\r\n  \r\n        return 0;\r\n        });\r\n\r\n        for (var i = 0; i < sortedArray.length; i++) {\r\n          if (sortedArray[i].refId != current.refId) {\r\n              current = sortedArray[i];\r\n              currentName = current.collectionName\r\n              cnt = 1;\r\n              if(currentName.includes(\"-View(\")){\r\n                let getNameIndex = sortedArray[i].collectionName.indexOf(\"-View(\")\r\n                currentName = currentName.slice(0, getNameIndex)\r\n              }\r\n              sortedArray[i].collectionNameView = `View(${cnt})`;\r\n              sortedArray[i].collectionName = currentName + `-View(${cnt})`; \r\n          } else {\r\n              if(sortedArray[i].collectionName.includes(\"-View(\")){\r\n                let getNameIndex = sortedArray[i].collectionName.indexOf(\"-View(\");\r\n                currentName = currentName.slice(0, getNameIndex);\r\n              }\r\n              cnt++;\r\n              sortedArray[i].collectionNameView = `View(${cnt})`;\r\n              sortedArray[i].collectionName = currentName + `-View(${cnt})`; \r\n          }\r\n      }\r\n      return sortedArray;\r\n    } else {\r\n      return collections;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {Array} collections\r\n * @description checks if the  collectionNameView is null or empty\r\n * @returns {Boolean} hasViewName\r\n */\r\nexport const shouldAddNameView = (collections) => {\r\n  let hasViewName = false \r\n  for(let collection of collections) {\r\n    if(typeof(collection.collectionNameView) === \"undefined\" || collection.collectionNameView === null || collection.collectionNameView.length <= 0)\r\n    {\r\n      hasViewName =  true;\r\n    }\r\n  }\r\n\r\n  return hasViewName;\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {collectionName} String\r\n *  @description remove viewName from collection\r\n * @return {String} collectionName\r\n */\r\nexport const removeViewName = (collectionName) => {\r\n  if (collectionName && collectionName.length > 0) {\r\n    if (collectionName.includes(\"View(\")) {\r\n      let letterIndex = collectionName.indexOf(\"-View(\")\r\n      return collectionName.slice(0, letterIndex);\r\n    }\r\n  } else {\r\n    return collectionName;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {name} String\r\n * @description removes collectionNameView from collection name\r\n */\r\nexport const sliceViewFromName = (name) => \r\n{\r\n  if(name.includes(\"-View(\"))\r\n  {\r\n    \r\n    let letterIndex = name.indexOf(\"-View(\")\r\n    let newName = name.slice(0, letterIndex)\r\n    return newName;\r\n  }\r\n  else\r\n  {\r\n    return name;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import appConstants from '../constants/appConstants';\r\nimport collectionObjectConstants from '../constants/collectionObject';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  fetchCollectionsNotID,\r\n  findCollectionsFromID,\r\n} from '../util/collections';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  collections: [],\r\n  collectionsFetched: false,\r\n  clippedCollections: [],\r\n  showHelp: false, \r\n  shouldRemoveFocus: false,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  let collection;\r\n  let collectionsNotID;\r\n  let newCollection;\r\n  let newCollectionsList;\r\n  \r\n  switch (action.type) { \r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n      return state\r\n          .set('collectionsFetched', false)\r\n          .set('collections', Immutable.fromJS([]))\r\n          .set('shouldRemoveFocus', false)\r\n          .set('showHelp', false)\r\n          .set('clippedCollections', Immutable.fromJS([]))\r\n  case appConstants.get('FETCH_COLLECTIONS'):\r\n    return state.set('collections', Immutable.fromJS(action.payload))\r\n      .set('collectionsFetched', true);\r\n\r\n  case appConstants.get('CREATE_COLLECTION'):\r\n    return state.update('collections',\r\n      (collections) => collections.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('DELETE_COLLECTION'):\r\n    return state.set('collections', fetchCollectionsNotID(\r\n      state.get('collections'), action.payload\r\n    ));\r\n\r\n  case appConstants.get('SELECT_COLLECTION'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'isSelected'], true)\r\n    );\r\n\r\n  case appConstants.get('DESELECT_COLLECTION'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'isSelected'], false)\r\n    );\r\n\r\n  case appConstants.get('DESELECT_ALL_COLLECTIONS'):\r\n    return state.update('collections', (collections) => collections.map((collection) => \r\n      collection.set('isSelected', false)));\r\n\r\n  case appConstants.get('CLIP_COLLECTION'):\r\n    return state.update('clippedCollections',\r\n      (clippedCollections) => clippedCollections.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('CLEAR_COLS_CLIPBOARD'):\r\n    return state.update('clippedCollections', (clippedCollections) => clippedCollections.clear());\r\n\r\n  case appConstants.get('CHANGE_COLLECTION_NAME'):\r\n    collection = findCollectionsFromID(state.get('collections'), action.payload.collectionId);\r\n    newCollection = collection.set(collectionObjectConstants.get('NAME'), action.payload.collectionName).set(\"isEditingName\", false)\r\n    \r\n    collectionsNotID = fetchCollectionsNotID(state.get('collections'), action.payload.collectionId);\r\n    newCollectionsList = collectionsNotID.push(newCollection);\r\n    return state.set('collections', newCollectionsList );\r\n\r\n  case appConstants.get(\"HANDLE_EDIT_NAME_START\"):\r\n    return state.update('collections', (collections) => collections.map((\r\n      (collection) => {\r\n        if (collection.get('refId') === action.payload) {\r\n          return collection.set('isEditingName', !collection.get('isEditingName'))            \r\n        }\r\n        return collection;\r\n      }\r\n    )));\r\n  case appConstants.get('EDIT_COLLECTION_NAME'):\r\n    return state.update('collections', (collections) => collections.map((\r\n      (collection) => {\r\n\r\n        if (collection.get('isEditingName')) {\r\n          \r\n          return collection.set('collectionName', action.payload.name)            \r\n        }\r\n        return collection;\r\n      }\r\n    )));     \r\n\r\n  case appConstants.get('TOGGLE_SINK'):\r\n    return state.update('collections', (collections) => {\r\n      let index = collections.findIndex((col) => col.get('viewId') === action.payload)\r\n      return collections.setIn([index, 'isSinked'], !collections.get(index).get('isSinked'))\r\n    });\r\n\r\n  case appConstants.get('TOGGLE_VIEW_MODE'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collectionId), 'viewType'], action.payload.viewType)\r\n    );\r\n  \r\n\r\n  case appConstants.get('ADD_ALTERNATIVE_TO_COLLECTION'): \r\n      return state.update('collections', (collections) => collections.map((\r\n        (collection) => {\r\n          if (collection.get('viewId') === action.payload.collectionId) {\r\n            const oldAlts = collection.get('altsid');\r\n            const newAlts = oldAlts.push(Immutable.fromJS(action.payload.alternativeId));\r\n            \r\n            return collection.set('altsid', newAlts)\r\n              .set('dimOrder',Immutable.fromJS(action.payload.dimOrder))\r\n              .set('inputs', Immutable.fromJS(action.payload.collectionInputs))\r\n              .set('outputs', Immutable.fromJS(action.payload.collectionOutputs))            \r\n          }\r\n          return collection;\r\n        }\r\n      )));\r\n\r\n  case appConstants.get('ORDER_COLLECTION_DIMENSIONS'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'dimOrder'], Immutable.fromJS(action.payload.dimOrder))\r\n    );\r\n\r\n  case appConstants.get('SET_COLLECTION_DESTINATION'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'destinations'], Immutable.fromJS(action.payload.destinations))\r\n    );\r\n\r\n  case appConstants.get('SET_COLLECTION_MODE'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'currentMode'], Immutable.fromJS(action.payload.mode))\r\n    );\r\n\r\n  case appConstants.get('UPDATE_COLLECTION_TAGS'):\r\n    return state.update('collections', (collections) => \r\n      collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collectionId), 'tags'], Immutable.fromJS(action.payload.tags))\r\n    );\r\n  case appConstants.get(\"REMOVE_FOCUS\"):\r\n    return state.set(\"shouldRemoveFocus\", !state.get(\"shouldRemoveFocus\"))\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the alternatives object keys.\r\n * At the time of development, these keys are not finalized.\r\n * So, this constants file is used throughout the application.\r\n */\r\nexport default new Immutable.Map({\r\n  ID: 'viewId',\r\n  REF: 'refId',\r\n  IMAGE: 'image',\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the react grid constants used in the application\r\n */\r\nexport default new Immutable.Map({\r\n  MARGIN: 10,\r\n  CELL_DIM: 200,\r\n  BUFFER: 10,\r\n  ROW_HEIGHT: 130,\r\n  DEFAULT_ALT_HEIGHT: 1,\r\n  DEFAULT_ALT_WIDTH: 1,\r\n  DEFAULT_MAX_COLUMNS: 81,\r\n  LAYOUT_UPDATE_MESSAGE_TYPE: \"layout\",\r\n});\r\n","import Immutable from 'immutable';\r\n\r\nconst hosts = {\r\n  primary: 'sr-02645.iat.sfu.ca:5050',\r\n  secondary: 'sr-02645.iat.sfu.ca:5051',\r\n  demo: 'sr-02645.iat.sfu.ca:5052',\r\n  local: '127.0.0.1:5050',\r\n  vahidVmware: '192.168.108.160:5050',\r\n}\r\n\r\n/*** for using local db\r\n * demo: '127.0.0.1:5050',\r\n * to use db on server\r\n * demo: sr-02645.iat.sfu.ca:5052\r\n */\r\n\r\nconst webProtocol = 'https://';\r\nconst wsProtocol = 'ws://';\r\nconst host = \"76b1cb8a044a.ngrok.io\";\r\n\r\n/**\r\n * contains all the urls being used in this application.\r\n * make this into an export default.\r\n * everything must be put into this immutable object\r\n */\r\nexport const urls = new Immutable.Map({\r\n  getHost: `${webProtocol}${host}/`,\r\n  alternatives_fetch: `${webProtocol}${host}/alternatives`,\r\n  collections_fetch: `${webProtocol}${host}/collections`,\r\n  layout_fetch: `${webProtocol}${host}/layout`,\r\n  project_fetch: `${webProtocol}${host}/project`,\r\n  project_select: `${webProtocol}${host}/project/select`,\r\n  project_create: `${webProtocol}${host}/project`,\r\n  delete_project: `${webProtocol}${host}/project`,\r\n  update_project: `${webProtocol}${host}/project`,\r\n  user_register: `${webProtocol}${host}/user/register`,\r\n  user_login: `${webProtocol}${host}/user/login`,\r\n  user_fetch: `${webProtocol}${host}/user`,\r\n  settings_fetch: `${webProtocol}${host}/settings`,\r\n  cartesian_product: `${webProtocol}${host}/computeCP`,\r\n  parameter_spectra: `${webProtocol}${host}/computePS`,\r\n  sampling: `${webProtocol}${host}/computeSample`,\r\n  spectral_cartesian_product: `${webProtocol}${host}/computeSCP`,\r\n  sensitivity_analysis: `${webProtocol}${host}/computeSA`,\r\n  websocketURL: `${wsProtocol}${host}/delta`,\r\n  collections: `${webProtocol}${host}/collections`,\r\n  collectionCopyWithRef: `${webProtocol}${host}/collections/copy/ref`,\r\n  newCollection: `${webProtocol}${host}/new-collection`,\r\n  alternativeCopy: `${webProtocol}${host}/alternatives/ref/copy`,\r\n  alternativeClone: `${webProtocol}${host}/alternatives/clone`,\r\n  collectionClone: `${webProtocol}${host}/collections/clone`,\r\n  collectionDeepClone: `${webProtocol}${host}/collections/clone/deep`,\r\n  alternativeEdit: `${webProtocol}${host}/alternatives/edit`,\r\n  alternativeCloneEdit: `${webProtocol}${host}/alternatives/edit/clone`,\r\n  alternativesRemove: `${webProtocol}${host}/alternatives`,\r\n  alternativeRestore: `${webProtocol}${host}/alternatives/restore`,\r\n  alternative_sketching: `${webProtocol}${host}/alternatives/sketching`,\r\n  deleteCollection: `${webProtocol}${host}/collections`,\r\n  sinkCollection: `${webProtocol}${host}/collections/sink`,\r\n});","import alternativeObjectConstant from '../constants/alternativeObject';\r\nimport layoutConstants from '../constants/layout';\r\nimport {urls} from '../constants/urls';\r\nimport memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * find alternative object from a list from alternativeID\r\n * @param {ImmutableList} alternatives\r\n * @param {string} alternativeID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findAlternativesFromID = memoize((alternatives, alternativeID) => (\r\n  alternatives.find((alternative) => alternative.get('viewId') === alternativeID)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * find refs of an alternative with the given ID (except the ID itself)\r\n * @param {ImmutableList} alternatives\r\n * @param {string} alternativeID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findAlternativeRelativesFromID = (alternatives, alternativeID) => {\r\n  const alternative = alternatives.find((alternative) =>\r\n    alternative.get('viewId') === alternativeID)\r\n  const refId = alternative.get('refId');\r\n  const altRelatives = alternatives.filter((alt) => alt.get('refId') === refId)\r\n    .filter((alt) => alt.get('viewId') !== alternative.get('viewId'))\r\n  return altRelatives;\r\n}\r\n\r\n/**\r\n * remove an item (with id: alternativeID) from the list of alternatives.\r\n * @param {ImmutableList} alternatives : list of alternatives\r\n * @param {int} alternativeID : Item to remove\r\n * @return {ImmutableList} : list of alternatives, with the removed item\r\n */\r\nexport const filterAlternativesNotID = memoize((alternatives, alternativeID) => (\r\n  alternatives.filter((alternative) =>\r\n    alternative.get(alternativeObjectConstant.get('ID')) !== alternativeID\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * returns the image url of the alternative\r\n * @param {ImmutableMap} alternative\r\n * @return {string} :  image url of the alternative\r\n */\r\nexport const getAlternativeImageURL = memoize((alternative) => (\r\n  urls.get('getHost') + alternative.get(alternativeObjectConstant.get('IMAGE'))\r\n));\r\n\r\n\r\n/**\r\n * this function gets you the parallel data needed for D3.js\r\n * @param {ImmutableList} altsInCollection : list of alternatives\r\n * @return {array} parallelData\r\n */\r\nexport const getParallelDataFromAlternatives = (altsInCollection) => {\r\n  const temp= [];\r\n  const parallelData = [];\r\n  let mergedObject = {};\r\n\r\n  altsInCollection.map((alt) => temp.push({'id': alt.viewId, ...alt.attributes}));\r\n\r\n  temp.map((obj) => {\r\n    Object.values(obj).map((o) => {\r\n      const eachPoint = {[o.key]: o.value};\r\n      mergedObject = Object.assign(mergedObject, {'id': obj.id}, eachPoint);\r\n    });\r\n    parallelData.push(mergedObject);\r\n    mergedObject = {};\r\n  });\r\n\r\n  parallelData.map((obj) => delete obj.undefined);\r\n\r\n  return parallelData;\r\n};\r\n\r\n/**\r\n * this function gets you the parallel data needed for D3.js\r\n * @param {ImmutableMap} altObj : an alternative object\r\n * @return {array} parallelData\r\n */\r\nexport const getParallelDataFromAlternative = (altObj) => {\r\n  const temp = [];\r\n  let mergedObject = {};\r\n\r\n  temp.push({...altObj.params, ...altObj.outputs});\r\n  \r\n  temp.map((obj) => {\r\n    Object.values(obj).map((o) => {\r\n      const eachPoint = {[o.key]: o.value};\r\n      mergedObject = Object.assign(mergedObject, eachPoint);\r\n    });\r\n    return mergedObject;\r\n  });\r\n\r\n  return mergedObject;\r\n};\r\n\r\n/**\r\n * filters a list of selected alternatives from the alternatives in collection\r\n * @param {ImmutableList} altsSelected : list of alternatives selected\r\n * @param {array} altsInCollection : list of alternatives in collection\r\n * @return {array} filtered\r\n */\r\nexport const filterSelectedAlternativesInCollection = memoize((altsSelected, altsInCollection) => (\r\n  altsSelected.filter((alt) => altsInCollection.includes(alt.get('viewId'))\r\n  )), (...args) => values(args).join(\"_\"));\r\n\r\n\r\n/**\r\n * add properties to default collections list\r\n * @param {array} alternatives\r\n * @return {array}\r\n */\r\nexport const addPropertyToAlternatives = (alternatives) => (\r\n  alternatives.map((alternative) => {\r\n    alternative.altView = false;\r\n    alternative.isSelected = false;\r\n    alternative.isHovered = false;\r\n    alternative.isLoading = false;\r\n    alternative.parallelData = [];\r\n    return alternative;\r\n  })\r\n);\r\n\r\n/**\r\n * remove an element (with id = alternatieID) from the altsid list\r\n * @param {ImmutableList} alternativesID\r\n * @param {int} alternativeID\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchAlternativesNotID = memoize((alternativesID, alternativeID) => (\r\n  alternativesID.filter((altID) => altID !== alternativeID)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * Generates a layout object for alternatives in collection\r\n * allots x and y position for every alternative\r\n * @param {array} altIDs list of alternative ids\r\n * @param {int} cols: the number of alternatives placed in a row\r\n * @return {object} defines the x, y, w, h, i for every alternative\r\n */\r\nexport const generateLayoutForAlternatives = (altIDs = [], cols) => {\r\n  let x = 0;\r\n  let y = 0;\r\n  const w = layoutConstants.get('DEFAULT_ALT_WIDTH');\r\n  const h = layoutConstants.get('DEFAULT_ALT_HEIGHT');\r\n\r\n  let index = 0;\r\n\r\n  return altIDs.map((i) => {\r\n    const layout = {\r\n      x, y, w, h, i,\r\n    };\r\n\r\n    index += 1;\r\n    if (index % cols === 0) {\r\n      index = 0;\r\n      y += 1;\r\n      x = 0;\r\n    } else {\r\n      x += 1;\r\n    }\r\n\r\n    return layout;\r\n  });\r\n};\r\n\r\n/**\r\n * get alternative ids from a list of alternatives\r\n * @param {ImmutableList} alternatives\r\n * @return {ImmutableList}\r\n */\r\nexport const getAlternativeIDs = memoize((alternatives) => (\r\n  alternatives.map((alternative) => (\r\n    alternative.get(alternativeObjectConstant.get('ID'))\r\n  ))\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * determines which collection the alternative belogs to\r\n * @param {ImmutableList} collections\r\n * @param {string} alternativeID\r\n * @return {string} collectionName\r\n */\r\nexport const determineAlternativeCollection = (collections, alternativeID) => {\r\n  const sourceCollection = collections.filter((collection) => collection.get('altsid').contains(alternativeID))\r\n  return sourceCollection[0].get('collectionName');\r\n}\r\n","import {\r\n  findAlternativesFromID,\r\n  getParallelDataFromAlternative,\r\n} from './alternatives';\r\n\r\nimport {\r\n  sliceViewFromName,\r\n} from './collections'\r\n\r\n/**\r\n * used to define default functions in PropTypes\r\n * Just an empty function\r\n */\r\nexport const emptyFunction = () => {};\r\n\r\n/**\r\n * Retuns what component to render based on the condition\r\n * @param {boolean} condition: The condition to evaluate\r\n * @param {ReactPureComponent} Component1: return if condition is true.\r\n * @param {ReactPureComponent} Component2=null: return if condition is false.\r\n * @return {ReactPureComponent}\r\n */\r\nexport const renderIf = (condition, Component1, Component2 = null) => (\r\n  condition ? Component1 : Component2\r\n);\r\n\r\n/**\r\n * creates a new id of length at random\r\n * @param {int} length\r\n * @return {string} : the Id of a new collection\r\n */\r\nexport const makeId = (length=5) => {\r\n  let text = '';\r\n  const ids = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (let i = 0; i < length; i++) {\r\n    text += ids.charAt(Math.floor(Math.random() * ids.length));\r\n  }\r\n  return text;\r\n};\r\n\r\n/**\r\n * remove a certain field from an array of data objects\r\n * @param {array} data : array of data objects\r\n * @param {string} field : name of the field to remove\r\n * @return {array} new array of data objects\r\n */\r\nexport const removeFieldFromData = (data, field) => {\r\n  const newData = [];\r\n\r\n  data.map((d) => {\r\n    const {[field]: foo, ...rest} = d;\r\n    newData.push(rest);\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\n\r\n/**\r\n * remove a certain field from an array of data objects\r\n * @param {object} datum : data object\r\n * @param {string} field : name of the field to remove\r\n * @return {array} new array of data objects\r\n */\r\nexport const removeFieldFromDatum = (datum, field) => {\r\n  const {[field]: foo, ...rest} = datum;\r\n  return rest;\r\n};\r\n\r\n/**\r\n * add a certain field to an array of data objects\r\n * @param {array} data : array of data objects\r\n * @param {string} field : name of the field to remove\r\n * @param {object} source : source object to get field value\r\n * @return {array} new array of data objects\r\n */\r\nexport const addFieldToData = (data, field, source) => {\r\n  const newData = [];\r\n  let parallelData;\r\n  let alternative;\r\n\r\n  data.map((d) => {\r\n    alternative = findAlternativesFromID(source, d.id).toJS();\r\n    parallelData = getParallelDataFromAlternative(alternative);\r\n    d[field] = parallelData[0][field];\r\n    newData.push(d);\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\n/**\r\n * add a certain field to an array of data objects\r\n * @param {object} datum : data object\r\n * @param {string} field : name of the field to remove\r\n * @param {object} source : source object to get field value\r\n * @return {array} new array of data objects\r\n */\r\nexport const addFieldToDatum = (datum, field, source) => {\r\n  datum[field] = source[field];\r\n  return datum;\r\n};\r\n\r\nexport const objectDifference = (object1, object2) => {\r\n\r\n  let keys1 = Object.keys(object1);\r\n  let keys2 = Object.keys(object2);\r\n  const keyDifference = keys1.filter(x => !keys2.includes(x));\r\n  const difference = {};\r\n\r\n  Object.entries(object1).map(entry => {\r\n    if (keyDifference.includes(entry[0])) {\r\n      difference[entry[0]] = entry[1];\r\n    }\r\n  });\r\n\r\n  return difference;\r\n}\r\n\r\nexport const shapeAlternative = (alt, inputs, outputs) => {\r\n\r\n  return {\r\n    viewId: alt.viewId,\r\n    refId: alt.refId,\r\n    collectionName: sliceViewFromName(alt.collectionName),\r\n    collectionRefId: alt.collectionRefId,\r\n    collectionViewId: alt.collectionViewId,\r\n    params: alt.params ? alt.params : inputs,\r\n    outputs: alt.outputs ? alt.outputs: outputs,\r\n    parallelData: alt.params || alt.outputs ? Object.assign(alt.params, alt.outputs) : Object.assign(inputs, outputs),\r\n    gltf: alt.gltf,\r\n    image: alt.image,\r\n    altView: false,\r\n    isSelected: false,\r\n    isHovered: false,\r\n    isLoading: false,\r\n  }\r\n}\r\n                                                                                                                                                      \r\nexport const shapeCollection = (col, inputs, outputs) => {\r\n  return {\r\n    viewId: col.viewId,\r\n    refId: col.refId,\r\n    collectionName: sliceViewFromName(col.collectionName),\r\n    collectionNameView: col.collectionNameView,\r\n    altsid: col.altsid,\r\n    isSinked: col.isSinked,\r\n    tags: col.tags,\r\n    viewType: col.viewType,\r\n    dimOrder: col.keySets,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    isSelected: false,\r\n    isEditingName: false,\r\n    destinations: [],\r\n    currentMode: {\r\n      isAltering: false,\r\n      isEditing: false,\r\n      isLiveEditing: false,\r\n      isCloning: false,\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  fetchAlternativesNotID,\r\n} from '../util/alternatives';\r\nimport {\r\n  addFieldToDatum,\r\n  removeFieldFromDatum,\r\n} from '../util/util';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  alternatives: [],\r\n  alternativesFetched: false,\r\n  clippedAlternatives: [],\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  let newAlternativesList;\r\n  let alternative;\r\n  let parallelData;\r\n  let index;\r\n\r\n  switch (action.type) {\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n        .set('alternativesFetched', false)\r\n        .set(\"alternatives\", Immutable.fromJS([]))\r\n        .set(\"clippedAlternatives\", Immutable.fromJS([]))\r\n  case appConstants.get('FETCH_ALTERNATIVES'):\r\n    return state\r\n        .set('alternatives', Immutable.fromJS(action.payload))\r\n        .set('alternativesFetched', true);\r\n\r\n  case appConstants.get('ADD_NEW_ALTERNATIVES'):\r\n    return state.update('alternatives',\r\n      (alternatives) => {\r\n        return alternatives.push(Immutable.fromJS(action.payload));\r\n      });\r\n      \r\n  case appConstants.get('UPDATE_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload.viewId) {\r\n          return alternative.mergeDeepWith((prev, next, key) => {\r\n            if (key==='isSelected') {\r\n              return prev;\r\n            }\r\n            return next;\r\n          }, Immutable.fromJS(action.payload.alternative));\r\n        }\r\n        return alternative;\r\n      }));\r\n\r\n  case appConstants.get('SELECT_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isSelected'], true)\r\n    );\r\n\r\n  case appConstants.get('DESELECT_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isSelected'], false)\r\n    );\r\n    \r\n  case appConstants.get('HOVER_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload.viewId) {\r\n          return alternative.set('isHovered', true);\r\n        }\r\n        return alternative.set('isHovered', false);\r\n      })\r\n    );\r\n\r\n  case appConstants.get('DEHOVER_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isHovered'], false)\r\n    );\r\n\r\n  case appConstants.get('DEHOVER_ALL_ALTERNATIVES'):\r\n    return state.update('alternatives', (alternatives) => alternatives.map((alternative) => \r\n      alternative.set('isHovered', false)));\r\n\r\n  case appConstants.get('DESELECT_ALL_ALTERNATIVES'):\r\n    return state.update('alternatives', (alternatives) => alternatives.map((alternative) => \r\n      alternative.set('isSelected', false)));\r\n  \r\n  case appConstants.get('CLIP_ALTERNATIVE'):\r\n    return state.update('clippedAlternatives',\r\n      (clippedAlternatives) => clippedAlternatives.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('REMOVE_ALTERNATIVE'):\r\n      return state.set('alternatives', fetchAlternativesNotID(\r\n        state.get('alternatives'), action.payload\r\n      ));\r\n  \r\n  case appConstants.get('CLEAR_ALTS_CLIPBOARD'):\r\n    return state.update('clippedAlternatives', (clippedAlternatives) => clippedAlternatives.clear());\r\n\r\n  case appConstants.get('TOGGLE_ALT_VIEW'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload) {\r\n          return alternative.set('altView', !alternative.get('altView'));\r\n        }\r\n        return alternative;\r\n      }));\r\n\r\n  case appConstants.get('SET_LOADING_STATE'):\r\n    return state.update('alternatives', (alternatives) => \r\n      alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isLoading'], action.payload.isLoading)\r\n    );\r\n      \r\n  case appConstants.get('ALTER_ALTERNATIVE'):\r\n    return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n      if (alternative.get('viewId') === action.payload.alternativeID) {\r\n        return alternative.setIn(['parallelData', action.payload.parameter], action.payload.newValue);\r\n      }\r\n      return alternative;\r\n    }));\r\n\r\n  case appConstants.get('ADD_DATA_FIELD'):\r\n    return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n      if (alternative.get('viewId') === action.payload.alternative.get('viewId')) {\r\n        parallelData = action.payload.alternative.get('parallelData').toJS();\r\n        return alternative.setIn(['parallelData'], Immutable.fromJS(addFieldToDatum(parallelData, action.payload.field, \r\n          Object.assign(alternative.get('params').toJS(), alternative.get('outputs').toJS()))\r\n        ));\r\n      }\r\n      return alternative;\r\n    }));\r\n\r\n  case appConstants.get('REMOVE_DATA_FIELD'):\r\n    return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n      if (alternative.get('viewId') === action.payload.alternative.get('viewId')) {\r\n        parallelData = action.payload.alternative.get('parallelData').toJS();\r\n        return alternative.setIn(['parallelData'], Immutable.fromJS(removeFieldFromDatum(parallelData, action.payload.field)));\r\n      }\r\n      return alternative;\r\n    }));\r\n\r\n  case appConstants.get('ORDER_ALTERNATIVES'):\r\n    return state.update('alternatives',\r\n      (alternatives) => {\r\n        index = alternatives.findIndex((alt) => alt.get('viewId') === action.payload);\r\n        alternative = alternatives[index];\r\n        newAlternativesList = alternatives.delete(index).push(alternative);\r\n        return newAlternativesList;\r\n      });\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * layout for the collection id is determined\r\n * @param {ImmutableMap} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const getLayoutForCollection = memoize((layouts, collectionId) => (\r\n  layouts.get('gridLayout').find((layout) => layout.get('i') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * layout for the collection id is determined\r\n * @param {ImmutableMap} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const getLayoutForCollectionFromClipboard = memoize((layouts, collectionId) => (\r\n  layouts.get('layoutClipboard').find((layout) => layout.get('i') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * removes the layout of a collection from the list\r\n * @param {ImmutableList} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableList}\r\n */\r\nexport const deleteLayoutForCollection = memoize((layouts, collectionId) => (\r\n  layouts.filter((layout) => (\r\n    layout.get('i') !== collectionId\r\n  ))\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * compacts the layout list\r\n * @param {ImmutableList} layouts\r\n * @return {ImmutableList}\r\n */\r\nexport const compactCollectionLayouts = (gridLayout) => {\r\n  let x = 0;\r\n  let y = 0;\r\n  let layouts = gridLayout.toJS();\r\n\r\n  for(var j=0; j<layouts.length; j++) {\r\n    layouts[j].w = 3;\r\n    layouts[j].h = 5;\r\n\r\n    if (x < 8) {\r\n      layouts[j].x = x;\r\n      layouts[j].y = y;\r\n      x = x + layouts[j].w;\r\n    } else {\r\n      x = 0;\r\n      layouts[j].x = x;\r\n      layouts[j].y = y;\r\n      x = x + layouts[j].w;\r\n      y = y + layouts[j].h;\r\n    }\r\n  }\r\n\r\n  return layouts;\r\n}\r\n\r\nexport const updateLayoutAddMaxHeightAndWidth = (gridLayout, layoutId) => {\r\n  let layouts = gridLayout.toJS();\r\n  for (let i = 0; layouts.length > i; i++) {\r\n    if (layouts[i].i === layoutId) {\r\n      layouts[i].maxH = 14\r\n      layouts[i].maxW = 6 \r\n    }\r\n  }\r\n  return gridLayout;\r\n}\r\n","import appConstants from '../constants/appConstants';\r\nimport layoutConstants from '../constants/layout';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  deleteLayoutForCollection,\r\n  compactCollectionLayouts\r\n} from '../util/layouts';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  gridLayout: [],\r\n  layoutClipboard: [],\r\n  layoutsFetched: false,\r\n  maxColumns: layoutConstants.get('DEFAULT_MAX_COLUMNS'),\r\n  \r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n        .set(\"layoutsFetched\", false)\r\n        .set('gridLayout', Immutable.fromJS([]))\r\n        .set('layoutClipboard', Immutable.fromJS([]))\r\n        .set('maxColumns', Immutable.fromJS(layoutConstants.get('DEFAULT_MAX_COLUMNS')))\r\n  case appConstants.get('FETCH_LAYOUT'):\r\n    return state.set('gridLayout', Immutable.fromJS(action.payload))\r\n      .set('layoutsFetched', true);\r\n\r\n  case appConstants.get('UPDATE_MAX_COLUMNS'):\r\n    return state.set('gridLayout', Immutable.fromJS(action.layout))\r\n      .set('maxColumns', action.width)\r\n\r\n  case appConstants.get('TOGGLE_DRAGGING'):\r\n    return state.set('dragging', !state.get('dragging'));\r\n\r\n  case appConstants.get('DELETE_COLLECTION'):\r\n    return state.set('gridLayout', deleteLayoutForCollection(state.get('gridLayout'), action.payload));\r\n\r\n  case appConstants.get('INSERT_LAYOUT'):\r\n    return state.update('gridLayout', (gridLayout) =>\r\n      gridLayout.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('SAVE_LAYOUT'):\r\n    return state.update('layoutClipboard', (layoutClipboard) =>\r\n      layoutClipboard.push(Immutable.fromJS(action.payload))\r\n    );\r\n\r\n  case appConstants.get('GATHER_ALL_COLLECTIONS'):\r\n    return state.set('gridLayout', Immutable.fromJS(compactCollectionLayouts(state.get('gridLayout'))));\r\n  case appConstants.get(\"UPDATE_LAYOUTS\"):\r\n      // updateLayoutAddMaxHightAndWIdth(state.get('gridLayout'), action.payload)\r\n      return state;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nconst initialState = Immutable.fromJS({\r\n  projects: [],\r\n  projectFetched: false,\r\n  projectLoaded: false,\r\n  isCreating: false,\r\n  showContextMenu: false,\r\n  showEditBox: false,\r\n  editProject: null,\r\n  selectedProject: null,\r\n  contextMenuPosX: 0,\r\n  contextMenuPosY: 0,\r\n  showProjectContextMenu: false,\r\n  contextMenuSelectedProject: null \r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n    switch (action.type) {\r\n\r\n        case appConstants.get('FETCH_PROJECT'):\r\n            return state.set('projects', Immutable.fromJS(action.payload.projects))\r\n                .set('projectLoaded', action.payload.db_loaded)\r\n                .set('projectFetched', true);\r\n        case appConstants.get('SELECT_PROJECT'):\r\n            return state.set('projectLoaded', true).set('selectedProject', action.payload)\r\n\r\n        case appConstants.get(\"CREATING_PROJECT\"):\r\n            return state.set(\"isCreating\", !state.get(\"isCreating\"));\r\n        case appConstants.get(\"DELETE_PROJECT\"):\r\n            return state.set('projects', state.get('projects').filter(project => project.get('id') !== action.payload));\r\n        case appConstants.get(\"PROJECT_EDIT_BOX\"):\r\n            return state.set(\"showEditBox\",  !state.get(\"showEditBox\")).set(\"editProject\", action.payload);\r\n        case appConstants.get(\"UPDATE_PROJECT\"):\r\n             const indexOfListToUpdate  = state.get(\"projects\").findIndex(project => {\r\n                 return project.get(\"id\") === action.payload.projectId\r\n             })\r\n            return state.set(\"showEditBox\", !state.get(\"showEditBox\")).setIn([\"projects\", indexOfListToUpdate, \"name\"], action.payload.projectName).setIn([\"projects\", indexOfListToUpdate, \"description\"], action.payload.projectDescription);\r\n        case appConstants.get(\"SHOW_PROJECT_CONTEXT_MENU\"):\r\n            return state.set(\"contextMenuPosX\", action.payload.xPos).set(\"contextMenuPosY\",  action.payload.yPos).set(\"showProjectContextMenu\", true).set(\"contextMenuSelectedProject\", action.payload.project);\r\n        case appConstants.get(\"HIDE_PROJECT_CONTEXT_MENU\"):\r\n            return state.set(\"contextMenuPosX\", 0).set(\"contextMenuPosY\",  0).set(\"showProjectContextMenu\", false).set(\"contextMenuSelectedProject\", null);\r\n        default:\r\n            return state;\r\n  }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  connected: false,\r\n  websocket: null\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  \tswitch (action.type) {\r\n\r\n\t  case appConstants.get('OPEN_WEB_SOCKET_CONNECTION'):\r\n\t    return Immutable.fromJS({\r\n\t      connected: true,\r\n\t\t});\r\n\t\t\r\n\t  case appConstants.get('SET_NEW_WEBSOCKET'):\r\n\t  \treturn Immutable.fromJS({\r\n\t      websocket : action.payload,\r\n\t\t});\r\n\t\t\r\n\t  default:\r\n\t    return state;\r\n  \t}\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  headerShow: false,\r\n  listShow: false,\r\n  headerX: 0,\r\n  headerY: 0,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get('SHOW_HEADER'):\r\n    return state.set('headerShow', true)\r\n      .set('headerX', action.headerX)\r\n      .set('headerY', action.headerY);\r\n\r\n  case appConstants.get('HIDE_HEADER'):\r\n    return state.set('headerShow', false)\r\n      .set('headerX', 0)\r\n      .set('headerY', 0);\r\n\r\n  case appConstants.get('SHOW_SINK_LIST'):\r\n    return state.set('listShow', true);\r\n\r\n  case appConstants.get('HIDE_SINK_LIST'):\r\n    return state.set('listShow', false);\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  successes: [],\r\n  warnings: [],\r\n  errors: [],\r\n  showHistory: false,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n  case appConstants.get('HANDLE_SUCCESS'):\r\n    return state.update('successes',\r\n      (successes) => successes.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('HANDLE_WARNING'):\r\n    return state.update('warnings',\r\n      (warnings) => warnings.push(Immutable.fromJS(action.payload))\r\n        .set('cursorChange', true));\r\n\r\n  case appConstants.get('HANDLE_ERROR'):\r\n    return state.update('errors',\r\n      (errors) => errors.push(Immutable.fromJS(action.payload))\r\n        .set('cursorChange', true)\r\n        .set('freezeApp', true));\r\n\r\n  case appConstants.get('TOGGLE_HISTORY'):\r\n    return state.set('showHistory', !state.get('showHistory'));\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  showSettings: false,\r\n  alternativeImageSize: 180,\r\n  collectionCompactionType: 'none',\r\n  preventCollision: true,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n      return state\r\n              .set('showSettings', false)\r\n    case appConstants.get('FETCH_SETTINGS'):\r\n      return state\r\n        .set('alternativeImageSize', Immutable.fromJS(action.payload.alternativeImageSize))\r\n        .set('collectionCompactionType', Immutable.fromJS(action.payload.collectionCompactionType))\r\n        .set('preventCollision', Immutable.fromJS(action.payload.preventCollision));\r\n\r\n    case appConstants.get('TOGGLE_SETTINGS'): \r\n      return state.set('showSettings', !state.get('showSettings'));\r\n\r\n    case appConstants.get('SET_ALTERNATIVE_SIZE'):\r\n        return state.set('alternativeImageSize', action.payload);\r\n\r\n    case appConstants.get('SET_COMPACTION_TYPE'):\r\n        return state.set('collectionCompactionType', action.payload);\r\n\r\n    case appConstants.get('SET_COLLISION_PREVENTION'):\r\n        return state.set('preventCollision', action.payload);\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};","/**\r\n * remove an element (with id = queryId) from the queries list\r\n * @param {ImmutableList} queries\r\n * @param {string} queryId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchQueriesNotID = (queries, queryId) => (\r\n    queries.filter((query) => query.get('id') !== queryId)\r\n  );\r\n\r\n/**\r\n * remove an element (with id = brushId) from the brushes list\r\n * @param {ImmutableList} brushes\r\n * @param {string} brushId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchBrushesNotID = (brushes, brushId) => (\r\n  brushes.filter((brush) => brush.get('id') !== brushId)\r\n);","import appConstants from '../constants/appConstants';\r\nimport {\r\n  fetchQueriesNotID,\r\n  fetchBrushesNotID,\r\n} from '../util/queries';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    queries: [],\r\n    brushes: [],\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n              .set('queries', Immutable.fromJS([]))\r\n              .set('brushes',  Immutable.fromJS([]))\r\n    case appConstants.get('ADD_QUERY'): \r\n      return state.update('queries', (queries) => queries.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('REMOVE_QUERY'): \r\n      return state.set('queries', fetchQueriesNotID(state.get('queries'), action.payload.queryId));\r\n    \r\n    case appConstants.get('CLEAR_ALL_QUERIES'): \r\n      return state.update('queries', (queries) => queries.clear());\r\n    \r\n    case appConstants.get('ADD_BRUSH'): \r\n      return state.update('brushes', (brushes) => brushes.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('REMOVE_BRUSH'): \r\n      return state.set('brushes', fetchBrushesNotID(state.get('brushes'), action.payload.queryId));\r\n    \r\n    case appConstants.get('CLEAR_ALL_BRUSHES'): \r\n      return state.update('brushes', (brushes) => brushes.clear());\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  keySets: [],\r\n  valueBands: [],\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n\r\n  switch (action.type) {\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n              .set('keySets', Immutable.fromJS([]))\r\n              .set('valueBands',  Immutable.fromJS([]))\r\n  case appConstants.get('FETCH_KEY_SETS'):\r\n    return state.set('keySets', Immutable.fromJS(action.payload));\r\n\r\n  case appConstants.get('FETCH_VALUE_BANDS'):\r\n    return state.set('valueBands', Immutable.fromJS(action.payload));\r\n\r\n  case appConstants.get('SET_VALUE_BANDS'):\r\n    return state.setIn(['valueBands', action.payload.dim, action.payload.end], Immutable.fromJS(action.payload.val));\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    showSearch: false,\r\n    showValidation: false,\r\n    missMatchCollectionNames: [],\r\n})\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch(action.type){\r\n        case appConstants.get(\"FETCHING_PROJECT\"):\r\n            return state\r\n                    .set('showSearch', false)\r\n                    .set('showValidation', false)\r\n                    .set(' missMatchCollectionNames', Immutable.fromJS([]))\r\n        case appConstants.get('TOGGLE_SEARCH'):\r\n            return state.set(\"showSearch\", !state.get(\"showSearch\")).set(\"showValidation\", false);\r\n\r\n        case appConstants.get(\"SEARCH_COLLECTION_FALID\"):\r\n            return state.set(\"showValidation\", true).set('missMatchCollectionNames', Immutable.fromJS(action.payload));\r\n\r\n        case appConstants.get(\"EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH\"):\r\n            return state.set(\"missMatchCollectionNames\", []);\r\n\r\n        case appConstants.get(\"SEARCHED_COLLECTION\"):\r\n            return state.set(\"showValidation\", false);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    user: {},\r\n    userFetched: false,\r\n    userLoggedIn: false,\r\n})\r\n\r\n\r\nexport default (state = initialState, action={}) => {\r\n    switch(action.type) {\r\n        \r\n        case appConstants.get('FETCH_USER'):\r\n            return state.set('user', Immutable.fromJS(action.payload)).set(\"userFetched\", true).set(\"userLoggedIn\", true);\r\n\r\n        case appConstants.get('NOT_FETCH_USER'):\r\n            return state.set('userFetched', false);\r\n\r\n        case appConstants.get(\"LOGOUT_USER\"):\r\n            return state.set(\"userLoggedIn\", false).set('user', Immutable.fromJS({})).set(\"userFetched\", false)\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n} ","import {combineReducers} from 'redux';\r\nimport collections from './collections';\r\nimport alternatives from './alternatives';\r\nimport layouts from './layout';\r\nimport projects from './projects';\r\nimport websocket from './websocket';\r\nimport header from './header';\r\nimport notifications from './notifications';\r\nimport settings from './settings';\r\nimport queries from './queries';\r\nimport scales from './scales';\r\nimport search from './search';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  collections,\r\n  alternatives,\r\n  layouts,\r\n  projects,\r\n  websocket,\r\n  header,\r\n  notifications,\r\n  settings,\r\n  queries,\r\n  scales,\r\n  search,\r\n  auth,\r\n});\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport app from './reducers/app';\r\n\r\n// const composeEnhancers = compose;\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n\treturn createStore(\r\n\t\tapp, /* preloadedState, */ \r\n\t\tcomposeEnhancers(\r\n\t\t\tapplyMiddleware(thunk)\t\t\r\n\t\t)\r\n\t);\r\n}","import React, {PureComponent} from 'react';\r\nimport * as THREE from 'three';\r\nimport * as GLTFLoader from 'three-gltf-loader';\r\nimport {urls} from '../../constants/urls';\r\n\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\n/**\r\n * @class Scene\r\n * @extends React.Component\r\n * @description scene component renders a 3d view of the alternative using three.js library\r\n */\r\nclass Scene extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color(0xededed);\r\n\r\n    this.camera = new THREE.PerspectiveCamera(80, 1, 0.001, 1000);\r\n    this.scene.add(this.camera);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\r\n    this.renderer.setSize(this.props.width, this.props.height);\r\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\r\n\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.renderer.domElement.setAttribute('style', this.props.customStyle);\r\n    this.initializeOrbits();\r\n\r\n    this.loader = new GLTFLoader();\r\n    this.loader.load(urls.get('getHost') + this.props.gltf, (gltf) => {\r\n      this.scene.add(gltf.scene);\r\n      this.scene.add(new THREE.AmbientLight( 0xd60000));\r\n      this.scene.traverse((child) => {\r\n        if (child instanceof THREE.Mesh) {\r\n          child.geometry.center();\r\n          child.material = new THREE.MeshPhongMaterial({\r\n            color: 0x4f0303,\r\n            emissive: 0x000000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n          });\r\n        }\r\n        this.initializeCamera();\r\n      });\r\n    });\r\n\r\n    this.animate();\r\n\r\n    window.onresize = () => {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n      this.renderer.setSize(width, height);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.frameId);\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  initializeOrbits = () => {\r\n    this.controls.rotateSpeed = 1.0;\r\n    this.controls.zoomSpeed = 1.2;\r\n    this.controls.panSpeed = 0.8;\r\n  }\r\n\r\n  initializeCamera = () => {\r\n    const object = this.scene.children[1].children[0];\r\n    const offset = 20;\r\n    const boundingBox = new THREE.Box3();\r\n\r\n    // set bounding box of object\r\n    // this will be used to setup controls and camera\r\n    boundingBox.setFromObject( object ); \r\n\r\n    // const center = boundingBox.getCenter();\r\n    const size = boundingBox.getSize();\r\n\r\n    // get the max side of the bounding box (fits to width OR height as needed )\r\n    const maxDim = Math.max( size.x, size.y, size.z );\r\n    const fov = this.camera.fov * ( Math.PI / 180 );\r\n\r\n    let cameraZ = Math.abs( maxDim / 4 * Math.tan( fov * 2 ) );\r\n    cameraZ *= offset; // zoom out a little so that objects don't fill the screen\r\n    this.camera.position.z = cameraZ;\r\n\r\n    const minZ = boundingBox.min.z;\r\n    const cameraToFarEdge = ( minZ < 0 ) ? -minZ + cameraZ : cameraZ - minZ;\r\n\r\n    this.camera.far = cameraToFarEdge * 3;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  animate = () => {\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n    this.renderer.setPixelRatio( window.devicePixelRatio );\r\n    this.renderer.gammaOutput = true;\r\n    this.renderer.gammaFactor = 2.2;\r\n\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  handleControls = (e) => {\r\n    e.stopPropagation();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseDownCapture={this.handleControls}\r\n        className = \"boardCanvas\"\r\n        ref={(mount) => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","import Alternative from './Alternative';\r\n\r\nexport default Alternative;\r\n","import React, {PureComponent} from 'react';\r\nimport styles from './alternative.module.scss';\r\nimport classnames from 'classnames';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport {getAlternativeImageURL} from '../../../util/alternatives';\r\nimport Scene from '../../scene/Scene';\r\nimport {\r\n  MdRemoveRedEye,\r\n  MdClear,\r\n} from 'react-icons/md';\r\nimport debounce from 'lodash/debounce';\r\nimport { fromJS } from 'immutable';\r\n\r\n// TODO: test: functional component\r\n\r\n/**\r\n * @class Alternative\r\n * @extends React.PureComponent\r\n * @description presentational component for a single alternative in a collection\r\n */\r\nclass Alternative extends PureComponent {\r\n\r\n  state = {\r\n    transform: null,\r\n    left: 0,\r\n    top: 0,\r\n    wasDragged: false,\r\n  }\r\n  /**\r\n   * @function toggleAltView\r\n   * @description switches the 3d-view for the alternative with the viewID\r\n   * @memberof Alternative\r\n   * @param {event} e\r\n   */\r\n  toggleAltView = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.props.toggleAltView(this.props.alternative.get('viewId'));\r\n  }\r\n\r\n\r\n  \r\n /**\r\n  * @function handleDoubleClick\r\n  * @description restores the alternative (i.e. round-trip)\r\n  * @memberof Alternative\r\n  * @param {event} e\r\n  */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.restoreAlternative(this.props.alternative.get('viewId'));\r\n\r\n  }\r\n\r\n  handleHover = (hasEntered, e) => {\r\n      if (hasEntered) {\r\n        this.props.hoverAlternative(this.props.alternative.get('viewId'), this.props.alternative.get('refId'));\r\n      } else {\r\n        this.props.dehoverAlternative(this.props.alternative.get('viewId'), this.props.alternative.get('refId'));\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @function handleDeleteClick\r\n   * @description deletes **this** alternative\r\n   * @memberof Alternative\r\n   * @param {event} e - triggering event\r\n   */\r\n  handleDeleteClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.props.removeAlternativesFromCollection(fromJS([this.props.alternative.toJS()]));\r\n  }\r\n\r\n  /**\r\n   * @function handleDragStart\r\n   * @description prevents the ghost image during dragging\r\n   * @memberof Alternative\r\n   * @param {event} e - drag event\r\n   */\r\n  handleDragStart = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  move = (e) => {\r\n    const element = document.getElementById(this.props.alternative.get(\"viewId\"))\r\n    if (element != null && this.state.top && this.state.left) {\r\n      if (this.state.left !== element.style.left || this.state.top !== element.style.top) {\r\n        let topState    = this.state.top.replace(\"px\", \"\");\r\n        let leftState   = this.state.left.replace(\"px\", \"\");\r\n        let elementTop  = element.style.top.replace(\"px\", \"\");\r\n        let elementLeft = element.style.left.replace(\"px\", \"\");\r\n        \r\n        topState     = parseInt(topState);\r\n        leftState    = parseInt(leftState);\r\n        elementTop   = parseInt(elementTop);\r\n        elementLeft  = parseInt(elementLeft);\r\n        let topDiff  =  topState  >=  elementTop  ?   topState  -  elementTop  : elementTop  - topState;\r\n        let leftDiff =  leftState >= elementLeft  ?   leftState  -  elementLeft : elementLeft - leftState;  \r\n\r\n        if (topDiff >= 6 || leftDiff >= 6) {\r\n          if (!this.state.wasDragged) {\r\n            this.setState({\r\n              wasDragged:  true,\r\n            });\r\n          }\r\n        }   \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {Object} e\r\n   *  \r\n   */\r\n  handleMouseDown = (e) => {\r\n    const el=e.target\r\n    const element = document.getElementById(this.props.alternative.get(\"viewId\"))\r\n\r\n    this.setState({\r\n      transform: element.style.transform,\r\n      left:  element.style.left,\r\n      top: element.style.top\r\n    })\r\n    el.addEventListener('mousemove',this.move, true)\r\n  }\r\n\r\n \r\n/**\r\n * \r\n * @param {object} e\r\n * \r\n */\r\n  handleMouseUp = (e) => {\r\n    e.stopPropagation();\r\n    const el=e.target\r\n    if (this.props.alternative.get('altView') === false  && !this.state.wasDragged) {\r\n      if (!this.props.alternative.get('isSelected')) {\r\n        this.props.selectAlternative(this.props.alternative.get('viewId'));\r\n      } else {\r\n        this.props.deselectAlternative(this.props.alternative.get('viewId'));\r\n      }\r\n    } else {\r\n      this.setState({\r\n        top: 0,\r\n        left: 0,\r\n        wasDragged: false,\r\n      });\r\n      el.removeEventListener('mousemove', this.move, true)\r\n    }  \r\n  }\r\n\r\n  /**\r\n   * @description The component should render the view for a single alternative.\r\n   * @returns {ReactPureComponent} an alternative component\r\n   */\r\n  render() {\r\n    // this is to figure out which style to apply to the current alternative\r\n    // alternative selected has a highlit border, other alternatives with the same (ref) id\r\n    // are highlighted with a more muted border. See _colors.scss in styles folder\r\n    let situation = 'C';\r\n\r\n    if (this.props.alternative.get('isSelected')) {\r\n      situation = 'A'\r\n    } else if (!this.props.alternative.get('isSelected') && this.props.selectedAlts.includes(this.props.alternative.get('refId'))) {\r\n      situation = 'B'\r\n    }\r\n \r\n    const selectStyleName = classnames({\r\n      [styles['alternative']]: situation === 'C',\r\n      [styles['alternative-selected']]: situation === 'A',\r\n      [styles['alternative-selected-related']]: situation === 'B',\r\n    });\r\n\r\n    let altWidth = this.props.layoutForAlt ? this.props.layoutForAlt.w : 1;\r\n    let altHeight = this.props.layoutForAlt ? this.props.layoutForAlt.h : 1;\r\n    \r\n    const altDimensionStyle = {width: (this.props.alternativeImageSize - 12) * altWidth, height: (this.props.alternativeImageSize - 20) * altHeight};\r\n    const imgDimensionStyle = {width: (this.props.alternativeImageSize - 22) * altWidth, height: (this.props.alternativeImageSize - 30) * altHeight};\r\n    const loadingDimensionStyle = {marginTop: '37.5%', marginLeft: '37.5%'};\r\n\r\n    return (\r\n      <div\r\n        id={this.props.alternative.get('viewId')}\r\n        className={\"alt \" + \"alt-ref-\" + this.props.alternative.get(\"refId\") + \" alt-view-\" + this.props.alternative.get('viewId') + \" \" + selectStyleName}\r\n        style={altDimensionStyle}\r\n        onDoubleClick={this.handleDoubleClick}\r\n        onMouseEnter={debounce(this.handleHover.bind(this, true))} \r\n        onMouseLeave={debounce(this.handleHover.bind(this, false))}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        {(situation === 'A' || situation === 'E') && this.props.alternative.get('isLoading') === false ? \r\n          <MdRemoveRedEye className={styles['alternative-toggle1']} onMouseUp={this.toggleAltView} /> : null}\r\n        {(situation === 'A' || situation === 'E') && this.props.alternative.get('isLoading') === false ? \r\n          <MdClear className={styles['alternative-toggle2']}  onMouseUp={this.handleDeleteClick}/> : null}\r\n        <div>\r\n          {this.props.alternative.get('altView') && (situation === 'A' || situation === 'E') ?\r\n            <Scene width={imgDimensionStyle.width} height={imgDimensionStyle.height} customStyle = {'padding: 5px'} \r\n              className={styles['alternative-image']} \r\n              gltf={this.props.alternative.get('gltf')} \r\n              id={this.props.alternative.get('altView')}/> : \r\n              this.props.alternative.get('isLoading') === true ? \r\n              <div><CircularProgress style={loadingDimensionStyle}/></div> : \r\n            <img \r\n              onDragStart={this.handleDragStart} // to prevent dragging ghost image\r\n              src={getAlternativeImageURL(this.props.alternative)}\r\n              style={imgDimensionStyle}\r\n              className={styles['alternative-image']}\r\n              alt={'img-' + this.props.alternative.get('viewId')}\r\n            />\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alternative;\r\n","import React, {PureComponent} from 'react';\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport styles from './alternatives.module.scss';\r\nimport Alternative from './alternative';\r\nimport {generateLayoutForAlternatives} from '../../util/alternatives';\r\nimport {calculateWidth} from '../../util/collections';\r\nimport layoutConstants from '../../constants/layout';\r\n\r\n/**\r\n * @class Alternatives\r\n * @extends React.PureComponent\r\n * @description presentational component of the all the alternatives within the collection. all alternatives are rendered within a react-grid to enable drag & drop\r\n */\r\nclass Alternatives extends PureComponent {\r\n  /**\r\n   * @constructor\r\n   * @param {object} props - component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      layouts: [],\r\n      // wasDragged: false,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function renderAlternatives\r\n   * @description Using viewId for key's as key must be unique for each item rendered\r\n   * @memberof Alternatives\r\n   * @param {ImmutableList} alternativesInCollection - a alist of alternative viewIDs in the collection\r\n   * @param {Object} props\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  renderAlternatives = (alternativesInCollection, props={}) => (\r\n    alternativesInCollection.map((alternative) => (\r\n      <div \r\n          key={alternative.get('viewId')}\r\n          data-grid={this.state.layouts.find((l) => {return l.i === alternative.get('viewId')})}>\r\n        <Alternative\r\n          isResizable={true} \r\n          alternative={alternative}\r\n          key={alternative.get('viewId')}\r\n          layoutForAlt={this.state.layouts.find((l) => {return l.i === alternative.get('viewId')})}          \r\n          {...props} />\r\n      </div>\r\n    )));\r\n\r\n  /**\r\n   * @function onLayoutChange\r\n   * @description updates the collection layouts when triggered\r\n   * @memberof Alternatives\r\n   * @param {object} layout - a ReactGridLayout layout object\r\n   */\r\n  onLayoutChange = (layout) => {\r\n    this.setState({layouts: layout});\r\n  }\r\n\r\n  // handleAltDrag = (object) => {\r\n  //   if(!this.state.wasDragged){\r\n  //     this.setState({\r\n  //       wasDragged: true,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // changeWasDragged = () => {\r\n  //   this.setState({\r\n  //     wasDragged: false,\r\n  //   })\r\n  // }\r\n\r\n  /**\r\n   * @description renders the view for all the alternatives within the collections. ReactGridLayout is used to allow for drag within the collections\r\n   * @returns {ReactPureComponent} all alternative components as ReactGridLayout items\r\n   */\r\n  render() {\r\n    // what the width should be\r\n    const width = calculateWidth(this.props.layoutForCollection.get('w'), 5, layoutConstants.get('CELL_DIM'), 0);\r\n    const numColumns = Math.floor((width - 40) / 170);\r\n    \r\n    const alternativesLayout = generateLayoutForAlternatives(\r\n      this.props.altsInCollection.map(alt => alt.get('viewId')),\r\n      numColumns\r\n    );\r\n    \r\n    return (\r\n      <ReactGridLayout\r\n        width={numColumns * this.props.alternativeImageSize}\r\n        rowHeight={(this.props.alternativeImageSize - 20)}\r\n        isResizable\r\n        cols= {numColumns}\r\n        onLayoutChange={this.onLayoutChange}\r\n        className={styles['alternative-container']}\r\n        item={this.props.altsInCollection.size}\r\n        compactType={'horizontal'}\r\n        margin={[10, 10]}\r\n        containerPadding={this.margin}\r\n        layout={alternativesLayout.toJS()}\r\n        useCSSTransforms={false}\r\n      >\r\n        {this.renderAlternatives(this.props.altsInCollection, {\r\n          alternativeImageSize: this.props.alternativeImageSize,\r\n          selectAlternative: this.props.selectAlternative,\r\n          deselectAlternative: this.props.deselectAlternative,          \r\n          hoverAlternative: this.props.hoverAlternative,\r\n          dehoverAlternative: this.props.dehoverAlternative,\r\n          removeAlternativesFromCollection: this.props.removeAlternativesFromCollection,\r\n          toggleAltView: this.props.toggleAltView,\r\n          restoreAlternative: this.props.restoreAlternative,\r\n          selectedAlts: this.props.selectedAlts,\r\n        })}\r\n      </ReactGridLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alternatives;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Alternatives from '../components/alternatives/Alternatives';\r\nimport {renderIf} from '../util/util';\r\n\r\nclass AlternativeContainer extends Component {\r\n    render() {\r\n        return (\r\n            renderIf(\r\n                this.props.alternativeImageSize,\r\n                <Alternatives {...this.props} />\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alternativeImageSize: state.settings.get('alternativeImageSize'),\r\n  })\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(AlternativeContainer);","import React, { PureComponent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n/**\r\n * @class MessageBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the messageBox pane, which is a popup window\r\n */\r\nclass MessageBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true,\r\n          pressedOk: false, \r\n          pressedcancel: false,\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @function handleOk\r\n   * @memberof messageBox\r\n   * @description confirming or cancelling the popup window content\r\n   */\r\n  handleOk = () => {\r\n    if (this.props.confirmAction != null) {\r\n      this.props.confirmAction();\r\n    }\r\n    \r\n    this.setState({open: false});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({open: false});\r\n    if(this.props.confirmAction != null) {\r\n      this.props.handleDeleteCancel();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @description renders the view for messageBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Warning\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.props.message}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleCancel} color=\"primary\" >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleOk} color=\"primary\" autoFocus>\r\n                  OK\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default MessageBox;","import * as React from \"react\";\r\n\r\nfunction SvgBrush(props) {\r\n  return (\r\n    <svg viewBox=\"1 1 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"brush_svg__cls-15\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={2.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.704 6.757h6.876\"\r\n      />\r\n      <path\r\n        className=\"brush_svg__cls-1\"\r\n        d=\"M12.924 6.754h.688a.69.69 0 01.688.688v1.374a.69.69 0 01-.688.688h-3.313a1.445 1.445 0 00-1.5 1.373v1.378\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.265}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"brush_svg__cls-16\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={1.587}\r\n        strokeLinecap=\"round\"\r\n        strokeMiterlimit={10}\r\n        d=\"M8.799 12.599v2.408\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgBrush;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCartesianProduct(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.825 8.042L7.94 3.928\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-7\"\r\n        d=\"M4.145 7.722l-.251-1.028h-.038l-.629 1.459-.85 1.33 1.33-.85 1.46-.629V7.97zM7.62 4.244l-1.029-.248v-.038l1.46-.629 1.333-.853-.853 1.333-.618 1.46H7.88z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M7.94 8.042L3.825 3.928\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-7\"\r\n        d=\"M7.62 7.722l-1.029.252v.034l1.46.633 1.333.85-.853-1.33-.618-1.448H7.88zM4.145 4.248l-.251 1.028H3.86l-.633-1.459-.85-1.333 1.33.853 1.46.629V4z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCartesianProduct;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCoords(props) {\r\n  return (\r\n    <svg viewBox=\"2 0 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.104 4.858v7.885M7.958 4.858v7.885\"\r\n      />\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        strokeDasharray=\"1.6,1.6\"\r\n        d=\"M9.813 4.858v7.885M11.67 4.858v7.885\"\r\n      />\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        d=\"M13.525 4.858v7.885\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCoords;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDirectEditRef(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M11.488 5.336h-1.265v-.87h1.265V3.16h.895v1.307h1.265v.869h-1.265v1.306h-.895z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.28575}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.355 1.499H1.734v5.57\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M5.86 1.495l-.644 1.021.035.023 1.68-.667 1.752-.38-1.752-.382L5.25.444l-.035.019z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.28575}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.677 13.649h4.618v-5.57\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M6.192 13.649l.624-1.029-.034-.023-1.684.667-1.752.381 1.752.381 1.68.667h.035z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.554 11.824V3.233\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={8.554}\r\n        cy={6.673}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.868 11.824V3.233\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={5.868}\r\n        cy={9.092}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.25 3.233v8.591\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={3.25}\r\n        cy={8.216}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDirectEditRef;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEditRef(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.839 10.432V1.841\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={8.839}\r\n        cy={5.281}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.153 10.432V1.841\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={6.153}\r\n        cy={7.7}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.536 1.841v8.591\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={3.536}\r\n        cy={6.824}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEditRef;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEditClone(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"editClone_svg__cls-7\"\r\n        d=\"M9.474 4.236H8.213v-.873h1.26V2.06h.896v1.303h1.261v.873h-1.26v1.303h-.9z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.54 10.724V2.129\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={6.54}\r\n        cy={5.573}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.858 10.724V2.129\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={3.858}\r\n        cy={7.989}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.237 2.129v8.595\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={1.237}\r\n        cy={7.116}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEditClone;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgParameterSpectra(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.187 1.471v8.892M5.903 1.398v8.897M8.677 1.471v8.892\"\r\n      />\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.21 7.841l2.712-4.157M8.715 6.031L5.922 3.684M5.907 8.531l2.808-2.5M5.93 6.187l2.785-.156M3.29 7.845l2.61.663M5.93 6.187L3.21 7.841\"\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={5.903}\r\n        cy={6.218}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.21 7.841l2.724-5.867M5.903 2.134l2.812 3.897M8.715 6.031L5.903 9.944M3.21 7.841l2.693 2.103\"\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={3.187}\r\n        cy={7.845}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={8.677}\r\n        cy={6.012}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgParameterSpectra;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPareto(props) {\r\n  return (\r\n    <svg viewBox=\"1 2 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        d=\"M13.09 13.143a5.762 5.327 0 01-4.194-1.753 5.762 5.327 0 01-1.467-4.034\"\r\n        fill=\"none\"\r\n        stroke=\"#131d1b\"\r\n        strokeWidth={0.265}\r\n        strokeMiterlimit={8.5}\r\n      />\r\n      <circle\r\n        transform=\"rotate(60)\"\r\n        className=\"pareto_svg__cls-2\"\r\n        cx={16.865}\r\n        cy={-3.434}\r\n        r={0.873}\r\n        fill=\"#fff\"\r\n        stroke=\"#131d1b\"\r\n        strokeWidth={0.2}\r\n        strokeMiterlimit={8.5}\r\n      />\r\n      <circle\r\n        r={0.873}\r\n        cy={8.936}\r\n        cx={7.536}\r\n        className=\"pareto_svg__cls-2\"\r\n        fill=\"#fff\"\r\n        stroke=\"#131d1b\"\r\n        strokeWidth={0.2}\r\n        strokeMiterlimit={8.5}\r\n      />\r\n      <circle\r\n        r={0.873}\r\n        cy={-2.033}\r\n        cx={14.403}\r\n        className=\"pareto_svg__cls-2\"\r\n        transform=\"rotate(60)\"\r\n        fill=\"#fff\"\r\n        stroke=\"#131d1b\"\r\n        strokeWidth={0.2}\r\n        strokeMiterlimit={8.5}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPareto;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPerturbation(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"perturbation_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.413 1.431v8.897M4.13 1.363v8.892M10.451 1.431v8.897M7.121 1.229v8.897M4.168 6.194l2.953-.145M1.413 5.439l2.743.682M7.185 6.022l3.266.347\"\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={1.413}\r\n        cy={5.439}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={10.451}\r\n        cy={6.369}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={4.13}\r\n        cy={6.182}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={7.121}\r\n        cy={6.049}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"perturbation_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M4.084 3.569l2.953-.149M1.329 2.81l2.74.682M7.102 3.393l3.265.347M4.084 8.967l2.953-.144M1.329 8.213l2.74.682M7.102 8.796l3.265.347\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPerturbation;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSketch(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M9.203 10.33V1.738\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={9.203}\r\n        cy={5.179}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.136 10.33V1.738\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={6.136}\r\n        cy={7.598}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.137 1.738v8.592\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={3.137}\r\n        cy={6.722}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-16\"\r\n        d=\"M1.754 4.238a.1.1 0 01.107 0l.076.038.149.072.3.13.576.251a3.429 3.429 0 003.43-.38c.17-.111.342-.226.51-.351.167-.126.316-.282.48-.404a6.096 6.096 0 00.472-.43 1.749 1.749 0 00.248-.275 1.273 1.273 0 01.335-.21 1.989 1.989 0 011.444 0 4.282 4.282 0 01.633.275c.099.053.194.114.29.175l.136.1.065.049.034.026v.08c0 .057-.06.046-.072.038h-.038l-.072-.034-.153-.065-.297-.13a3.147 3.147 0 00-.606-.178 1.375 1.375 0 00-1.337.316.518.518 0 00-.21.206c-.125.171-.251.38-.404.552a3.764 3.764 0 01-.499.488 5.608 5.608 0 01-.548.434 4.012 4.012 0 01-2.728.762 3.383 3.383 0 01-1.353-.465 2.362 2.362 0 01-.556-.43 4.972 4.972 0 01-.225-.27l-.103-.142c-.053-.106-.118-.122-.084-.228z\"\r\n        fill=\"#e30613\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSketch;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSpectralCartesianProduct(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M4.175 8.196l4.114-4.119\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-7\"\r\n        d=\"M4.495 7.876l-.252-1.033h-.038L3.576 8.33l-.853 1.334 1.333-.854 1.46-.628v-.035zM7.97 4.397l-1.03-.251v-.038l1.46-.629 1.333-.85-.85 1.33-.628 1.46h-.034z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.289 8.192L4.175 4.081\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-7\"\r\n        d=\"M7.97 7.872l-1.03.251v.038l1.46.63 1.33.853-.846-1.315-.629-1.46h-.034zM4.495 4.397l-.252 1.029h-.038l-.629-1.46-.85-1.352 1.33.85 1.46.632v.03z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.275 1.688v8.897M10.895 10.585V1.688\"\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={1.275}\r\n        cy={8.062}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={1.275}\r\n        cy={3.247}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={10.895}\r\n        cy={4.21}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={10.895}\r\n        cy={9.026}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSpectralCartesianProduct;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgTags(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 20 20\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <g fill=\"#1d1d1b\">\r\n        <path d=\"M10.334 6.107l-.153-.001a2.048 2.048 0 00-1.28.528L6.182 9.352a.754.754 0 000 1.058l2.459 2.46a.753.753 0 00.8.166.754.754 0 01-.128-.1l-2.458-2.458a.754.754 0 010-1.058l2.98-2.981c.15-.136.318-.246.498-.332z\" />\r\n        <path d=\"M11.679 6.106a2.048 2.048 0 00-1.281.529l-2.91 2.91a.754.754 0 000 1.059l2.457 2.46a.754.754 0 001.059 0l2.91-2.91a2.074 2.074 0 00.53-1.281l-.025-1.992a.77.77 0 00-.756-.757zm1.227.65a.884.884 0 01.006 0 .884.884 0 01.883.884.884.884 0 01-.883.884.884.884 0 01-.884-.884.884.884 0 01.878-.884z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgTags;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from './parallelMenu.module.scss';\r\nimport classnames from 'classnames';\r\nimport {IconContext} from 'react-icons';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nimport {\r\n    MdCreate,\r\n    MdSettings,\r\n    MdLightbulbOutline,\r\n    MdSearch,\r\n    MdLockOpen,\r\n    MdLockOutline,\r\n} from 'react-icons/md';\r\n\r\nimport {\r\n    Search,\r\n    Edit,\r\n    Generate,\r\n    Settings,\r\n    Brush,\r\n    Pareto,\r\n    Sketch,\r\n    EditRef,\r\n    EditClone,\r\n    DirectEditRef,\r\n    CartesianProduct,\r\n    SpectralCartesianProduct,\r\n    Sensitivity,\r\n    Perturbation,\r\n    ParameterSpectra,\r\n    Coords,\r\n} from '../../icons'\r\n\r\n\r\nconst colorCurrentCommand = styles.colorCurrentCommand;\r\n\r\nclass ParallelMenu extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            showSearch:   false,\r\n            showEdit:     false,\r\n            showGenerate: false,\r\n            showSettings: false,\r\n            showUnlock:   true,\r\n        }\r\n    }\r\n\r\n    handleClick = (group) => {\r\n\r\n        switch (group) {\r\n            case \"search\":\r\n                this.setState({\r\n                    showSearch: !this.state.showSearch,\r\n                    showEdit: false,\r\n                    showGenerate: false,\r\n                    showSettings: false,\r\n                });\r\n            break;\r\n\r\n            case \"edit\":\r\n                this.setState({\r\n                    showEdit: !this.state.showEdit,\r\n                    showSearch: false,\r\n                    showGenerate: false,\r\n                    showSettings: false,\r\n                });\r\n            break;\r\n            \r\n            case \"generate\":\r\n                this.setState({\r\n                    showGenerate: !this.state.showGenerate,\r\n                    showSearch: false,\r\n                    showEdit: false,\r\n                    showSettings: false,\r\n                });\r\n            break;\r\n            \r\n            case \"settings\":\r\n                this.setState({\r\n                    showSettings: !this.state.showSettings,\r\n                    showSearch: false,\r\n                    showGenerate: false,\r\n                    showEdit: false,\r\n                });\r\n            break;\r\n            case \"unlock\":\r\n                this.setState({\r\n                    showUnlock: false,\r\n                })\r\n            break;\r\n            case \"lock\":\r\n                this.setState({\r\n                    showUnlock: true,\r\n                })\r\n            break;\r\n            default:\r\n            break;\r\n        } \r\n    }\r\n\r\n    handleUnlockclick = () => {\r\n        this.props.lockAspectRatio(true);\r\n        this.handleClick(\"unlock\")\r\n    }\r\n\r\n    handleLockClick = () => {\r\n        this.props.lockAspectRatio(false);\r\n        this.handleClick(\"lock\")\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const searchButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showSearch === true,\r\n            [styles['button-hidden']]:  this.state.showSearch === false,\r\n        });\r\n\r\n        const editButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showEdit === true,\r\n            [styles['button-hidden']]:  this.state.showEdit === false,\r\n        });\r\n        \r\n        const generateButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showGenerate === true,\r\n            [styles['button-hidden']]:  this.state.showGenerate === false,\r\n        });\r\n\r\n        const settingsButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showSettings === true,\r\n            [styles['button-hidden']]:  this.state.showSettings === false,\r\n        });\r\n\r\n        const searchButtonStyle = (this.state.showSearch || this.props.isBrushing || this.props.isSampling ) ? {backgroundColor: colorCurrentCommand} : {};\r\n        const editButtonStyle = (this.state.showEdit || this.props.isSketching || this.props.isAltering || this.props.isLiveEditing || this.props.isCloning)  ? {backgroundColor: colorCurrentCommand} : {};\r\n        const generateButtonStyle = (this.state.showGenerate ||  this.props.isCPing || this.props.isPSing || this.props.isSAing ||  this.props.isSCPing) ? {backgroundColor: colorCurrentCommand} : {};\r\n        const settingsButtonStyle = (this.state.showSettings || this.props.isToggling ) ? {backgroundColor: colorCurrentCommand} : {};\r\n        const unlockStyle          = (this.state.showUnlock ) ? {backgroundColor: colorCurrentCommand} : {};\r\n        const brushButtonStyle = this.props.isBrushing ? {backgroundColor: colorCurrentCommand} : {};\r\n        const sketchButtonStyle = this.props.isSketching ? {backgroundColor: colorCurrentCommand} : {};\r\n        const alterButtonStyle = this.props.isAltering ? {backgroundColor: colorCurrentCommand} : {};\r\n        const sampleButtonStyle = this.props.isSampling ? {backgroundColor: colorCurrentCommand} : {};\r\n        const liveEditButtonStyle = this.props.isLiveEditing ? {backgroundColor: colorCurrentCommand} : {};\r\n        const cloneButtonStyle = this.props.isCloning ? {backgroundColor: colorCurrentCommand} : {};\r\n        const toggleButtonStyle = this.props.isToggling ? {backgroundColor: colorCurrentCommand} : {};\r\n        const cpButtonStyle = this.props.isCPing ? {backgroundColor: colorCurrentCommand} : {};\r\n        const parameterSpectraButtonStyle = this.props.isPSing ? {backgroundColor: colorCurrentCommand} : {};\r\n        const sensitivityAnalysisButtonStyle = this.props.isSAing ? {backgroundColor: colorCurrentCommand} : {};\r\n        const spectralCartesiaProductButtonStyle = this.props.isSCPing ? {backgroundColor: colorCurrentCommand} : {};\r\n\r\n        const options = [\r\n            0,1,2,3,4,5,6\r\n        ];\r\n        const defaultOption = options[0];\r\n\r\n\r\n        return (\r\n            <div className={styles['button-div']}>\r\n                <IconContext.Provider value={{size: '1.80em'}}>\r\n                <MdSearch\r\n                    title='search' \r\n                    className={styles['button']}\r\n                    style={searchButtonStyle}\r\n                    onClick={this.handleClick.bind(this, 'search')}\r\n                />\r\n                </IconContext.Provider>\r\n                    <Brush\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='brush axis' \r\n                        className={searchButtonToggle} \r\n                        style={brushButtonStyle} \r\n                        onClick={this.props.handleBrushAxisClick}/>\r\n                    <Pareto\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='sample axis' \r\n                        className={searchButtonToggle} \r\n                        style={sampleButtonStyle} \r\n                        onClick={this.props.handleSampleAxisClick}/>\r\n                <IconContext.Provider value={{size: '1.80em'}}>\r\n                <MdCreate\r\n                    title='edit' \r\n                    className={styles['button']}\r\n                    style={editButtonStyle}\r\n                    onClick={this.handleClick.bind(this, 'edit')}\r\n                />\r\n                </IconContext.Provider>\r\n                    <Sketch\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='sketch alternative' \r\n                        className={editButtonToggle} \r\n                        style={sketchButtonStyle} \r\n                        onClick={this.props.handleSketchAlternativeClick}/> \r\n                    <EditRef\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='edit alternative' \r\n                        className={editButtonToggle} \r\n                        style={alterButtonStyle} \r\n                        onClick={this.props.toggleAlterMode}/>\r\n                    <EditClone\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"}\r\n                        title='clone-edit alternative'\r\n                        className={editButtonToggle} \r\n                        style={cloneButtonStyle} \r\n                        onClick={this.props.handleCloneEditAlternativeClick}/> \r\n                    <DirectEditRef\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"}\r\n                        title='live-edit alternative' \r\n                        className={editButtonToggle} \r\n                        style={liveEditButtonStyle} \r\n                        onClick={this.props.toggleLiveEditMode}/>\r\n                <IconContext.Provider value={{size: '1.80em'}}>\r\n                <MdLightbulbOutline\r\n                    title='generate' \r\n                    className={styles['button']}\r\n                    style={generateButtonStyle}\r\n                    onClick={this.handleClick.bind(this, 'generate')}\r\n                />\r\n                </IconContext.Provider>\r\n                    <CartesianProduct\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='cartesian product' \r\n                        className={generateButtonToggle} \r\n                        style={cpButtonStyle} \r\n                        onClick={this.props.handleCartesianProductClick}/>\r\n                    <SpectralCartesianProduct\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='spectral cartesian product' \r\n                        className={generateButtonToggle}\r\n                        style={spectralCartesiaProductButtonStyle} \r\n                        onClick={this.props.handleSpectralCartesianProductClick}/>\r\n                    <Perturbation\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='perturbation' \r\n                        className={generateButtonToggle}\r\n                        style={sensitivityAnalysisButtonStyle} \r\n                        onClick={this.props.handleSensitivityAnalysisClick}/>\r\n                    {this.props.isSAing ?\r\n                        <input type=\"text\" onChange={this.props.onSensitivityAnalysisDeltaChange}  placeholder=\"delta\"/>                         \r\n                        : null\r\n                    }\r\n                    <ParameterSpectra\r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"} \r\n                        title='parameter spectra/sensitivity analysis' \r\n                        className={generateButtonToggle}\r\n                        style={parameterSpectraButtonStyle} \r\n                        onClick={this.props.handleParameterSpectraClick}/>\r\n                    {this.props.isPSing ?  \r\n                        <div>\r\n                            <Dropdown options={options} onChange={this.props.onParameterSpectraSelect} value={defaultOption} placeholder=\"arity\"/>\r\n                            <input type=\"text\" onChange={this.props.onParameterSpectraDeltaChange}  placeholder=\"delta\"/> \r\n                        </div>\r\n                        : null\r\n                    }\r\n                   \r\n                <IconContext.Provider value={{size: '1.80em'}}>\r\n                <MdSettings\r\n                    title='settings' \r\n                    className={styles['button']}\r\n                    style={settingsButtonStyle}\r\n                    onClick={this.handleClick.bind(this, 'settings')}\r\n                /> \r\n                </IconContext.Provider>  \r\n                    <Coords \r\n                        height={\"12mm\"}\r\n                        width={\"12mm\"}\r\n                        title='toggle dimension' \r\n                        className={settingsButtonToggle}\r\n                        style={toggleButtonStyle} \r\n                        onClick={this.props.selectParameter}/> \r\n                <IconContext.Provider value={{size: '1.80em'}}>\r\n                    {\r\n                        this.state.showUnlock ?\r\n                        <MdLockOpen\r\n                            title='lock aspect ratio' \r\n                            className={styles['button']}\r\n                            onClick={this.handleUnlockclick}\r\n                        />\r\n                        :\r\n                        <MdLockOutline\r\n                            title='lock aspect ratio' \r\n                            className={styles['button']}\r\n                            onClick={this.handleLockClick}\r\n                            style={{\r\n                                backgroundColor: colorCurrentCommand\r\n                            }}\r\n                        />\r\n                    }\r\n                  \r\n                </IconContext.Provider>  \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParallelMenu\r\n","\r\nexport const create2DArray = (rows) => {\r\n    let arr = [];\r\n      for (let i=0; i<rows; i++) {\r\n        arr[i] = [];\r\n      }\r\n    return arr;\r\n}\r\n\r\nexport const countUnique = (iterable) => {\r\n    return new Set(iterable).size;\r\n}\r\n\r\nexport const groupBy = (list, keyGetter) => {\r\n    const map = new Map();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}\r\n\r\nexport const pairwise = (result, func) => {\r\n    for (let i=0; i < result.length - 1; i+=2) {\r\n        func(result[i], result[i + 1]);\r\n    }\r\n}\r\n\r\nexport const makeName = (str) => {\r\n  var tmpStr = str.split(\"_brush\");\r\n  return tmpStr;\r\n}\r\n\r\nexport const createSimpleQuery = (query) => {\r\n  let simpleQuery = {};\r\n  for(let j = 0; j < query.length; j++) {\r\n    for(let k = 0; k < query[j].length; k++) {             \r\n      for (var m = 0; m < query[j][k].length; m++) {\r\n        let rangeName = makeName(query[j][k][m]);\r\n        if (!simpleQuery[rangeName[0]]) {\r\n          simpleQuery[rangeName[0]] = {};\r\n        }\r\n        if (!simpleQuery[rangeName[0]][rangeName[1]]) {\r\n          simpleQuery[rangeName[0]][rangeName[1]] = rangeName[0] + rangeName[1];\r\n        }\r\n      }              \r\n    }\r\n  }\r\n\r\n  return simpleQuery;\r\n}\r\n\r\n// expects pairings: joinHandles\r\n// returns query in strings\r\n// joinHandles\r\n\r\nexport function queryStringGenerator(query) {\r\n  let qss = \"\";\r\n\r\n  for(let i=0; i< query.length; i++) {\r\n    let simpleQuery = createSimpleQuery(query[i]);\r\n\r\n    if (query.length > 1) {\r\n      qss += '(';\r\n    }                    \r\n\r\n    let dimCount = 0;\r\n\r\n    for (let dim in simpleQuery) {\r\n      dimCount ++;\r\n      if (Object.keys(simpleQuery[dim]).length > 1) {\r\n        qss += '(';\r\n          let rangeCount = 0;\r\n          for(let range in simpleQuery[dim]){\r\n            rangeCount ++;\r\n            qss += simpleQuery[dim][range];\r\n            if (rangeCount !== Object.keys(simpleQuery[dim]).length) {\r\n              qss += \" or \"\r\n            }\r\n          }\r\n        qss += ')';\r\n      } else {\r\n        qss += dim;\r\n      }\r\n\r\n      if (dimCount !== Object.keys(simpleQuery).length) {\r\n        qss += \" and \";\r\n      }\r\n    }\r\n\r\n    if (query.length > 1) {\r\n      qss += ' ) ';\r\n      if (i !== query.length-1) {            \r\n        qss += ' OR ';\r\n      }            \r\n    }\r\n  } \r\n  \r\n  return qss;\r\n}","import React, {PureComponent} from 'react';\r\nimport * as d3 from 'd3';\r\nimport styles from './parallel.module.scss';\r\nimport Select from 'react-select';\r\nimport MessageBox from '../messageBox/MessageBox';\r\nimport ParallelMenu from './parallelMenu/ParallelMenu';\r\nimport {\r\n  removeFieldFromDatum,\r\n  addFieldToDatum,\r\n} from '../../util/util';\r\nimport {\r\n  findAlternativeRelativesFromID,\r\n} from '../../util/alternatives';\r\nimport {toast} from 'react-toastify';\r\nimport {\r\n  create2DArray,\r\n  countUnique,\r\n  groupBy,\r\n  pairwise,\r\n} from '../../util/parallel.js';\r\n\r\n// TODO: this component needs default props for initialization\r\n\r\n//#region constants\r\n\r\n// setting up some margins for drawing area\r\nconst margin = {top: 20, right: 20, bottom: 145, left: 40};\r\n\r\n// Primary colours. These need to be made global.\r\nconst colorWhite = styles.colorWhite;    \r\nconst colorUnselected = styles.colorUnselected;\r\nconst colorHovered = styles.colorHovered;\r\nconst colorSelected = styles.colorSelected;\r\nconst colorSelectedRelated = styles.colorSelectedRelated;\r\nconst colorHoveredRelated = styles.colorHoveredRelated;\r\nconst colorHoveredSelected = styles.colorHoveredSelected;\r\nconst colorSketch = styles.colorSketch;\r\nconst colorSketchPath = styles.colorSketchPath;\r\nconst colorBrush = styles.colorBrush;\r\nconst colorBrushSelected = styles.colorBrushSelected;\r\nconst colorBrushed = styles.colorBrushed;\r\nconst colorQuerySelected = styles.colorQuerySelected;\r\nconst colorQueryNotSelected = styles.colorQueryNotSelected;\r\nconst colorSelectedCoordinate = styles.colorSelectedCoordinate;\r\nconst colorCurrentCommand = styles.colorCurrentCommand;\r\nconst opacity0 = styles.opacity0;\r\nconst opacityMid1 = styles.opacityMid1;\r\nconst opacityMid2 = styles.opacityMid2;\r\nconst opacity1 = styles.opacity1;\r\n\r\n//#endregion  \r\n\r\n/**\r\n * this component renders the parallel coordinates chart\r\n * it receives props from the collection component it belongs\r\n */\r\nclass Parallel extends PureComponent {\r\n  /**\r\n   * setting the stage\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const dimensions = this.props.collection.get('dimOrder') ? this.props.collection.get('dimOrder').toJS() : [];\r\n    // options are determined by dimensions\r\n    this.options = []; \r\n    dimensions.map((d)=> this.options.push({value: d, label: d.toString()}));\r\n    this.defaultOptions = this.options\r\n\r\n    // instead of directly working on props, we will work on states extracted from props\r\n    this.state = {\r\n      dimensions: dimensions,\r\n      valueBands: this.props.scales.get('valueBands').toJS(),\r\n      backupValueBands: this.props.scales.get('valueBands').toJS(),\r\n      inputParams: this.props.collection.get(\"inputs\").toJS(),\r\n      outputParams: this.props.collection.get(\"outputs\").toJS(),\r\n      brushCount: 0,\r\n      sketchData: {},\r\n      selectedDimensions: [],\r\n      isAltering: false,\r\n      isLiveEditing: false,\r\n      isCloning: this.props.collection.get('currentMode') ? this.props.collection.get('currentMode').get('isCloning') : false, //TODO: revise\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n      isLocked: false,\r\n      shouldWarn: false,\r\n      adjustInputBrushes: false,\r\n      confirmAction: null,\r\n      warningMessage: '',\r\n      menuOpen: false,\r\n      menuHidden: false,\r\n    \r\n    };\r\n\r\n    // some additional variables that will act\r\n    // as mock states but will not trigger re-render\r\n\r\n    this.paramaterSpectraAltNum = 2;\r\n    this.paramaterSpectraDelta = 5;\r\n    this.sensitivityAnalysisDelta = 5;\r\n\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    };\r\n\r\n    this.samples = {};\r\n    this.brushes = [];\r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.cloneBases = [];\r\n    this.altsInCollectionBefore = [];\r\n    this.altsInCollectionAfter = [];\r\n    this.isEditing = false;\r\n  }\r\n\r\n  /**\r\n   * draw the chart when the component mounts\r\n   */\r\n  componentDidMount = () => {\r\n    this.drawChart(\r\n      this.props.width, \r\n      this.props.height, \r\n      this.state.inputParams, \r\n      this.state.outputParams, \r\n      this.state.dimensions,\r\n      this.state.isBrushing,\r\n      this.state.isSampling,\r\n      this.state.sketchData,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * redraw the chart whenever the component updates\r\n   */\r\n  componentDidUpdate = () => {\r\n    if (this.queryEngine.advMode) {\r\n      this.queryEngine = {\r\n        current: this.queryEngine.memo.current,\r\n        temp: this.queryEngine.memo.temp,\r\n        total: this.queryEngine.memo.total,\r\n        advMode: this.queryEngine.memo.advMode,\r\n        memo: {},\r\n      }     \r\n    }\r\n\r\n    this.drawChart(\r\n      this.props.width, \r\n      this.props.height, \r\n      this.state.inputParams, \r\n      this.state.outputParams, \r\n      this.state.dimensions,\r\n      this.state.isBrushing,\r\n      this.state.isSampling,\r\n      this.state.sketchData,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * the main method to draw the chart\r\n   * this is where main d3.js action happens\r\n   */\r\n  drawChart = (width, height, inputParams, outputParams, dimensions, isBrushing, isSampling, sketchPoints) => {\r\n    //#region initializing variables\r\n\r\n    const brushes = this.brushes;   \r\n    const brushSelections = this.brushSelections;\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions);\r\n    const commitChanges = this.commitChanges;\r\n    const changeEditingState = this.changeEditingState;\r\n    const submitChanges = this.submitChanges;\r\n    const findNonEmptyBrushes = this.findNonEmptyBrushes;\r\n    const findNonEmptyOutputBrushes = this.findNonEmptyOutputBrushes;\r\n    const findNonEmptyInputBrushes = this.findNonEmptyInputBrushes;\r\n    const commitDimensions = this.commitDimensions;\r\n    const commitValueBands = this.commitValueBands;\r\n    const commitBrushSelections = this.commitBrushSelections;\r\n    const commitSketch = this.commitSketch;\r\n    const reOrderDefaultOptions = this.reOrderDefaultOptions;\r\n    const updateBrushes = this.updateBrushes;\r\n    const alreadySelected = this.alreadySelected;\r\n    const toggleAdjustInputBrushes = this.toggleAdjustInputBrushes;\r\n    const adjustInputBrushes = this.state.adjustInputBrushes;\r\n    const samples = this.samples;\r\n    const dragging = {}; // this is for keeping track of axis order after dragging\r\n    const alternatives = this.props.alternatives.get('alternatives');\r\n    const valueBands = this.props.scales.get('valueBands').toJS();\r\n    const altsInCollection = this.props.altsInCollection;\r\n    const data = altsInCollection.map((alt) => alt.get('parallelData')).toJS();\r\n    const idMap = altsInCollection.map((alt) => alt.get('viewId')).toJS();\r\n    const selectedAltsInCollection = altsInCollection.filter((alt) => alt.get('isSelected') === true)\r\n    const selectedPaths = selectedAltsInCollection.map((alt) => alt.get('parallelData')).toJS();\r\n\r\n    const colName = this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1];\r\n    const colId = this.props.collection.get('viewId');\r\n    const brushEngine = this.brushEngine;\r\n    const queryEngine = this.queryEngine;\r\n    //#endregion\r\n\r\n    //#region setting range and domain\r\n    // for each dimension (Y axis), build a linear scale. store all in a y object\r\n    const y = {};\r\n    dimensions.map((dim) => {\r\n      const name = dim;\r\n\r\n        y[name] = d3.scaleLinear() // create a linear scale\r\n        // domain is the extent of data. + sign ensures that the value is numeric\r\n        // .domain(d3.extent(data, (d) => +d[name]))\r\n        .domain([valueBands[dim].min, valueBands[dim].max])\r\n        // range is the height of drawable area (so d3 will automatically\r\n        // come up with numbers within that height)\r\n        .range([height-200, 50]).nice();\r\n      \r\n      const yDomain = y[name].domain();\r\n      if (yDomain[0] === yDomain[1] ) {\r\n        y[name].domain([yDomain[0], yDomain[0] + 10]).nice();\r\n      }\r\n    });\r\n\r\n    // build the X scale. this finds the best position for each Y axis\r\n    const x = d3.scalePoint()\r\n      // range is the width of drawable area\r\n      .range([0, width-30])\r\n      .padding(2.0)\r\n      .domain(dimensions);\r\n    //#endregion\r\n\r\n    //#region svg element manipulation\r\n    // getting the reference for the SVG element in render()\r\n    const svg = d3.select(this.svgEl);\r\n\r\n    const myTextField = d3.select('body').select('#textField')\r\n      .style('display', 'none')\r\n      .style('z-index', '10')\r\n      .style('position', 'absolute')\r\n      .style('width', '28px')\r\n      .style('background-color', colorWhite)\r\n      .style('border', 'solid')\r\n      .style('border-width', '0.5px')\r\n      .on(\"keypress\", function() {\r\n        if (d3.event.keyCode === 13) {\r\n          if(!isNaN(d3.event.target.value)) {\r\n            if(this.getAttribute('which') === 'min' && d3.event.target.value <= this.getAttribute('bound')) {\r\n              commitValueBands('OK', this.getAttribute('dim'), this.getAttribute('which'), d3.event.target.value);\r\n            } else if (this.getAttribute('which') === 'max' && d3.event.target.value >= this.getAttribute('bound')) {\r\n              commitValueBands('OK', this.getAttribute('dim'), this.getAttribute('which'), d3.event.target.value);\r\n            } else {\r\n              commitValueBands('OoB');\r\n            }\r\n          } else {\r\n            commitValueBands('NaN');\r\n          }\r\n          d3.event.target.value = null;\r\n        }\r\n      })\r\n\r\n    // defining the style properties of tooltip element\r\n    const myTooltip = d3.select('body').select('#myTooltip')\r\n      .style('position', 'absolute')\r\n      .style('z-index', '10')\r\n      .style('background-color', colorWhite)\r\n      .style('border', 'solid')\r\n      .style('border-width', '0.25px')\r\n      .style('border-radius', '6px')\r\n      .style('box-shadow', '1px 1px 2px 1px')\r\n      .style('padding', '5px')\r\n      .style('visibility', 'hidden');\r\n\r\n    // we created path elements in react (render part)\r\n    // here we are only manipulating their properties\r\n    const myPath = svg.selectAll('.myPath')\r\n      .data(data) // binding data to path elements\r\n      .attr('d', path) // path is a function (below)\r\n      .style('fill', 'none')\r\n      .style('stroke-width', () => { \r\n        if (isBrushing || isSampling) {\r\n          return 2.2;\r\n        } else {\r\n          return 3.1;\r\n        }\r\n      })\r\n      .style('pointer-events', () => {\r\n        if (isBrushing) {\r\n          return \"none\";\r\n        } else {\r\n          return \"stroke\";\r\n        }\r\n      });\r\n\r\n    // these are data point handlers for dragging/alteration\r\n    const myPoint = svg.selectAll('.myPoint')\r\n      .data(selectedPaths)\r\n      .selectAll('circle')\r\n      .data((d) => {\r\n        return Object.entries(d);\r\n      })\r\n      .attr('cx', function(d) {\r\n        return x(d[0]);\r\n      })\r\n      .attr('cy', function(d) {\r\n        return y[d[0]](d[1]);\r\n      })\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'data-points-' + colName)\r\n      .attr('id', (d, i) => {\r\n        return 'data-point-' + i + '-on-' + d[0] + '-' + colName;\r\n      })\r\n      .attr('r', 5.5)\r\n      .attr('cx', function(d) {\r\n        return x(d[0]);\r\n      })\r\n      .attr('cy', function(d) {\r\n        return y[d[0]](d[1]);\r\n      })\r\n      .style('fill', colorSelected)\r\n      .style('stroke', colorUnselected)\r\n      .style('stroke-width', 1.9)\r\n      .on('mouseover', (d) => {\r\n        myTooltip\r\n          .style('visibility', 'visible')\r\n          .style('left', (d3.event.pageX) + 'px')\r\n          .style('top', (d3.event.pageY - 28) + 'px')\r\n          .text(Math.round(d[1]));\r\n      }).on('mouseout', (d) => {\r\n        myTooltip\r\n          .style('visibility', 'hidden');\r\n      });\r\n\r\n    const myAxis = svg.selectAll('.myAxis')\r\n      .data(dimensions) // binding data to axis elements\r\n      .attr('transform', (d) => 'translate(' + x(d) + ')') // moving axes\r\n      .style('cursor', () => {\r\n        if (!this.state.isSketching) {\r\n          return 'move';\r\n        } else {\r\n          return 'pointer';\r\n        }\r\n      })\r\n      .style('fill', (d) => {\r\n        if (selectedDimensions.includes(d)) {\r\n          return colorSelectedCoordinate;\r\n        }\r\n      })\r\n      .style('stroke-width', function(d) {\r\n        if (outputParams.includes(d)) {\r\n          return 2.6;\r\n        } else {\r\n          return 1.4;\r\n        }\r\n      })\r\n      .each(function(d) {\r\n        d3.select(this).call(\r\n        // to set the axis tick values explicitly, as the array of ticks\r\n        // generated by the scale PLUS the max and min values from the scale domain\r\n        // concatenated into a single array, add .tickValues(y[d].ticks(10).concat(y[d].domain()))\r\n          d3.axisLeft().scale(y[d])\r\n        );\r\n      });\r\n\r\n    myAxis.each(function(d) {\r\n      if (outputParams.includes(d)) {\r\n        let minMax = data.map((path) => path[d])\r\n        let max = Math.max(...minMax);\r\n        let min = Math.min(...minMax)\r\n\r\n        d3.select(this.childNodes[1].childNodes[1]).on('dblclick', function() {\r\n          myTextField.node().focus();\r\n\r\n          myTextField\r\n          .attr('dim', this.parentNode.parentNode.getAttribute('dim'))\r\n          .attr('which', 'min')\r\n          .attr('value', d3.select(this).text())\r\n          .attr('bound', min)\r\n          .style('display', 'inline-block')\r\n          .style('left', (d3.event.pageX - 40) + 'px')\r\n          .style('top', (d3.event.pageY - 7) + 'px')\r\n          .property('value', d3.select(this).text());\r\n        });\r\n\r\n        d3.select(this.childNodes[this.childNodes.length - 1].childNodes[1]).on('dblclick', function() {\r\n          myTextField.node().focus();\r\n          myTextField\r\n          .attr('dim', this.parentNode.parentNode.getAttribute('dim'))\r\n          .attr('which', 'max')\r\n          .attr('value', d3.select(this).text())\r\n          .attr('bound', max)\r\n          .style('display', 'inline-block')\r\n          .style('left', (d3.event.pageX -40) + 'px')\r\n          .style('top', (d3.event.pageY - 7) + 'px')\r\n          .property('value', d3.select(this).text());\r\n        });\r\n      }\r\n    });\r\n    \r\n    const myBrushTexts = svg.selectAll('.myBrushText')\r\n      .attr(\"font-family\", \"sans-serif\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"fill\", \"black\")\r\n\r\n    const myBrushTextN = svg.select('#myBrushTextN');\r\n    const myBrushTextS = svg.select('#myBrushTextS');\r\n\r\n    const myClickAxis = svg.selectAll('.myClickAxis')\r\n      .data(dimensions) // binding data to axis elements\r\n      .attr('transform', (d) => 'translate(' + x(d) + ')') // moving axes\r\n      .style('cursor', () => {\r\n        if (!this.state.isSketching) {\r\n          return 'move';\r\n        } else {\r\n          return 'pointer';\r\n        }\r\n      })\r\n      .style('opacity', opacity0)\r\n      .each(function(d, i) {\r\n        d3.select(this).call(\r\n        // to set the axis tick values explicitly, as the array of ticks\r\n        // generated by the scale PLUS the max and min values from the scale domain\r\n        // concatenated into a single array, add .tickValues(y[d].ticks(10).concat(y[d].domain()))\r\n          d3.axisLeft().scale(y[d])\r\n        );\r\n    });\r\n\r\n    const myClickAxisPath = myClickAxis.selectAll('path.domain')\r\n      .data(dimensions)\r\n      .style('stroke-width', 20)\r\n      .style('opacity', opacity0);\r\n\r\n    // adding header texts to each dimension/axis\r\n    const myText = myAxis.append('text')\r\n      .attr('class', 'myText')\r\n      .style('text-anchor', 'start')\r\n      .style('text-shadow', '0 1px 0' + colorWhite)\r\n      .style('cursor', 'move')\r\n      .attr('y', 33)\r\n      .attr('x', -20)\r\n      .text((d) => d)\r\n      .style('fill', function(d) {\r\n        if (selectedDimensions.includes(d)) {\r\n          return colorSelected;\r\n        } else {\r\n          return 'black';\r\n        }\r\n      })\r\n      .style('font-weight', function(d) {\r\n        if (outputParams.includes(d)) {\r\n          return 'bold';\r\n        }\r\n        if (selectedDimensions.includes(d)) {\r\n          return 'bold';\r\n        } else {\r\n          return 'normal';\r\n        }\r\n      })\r\n      .attr('transform', 'rotate(-22)');\r\n    //#endregion\r\n\r\n    //#region current mode logic  \r\n\r\n    if (this.state.isSampling) {\r\n      findNonEmptyBrushes(brushes)\r\n        .then(result => {\r\n          result.map((d, i) => {\r\n            d3.select('body').select(\"[name=inputBox-\"+(i+1)+\"]\")\r\n            .style('display', 'inline-block')\r\n            .style('z-index', '10')\r\n            .style('position', 'absolute')\r\n            .style('width', '24px')\r\n            .style('background-color', colorWhite)\r\n            .style('border', 'solid')\r\n            .style('border-radius', '4px')\r\n            .style('border-width', '0.5px')\r\n            .on(\"input\", () => {\r\n              // if (d3.event.keyCode === 13) {\r\n              if(!isNaN(d3.event.target.value)) {\r\n                this.samples[d.dimension] = d3.event.target.value;\r\n                console.log(d.dimension + \" : \" + d3.event.target.value);\r\n              }\r\n              // d3.event.target.value = null;\r\n          });\r\n        })\r\n      }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    if (this.state.isSketching) {\r\n      myClickAxis.on('click', function(d) {\r\n        if (!Object.keys(sketchPoints).includes(d)) {\r\n          if (inputParams.includes(d)) {\r\n            Object.assign(sketchPoints, {[d]: y[d].invert(d3.mouse(this)[1])});\r\n            commitSketch(sketchPoints);\r\n          }\r\n        } else {\r\n          sketchPoints[d] = y[d].invert(d3.mouse(this)[1]);\r\n          svg.selectAll('.mySketchPoint').select('#' + d).attr('cy', y[d](y[d].invert(d3.mouse(this)[1])));\r\n        }\r\n        updatePoints(sketchPoints);\r\n      });\r\n    }\r\n    \r\n    if (this.state.isCPing || this.state.isAltering || this.state.isLiveEditing || \r\n      this.state.isCloning || this.state.isPSing || this.state.isSCPing) {\r\n      let originalColor, originalFont;\r\n      myText.style('cursor', 'pointer')\r\n        .on('click', function(d) {          \r\n        if (!selectedDimensions.includes(d)) {\r\n          if (inputParams.includes(d)) {\r\n            selectedDimensions.push(d);\r\n          }\r\n        } else {\r\n          const index = selectedDimensions.indexOf(d);\r\n          selectedDimensions.splice(index, 1)\r\n        }        \r\n        commitDimensions(selectedDimensions);\r\n      }).on('mouseover', function(d) {\r\n        originalColor = d3.select(this).style('fill');\r\n        originalFont = d3.select(this).style('font-weight');\r\n        d3.select(this)\r\n          .style('fill', colorHovered)\r\n          .style('font-weight', 'bold');\r\n      }).on('mouseout', function(d) {\r\n        d3.select(this)\r\n        .style('fill', originalColor)\r\n        .style('font-weight', originalFont);\r\n      });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    if (this.state.isBrushing || this.state.isSampling) {\r\n      svg.selectAll(\"polygon\").remove();\r\n      drawBrush(brushEngine, queryEngine);\r\n    } else {\r\n      svg.selectAll(\"polygon\").remove();\r\n    }\r\n\r\n    if (!this.state.isSketching) {\r\n      dragAxis();\r\n    }\r\n\r\n    dragPoints();\r\n    updatePoints(sketchPoints);\r\n\r\n    /** main function to draw brushes\r\n    * @param {object} brushEngine\r\n    * @param {object} queryEngine\r\n    */\r\n    function drawBrush(brushEngine, queryEngine){\r\n      let brushExtent;\r\n      const noBrush = brushes.length < 1;\r\n      \r\n      // adjusting input brushes based on the output brushes\r\n      if (adjustInputBrushes) {        \r\n        findNonEmptyOutputBrushes(brushes).then((outputBrushes) => {\r\n          const brushEngineMultipair = brushEngine.multiPairs.map((mpairs) => {\r\n            return mpairs.filter((mpair) => {\r\n              let canBeAdded = true;\r\n              for (let i = 0; i < mpair.length; i++) {\r\n                const strRes = mpair[i].split(\"_\");\r\n                if (inputParams.includes(strRes[1])) {\r\n                  canBeAdded = false;\r\n                }\r\n              }\r\n              return canBeAdded;\r\n            })\r\n          });\r\n\r\n          joinHandles(outputBrushes, brushEngineMultipair).then(result => {            \r\n            queryFilter(result).then((boundaries) => {\r\n              findNonEmptyInputBrushes(brushes).then((inputBrushes) => {\r\n                if (inputBrushes.length > 0) {\r\n                  inputBrushes.map((inputBrush) => {\r\n                    let newExtent = [];\r\n                    for (let i = 0; i < boundaries.length; i++) {\r\n                      if (!newExtent[0]) {\r\n                        newExtent[0] = boundaries[i][inputBrush.dimension];\r\n                      } else if (newExtent[0] < boundaries[i][inputBrush.dimension]){\r\n                        newExtent[0] = boundaries[i][inputBrush.dimension];\r\n                      }\r\n                      if (!newExtent[1]) {\r\n                        newExtent[1] = boundaries[i][inputBrush.dimension];\r\n                      } else if (newExtent[1] > boundaries[i][inputBrush.dimension]){\r\n                        newExtent[1] = boundaries[i][inputBrush.dimension];\r\n                      }\r\n                    }\r\n\r\n                    if (newExtent[0] == newExtent[1]) {\r\n                      newExtent[0]= newExtent[0] + 5* (valueBands[inputBrush.dimension].min + valueBands[inputBrush.dimension].max)/100\r\n                      newExtent[1]= newExtent[1] - 5* (valueBands[inputBrush.dimension].min + valueBands[inputBrush.dimension].max)/100\r\n\r\n                      if(newExtent[0] > valueBands[inputBrush.dimension].max){\r\n                        newExtent[0] = valueBands[inputBrush.dimension].max;\r\n                      }\r\n\r\n                      if(newExtent[1] < valueBands[inputBrush.dimension].min){\r\n                        newExtent[1] = valueBands[inputBrush.dimension].min;\r\n                      }\r\n                    }\r\n\r\n                    const brushIndex = brushes.findIndex((b) => b.id === inputBrush.id);\r\n                    brushes[brushIndex].extent = newExtent;\r\n                  })\r\n                }\r\n                toggleAdjustInputBrushes();\r\n              }).catch(err => toggleAdjustInputBrushes());\r\n            }).catch(err => toggleAdjustInputBrushes());;\r\n          }).catch(err => toggleAdjustInputBrushes());\r\n        }).catch(err => toggleAdjustInputBrushes());\r\n      }\r\n\r\n      myAxis.append('g')\r\n        .attr('class', 'myBrush')\r\n        .each(function(d) {\r\n          const id = colName + '_' + d + '_brush0';\r\n          d3.select(this)\r\n          .attr('id', id)\r\n          .call(\r\n            y[d].brush = d3.brushY()\r\n            .extent([[-10, 50], [10, height-200]])\r\n            .on('start', brushStart)\r\n            .on('brush', brushOn)\r\n            .on('end', brushEnd)\r\n          );\r\n          // how to programmatically control the brush: y[d].brush.move(d3.select(this), [55, 95]);\r\n\r\n          if (noBrush) {\r\n            brushes.push({id: id, count: 0, dimension: d, extent: [0, 0], temp: undefined, query: undefined, isInput:inputParams.includes(d)});\r\n          } else {\r\n            let index = brushes.findIndex(brush => brush.id === id);\r\n            if (index >= 0) {\r\n              if (brushes[index].extent[0] !== 0 || brushes[index].extent[1] !== 0) {\r\n                y[d].brush.move(d3.select(this), [y[d](brushes[index].extent[0]), y[d](brushes[index].extent[1])]);\r\n              }\r\n            }\r\n          }  \r\n        });\r\n\r\n      d3.selectAll('.myBrush rect.overlay').attr('x', -25).attr('width', 40);\r\n\r\n     /**\r\n     * prevents event propagation while brushing\r\n     * @param {event} e\r\n     */\r\n      function brushStart(e) {\r\n\r\n        if (d3.event.sourceEvent) {\r\n          if (d3.event.sourceEvent.stopPropagation) {\r\n            d3.event.sourceEvent.stopPropagation();\r\n          }\r\n        }\r\n\r\n        brushExtent = brushes.find((b) => b.id === this.getAttribute('id')).extent;\r\n\r\n        // apply color to dynamically created brush elements\r\n        d3.selectAll('.myBrush rect.selection').attr('fill', colorBrush);\r\n        d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\t\r\n        d3.selectAll('.myBrush rect.selection').attr('width', 15);\r\n\r\n\t      // to adjust the centroid of the brush using styles instead of attr \t\t\r\n        d3.selectAll('.myBrush rect.handle').attr('width', 36).attr('height', 22);\r\n\r\n      }\r\n\r\n      /**\r\n       * this is where the brushing action happens\r\n       * @param {event} e\r\n       */\r\n      function brushOn(e) {\r\n        const currentBrush = brushes.find((brush) => brush.id === this.id);\r\n\r\n        // if there's any selection, assign it to this brush\r\n        if (d3.event.selection !== null) {\r\n          currentBrush.extent = d3.event.selection.map(y[e].invert, y[e]);\r\n        }\r\n\r\n        // drawing extents info text while brushing\r\n        d3.select('#' + this.id)\r\n          .selectAll('.handle')\r\n          .each(function(d) {\r\n            if (d.type === 'n') {\r\n              myBrushTextN\r\n                .attr('x', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 5)\r\n                .attr('y', parseInt(this.getAttribute('y')))\r\n                .text((currentBrush.extent[0]).toFixed(3));\r\n            } else {\r\n              myBrushTextS\r\n                .attr('x', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 5)\r\n                .attr('y', parseInt(this.getAttribute('y')) + 14)\r\n                .text((currentBrush.extent[1]).toFixed(3));\r\n            }\r\n          })\r\n   \r\n          // apply color to dynamically created brush elements\r\n          d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\t\r\n          d3.selectAll('.myBrush rect.selection').attr('width', 15);\t \r\n          \r\n          findNonEmptyBrushes(brushes)\r\n            .then(result => {\r\n              joinHandles(result, brushEngine.multiPairs)\r\n                .then(result => {\r\n                  queryFilter(result);\r\n                }).catch(err => console.log(err));\r\n            }).catch(err => console.log(err));\r\n      }\r\n\r\n      /**\r\n      * @param {event} e\r\n      * any operations you want to perform when brushing ends\r\n      */\r\n      function brushEnd(e) {\r\n        const thisBrush = brushes.find((b) => b.id === this.id);\r\n\r\n        // determine where to put the next brush\r\n        if (thisBrush.temp === undefined) {\r\n          if (queryEngine.current === 0 || queryEngine.total === 1 || queryEngine.current === queryEngine.total) {\r\n            thisBrush.temp = ++brushEngine.temp;\r\n          } else {\r\n\r\n              for (let x = queryEngine.current - 1; x < brushEngine.tempOrder.length; x++) {\r\n                brushEngine.tempOrder[x] += 1;\r\n              }\r\n\r\n              thisBrush.temp = ++queryEngine.temp;\r\n              ++brushEngine.temp;\r\n\r\n              try {\r\n                brushes.map((br) => {\r\n                  if (br.temp !== undefined) {\r\n                    if (br.temp >= queryEngine.temp && br.id !== thisBrush.id) {\r\n                      ++br.temp;\r\n                    }\r\n                  }\r\n                });\r\n\r\n              } catch (err) {\r\n                console.log(err);\r\n              } \r\n        }\r\n      }\r\n\r\n      if (thisBrush.query === undefined) {\r\n        if (queryEngine.current !== 0) {\r\n          thisBrush.query = queryEngine.current;\r\n        } else {\r\n          thisBrush.query = null;\r\n        }\r\n      }\r\n\r\n      // checks if brush is clicked\r\n      if (d3.brushSelection(this) !== null && brushExtent[0] === d3.brushSelection(this).map(y[e].invert, y[e])[0] && brushExtent[1] === d3.brushSelection(this).map(y[e].invert, y[e])[1]) {\r\n        // shift + click to delete\r\n        if (d3.event.sourceEvent && d3.event.sourceEvent.shiftKey) {\r\n          // check if that's the first brush of a query && check if that's the only brush of a query\r\n          if (thisBrush.temp !== 1 && !brushEngine.tempOrder.includes(brushes.find(b => b.id === this.id).temp) && brushes.filter(br => br.query === thisBrush.query).length > 1) {\r\n            deleteBrush(this);\r\n          }\r\n        }\r\n\r\n        // check if that's the last brush in a query, then select it\r\n        if (brushes.filter(br => br.query === thisBrush.query).length === 1) {\r\n          d3.select(this.childNodes[1]).attr('fill', colorQuerySelected);\r\n          queryEngine.current = thisBrush.query;\r\n          queryEngine.temp = thisBrush.temp;\r\n        }\r\n      }\r\n\r\n      if (queryEngine.advMode) {\r\n        if (!brushEngine.tempOrder.includes(brushEngine.temp)) {\r\n          brushEngine.tempOrder.push(brushEngine.temp);\r\n          brushEngine.multiPairs = create2DArray(brushEngine.tempOrder.length);\r\n\r\n          const polyCount = countUnique(Array.from(svg.selectAll('polygon')[\"_groups\"][0]).map((d) => d.id));\r\n\r\n          queryEngine.current = polyCount + 1;\r\n          queryEngine.total = polyCount + 1;\r\n\r\n          if (queryEngine.current === 1) {\r\n            queryEngine.temp = brushEngine.multiPairs[queryEngine.current - 1].length;\r\n          } else if (queryEngine.current === queryEngine.total) {\r\n            queryEngine.temp = brushEngine.tempOrder.slice(-1)[0];\r\n          } else {\r\n            queryEngine.temp = brushEngine.tempOrder[queryEngine.current-2];\r\n          }\r\n\r\n          // make sure there are no brushes left\r\n          let rogueBrush = brushes.find(br => br.query === null);\r\n          if (rogueBrush) {\r\n            rogueBrush.query = queryEngine.current;\r\n          }\r\n        }\r\n        queryEngine.advMode = false;\r\n      }\r\n\r\n      addNewBrush(e, thisBrush.count);\r\n\r\n      findNonEmptyBrushes(brushes)\r\n        .then(result => {\r\n          joinHandles(result, brushEngine.multiPairs)\r\n            .then(result => {\r\n              // TODO: queryStringGenerator(brushEngine.multiPairs);\r\n              drawPolygons(result, e);\r\n            }).catch(err => console.log(err));\r\n        }).catch(err => console.log(err));\r\n        \r\n      stopListening();\r\n\r\n      d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\t\r\n      d3.selectAll('.myBrush rect.selection').attr('width', 15);\r\n      d3.selectAll('.myBrush rect.handle').attr('width', 36).attr('height', 22);\r\n \r\n      updateBrushes(thisBrush, colId);\r\n\r\n      d3.select('#' + this.id)\r\n      .selectAll('.selection')\r\n      .each(function (d) {\r\n        // here we are positioning inputBoxes on axes\r\n        d3.select('body').select('#' + thisBrush.id + '_input')\r\n          .style('left', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 'px')\r\n          .style('top', parseInt(this.getAttribute('y')) + 100 + 'px')\r\n          .attr('value', samples[thisBrush.dimension] ? samples[thisBrush.dimension] : 0); \r\n      });\r\n    }\r\n    \r\n    function deleteBrush(brush) {\r\n      const deletedBrush = brushes.find(br => br.id === brush.getAttribute('id'));\r\n      const index = brushes.findIndex(br => br === deletedBrush);\r\n      const nextBrush = brushes.find(br => br.dimension === deletedBrush.dimension && br.count === (deletedBrush.count + 1))\r\n\r\n      try {\r\n        d3.select(brush).call(d3.brushY().move, null);\r\n        d3.select(brush).remove();\r\n        d3.select('#' + nextBrush.id).attr('id', deletedBrush.id);\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n\r\n      nextBrush.id = deletedBrush.id;\r\n      nextBrush.count = deletedBrush.count;\r\n      brushes.splice(index, 1);\r\n    }\r\n\r\n    function addNewBrush(e, count) {\r\n      \r\n      const brushesOnDimension = brushes.filter((obj) => obj.dimension === e);\r\n      const lastBrushID = brushesOnDimension[brushesOnDimension.length - 1].id;\r\n      const lastBrush = document.getElementById(lastBrushID);\r\n\r\n      let selection;\r\n      if (!lastBrush) {\r\n        selection = [0, 1];\r\n      } else{\r\n        selection = d3.brushSelection(lastBrush);\r\n      }\r\n      \r\n      count = count + 1;\r\n\r\n      if (selection && selection[0] !== selection[1]) {\r\n        const elementBefore = '#' + colName + '_' + e + '_brush' + (count - 1);\r\n        d3.select('#' + e + 'on' + colName).insert('g', elementBefore)\r\n          .attr('class', 'myBrush')\r\n          .each(function(d) {\r\n            const id = colName + '_' + e + '_brush' + count;\r\n            d3.select(this)\r\n              .attr('id', id)\r\n              .call(y[d].brush = d3.brushY()\r\n                .extent([[-10, 50], [10, height-200]])\r\n                .on('start', brushStart)\r\n                .on('brush', brushOn)\r\n                .on('end', brushEnd)\r\n              );\r\n        \r\n            if (noBrush) {\r\n              brushes.push({id: id, count: count, dimension: e, extent: [0, 0], temp: undefined, query: undefined, isInput:inputParams.includes(d)});\r\n            } else {\r\n              let index = brushes.findIndex(brush=> brush.id === id);\r\n              if (index >= 0) {                  \r\n                if (brushes[index].extent[0] !== 0 || brushes[index].extent[1] !== 0) {\r\n                  y[d].brush.move(d3.select(this), [y[d](brushes[index].extent[0]),y[d](brushes[index].extent[1])]);                    \r\n                }\r\n              } else {\r\n                brushes.push({id: id, count: count, dimension: e, extent: [0, 0], temp: undefined, query: undefined, isInput:inputParams.includes(d)});\r\n              }\r\n            } \r\n            d3.selectAll('.myBrush rect.overlay').attr('x', -25).attr('width', 40);\r\n          });\r\n      }\r\n    }\r\n\r\n     // this is where filtering happens\r\n    function queryFilter(multiPairs) {\r\n      return new Promise(async (resolve, reject) => {\r\n        const startIndex = colName.length + 1 // colName + '_'\r\n        let queryResult = [];\r\n        await myPath.style('stroke', function(boundData) {\r\n          const resColor = multiPairs.some((ungroupedPairs) => {  \r\n            \r\n            //grouping the pairs by the dimension of their first element\r\n            let uniqueDims = countUnique(ungroupedPairs.map(pair => pair[0].substring(startIndex, pair[0].indexOf('_', startIndex)))); \r\n            let groupedPairs = create2DArray(uniqueDims);\r\n\r\n            if (!ungroupedPairs.length) {\r\n              return false;\r\n            } else {\r\n              let temp = ungroupedPairs[0][0].substring(startIndex, ungroupedPairs[0][0].indexOf('_', startIndex))\r\n              let position = 0;\r\n\r\n              for (let i=0; i < ungroupedPairs.length; i++) {\r\n                if (temp === ungroupedPairs[i][0].substring(startIndex, ungroupedPairs[i][0].indexOf('_', startIndex))) {\r\n                  groupedPairs[position].push(ungroupedPairs[i])\r\n                } else {\r\n                  position++;\r\n                  groupedPairs[position].push(ungroupedPairs[i])\r\n                  temp = ungroupedPairs[i][0].substring(startIndex, ungroupedPairs[i][0].indexOf('_', startIndex))\r\n                }\r\n              }\r\n            }\r\n\r\n            return groupedPairs.every((pairs) => {\r\n              return pairs.some((pair) => {\r\n                if (pair.length !== 2 || pair[0].substring(startIndex, pair[0].indexOf('_', startIndex)) === pair[1].substring(startIndex, pair[1].indexOf('_', startIndex))) {\r\n                  return pair.some((brush) => {\r\n                    if (boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[0] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[1]) {\r\n                      return false;\r\n                    } else {\r\n                    \r\n                      return brushes.find(br => br.id === brush).extent[1] <= boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] <= brushes.find(br => br.id === brush).extent[0];\r\n                    }\r\n                  })\r\n                } else {\r\n                  return pair.every((brush) => {\r\n                    if (boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[0] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[1]) {\r\n                      return false;\r\n                    } else {\r\n                      return brushes.find(br => br.id === brush).extent[1] <= boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] <= brushes.find(br => br.id === brush).extent[0];\r\n                    }\r\n                  })\r\n                }\r\n              })\r\n            })\r\n          }) ? selected(this) : unselected(this);\r\n\r\n          if (resColor === colorBrushed) {\r\n            queryResult.push(boundData);            \r\n          }\r\n          \r\n          return resColor;\r\n        })\r\n\r\n        resolve(queryResult);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });      \r\n    }\r\n\r\n    function selected(node) {\r\n      if (!brushSelections.includes(node.getAttribute('id'))) {\r\n        brushSelections.push(node.getAttribute('id'));\r\n        commitBrushSelections(brushSelections);\r\n      }\r\n\r\n      // coloring\r\n      const relatives = findAlternativeRelativesFromID(alternatives, node.getAttribute('id'))\r\n        .map((alt) => alt.get('viewId')).toJS();\r\n\r\n      relatives.map((relative) => {\r\n        d3.select(document.getElementById(relative))\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', colorSelectedRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + colorSelectedRelated);\r\n      })\r\n\r\n      if (alreadySelected(node.getAttribute('id'))) {\r\n        return colorSelected;\r\n      } else {\r\n        return colorBrushed;\r\n      }\r\n    }\r\n\r\n    function unselected(node) {\r\n      if (brushSelections.includes(node.getAttribute('id'))) {\r\n        brushSelections.splice(brushSelections.indexOf(node.getAttribute('id')), 1);\r\n        commitBrushSelections(brushSelections);\r\n      }\r\n      \r\n      // uncoloring\r\n      const relatives = findAlternativeRelativesFromID(alternatives, node.getAttribute('id'))\r\n      .map((alt) => alt.get('viewId')).toJS();\r\n\r\n      relatives.map((relative) => {\r\n        d3.select(document.getElementById(relative))\r\n        .style('border', 'none')\r\n        .style('border-style', 'none')\r\n        .style('border-color', 'none')\r\n        .style('border-radius', 'none')\r\n        .style('-webkit-box-shadow', 'none');\r\n      })\r\n\r\n      return colorUnselected;\r\n    }\r\n\r\n    async function joinHandles(nonEmptyBrushes, multiPairs) {\r\n      return new Promise(async (resolve, reject) => {\r\n        if(nonEmptyBrushes.length) {          \r\n          if (brushEngine.tempOrder.length === 0) {\r\n            const ps = await pairBrushes(nonEmptyBrushes);\r\n            multiPairs[0] = ps;\r\n          } else {\r\n            for (let i=0; i <= brushEngine.tempOrder.length; i++) {\r\n              let ps;\r\n              if (brushEngine.tempOrder[i]) {\r\n                ps = await pairBrushes(nonEmptyBrushes.splice(0, nonEmptyBrushes.findIndex(br => br.temp === brushEngine.tempOrder[i])));\r\n              } else {\r\n                ps = await pairBrushes(nonEmptyBrushes.splice(0, nonEmptyBrushes.length));\r\n              }\r\n              multiPairs[i] = ps;\r\n            }\r\n          }\r\n          resolve(multiPairs)\r\n        } else {\r\n          reject([[]]); // reject\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {array} brushes: an array of brush objects\r\n     * @return {array} pairs: an array of brush.id pairs\r\n     */\r\n    async function pairBrushes(nonEmptyBrushes) {\r\n      return new Promise(async (resolve, reject) => {\r\n        if (nonEmptyBrushes.length) {\r\n         const nonEmptyDimensions = [];\r\n         \r\n          dimensions.map((dim) => {\r\n            if (nonEmptyBrushes.some(br => br.dimension === dim)) {\r\n              nonEmptyDimensions.push(dim)\r\n            }\r\n          });\r\n          \r\n          const grouped = groupBy(nonEmptyBrushes, br => br.dimension)\r\n          const brushesByDimension = [];\r\n\r\n          nonEmptyDimensions.map((dim) => {\r\n            brushesByDimension.push(grouped.get(dim));\r\n          });\r\n\r\n          // we need to see in which dimensions there is action\r\n          let nonEmptyDimensionPairs = [];\r\n\r\n          nonEmptyDimensionPairs = nonEmptyDimensions.reduce((result, value, index, array) => {\r\n            if (index % 2 === 0 || index % 2 === 1) \r\n              result.push(array.slice(index, index + 2));\r\n            return result;\r\n          }, []);\r\n\r\n          // from those, we need pairs, not singles\r\n          const anotherArr = [];\r\n\r\n          nonEmptyDimensionPairs.map((dims, i) => \r\n            brushesByDimension.map((brushes, i) => {\r\n              if (dims.length) {\r\n                anotherArr.push(brushes.filter((br) => br.dimension === dims[0]).map(b => b.id)\r\n                  .concat(brushes.filter((br) => br.dimension === dims[1]).map(b => b.id)));\r\n              }\r\n            })\r\n          )\r\n\r\n          // the rest, just get nonempty\r\n          const result =  anotherArr.filter(e => e.length);\r\n      \r\n          if (result.length === 1) {\r\n            resolve(result);\r\n          } else if (result.length > 1) {\r\n            const pairs = []\r\n            // pair them as [brush.id, brush.id]\r\n            pairwise(result, (current, next) => {\r\n              for (let i=0; i < current.length; i++) {\r\n                for (let j=0; j < next.length; j++) {\r\n                  pairs.push([current[i], next[j]]);\r\n                }\r\n              }\r\n            });\r\n            resolve(pairs);\r\n          }\r\n        } else {\r\n          reject('empty brushes'); // reject\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    function drawPolygons(multiPairs, e) {\r\n      \r\n      // clean up and start anew\r\n      svg.selectAll(\"polygon\").each(function() {\r\n          this.remove();\r\n      })\r\n\r\n      multiPairs.map((pairs, i) => pairs.map(br => {\r\n        if (br.length > 0) {\r\n          const handles = [[], []];\r\n        \r\n          br.map((b) => {\r\n            d3.select('#' + b)\r\n              .selectAll('.handle')\r\n              .each(function(d) {\r\n                if (d.type === 'n') {\r\n                  handles[0].push({\"x\": parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)), \"y\": parseInt(this.getAttribute('y'))});\r\n                } else {\r\n                  handles[1].push({\"x\": parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)), \"y\": parseInt(this.getAttribute('y'))});\r\n                }\r\n              })\r\n          });\r\n        \r\n          const dataPoints = handles[0].sort((a,b) => a.x - b.x).concat(handles[1].sort((a,b) => b.x - a.x))\r\n          let myStr = [];\r\n\r\n          dataPoints.map((dp) => {\r\n            myStr.push(dp.x.toString() + \",\" + dp.y.toString() + \" \");\r\n          })\r\n          \r\n          svg.append('polygon')\r\n            .attr('id', 'polygon' + (i+1))\r\n            .attr(\"points\", myStr.join(\"\"))\r\n            .style(\"fill\", function() {\r\n              if (queryEngine.current === parseInt(this.getAttribute('id').slice(-1))) {\r\n                return colorQuerySelected;\r\n              } else {\r\n                return colorQueryNotSelected;\r\n              }\r\n            })\r\n            .style(\"strokeWidth\", \"0px\")\r\n            .style('cursor', 'cell')\r\n            .on(\"click\", function() {\r\n              console.log(this.getAttribute('id'))\r\n              if (queryEngine.current !== parseInt(this.getAttribute('id').slice(-1))) { // selecting query\r\n                \r\n                if (queryEngine.advMode === true) {\r\n                  queryEngine.advMode = false;\r\n                }\r\n                \r\n                queryEngine.current = parseInt(this.getAttribute('id').slice(-1));\r\n                queryEngine.total = multiPairs.length;\r\n\r\n                if (queryEngine.current === 1) {\r\n                  queryEngine.temp = multiPairs[queryEngine.current - 1].length;\r\n                } else if (queryEngine.current === queryEngine.total) {\r\n                  queryEngine.temp = brushEngine.tempOrder.slice(-1)[0];\r\n                } else {\r\n                  queryEngine.temp = brushEngine.tempOrder[queryEngine.current-2];\r\n                }\r\n\r\n                d3.selectAll('polygon').style(\"fill\", colorQueryNotSelected);\r\n                d3.selectAll('#' + this.getAttribute('id')).style(\"fill\", colorQuerySelected);\r\n              } else { // de-selecting query\r\n                \r\n                queryEngine.memo = {\r\n                  current: queryEngine.current, \r\n                  temp: queryEngine.temp,\r\n                  total: queryEngine.total,\r\n                  advMode: queryEngine.advMode\r\n                };\r\n\r\n                queryEngine.advMode = true;\r\n                queryEngine.current = 0;\r\n                queryEngine.temp = 0;\r\n                d3.selectAll('#' + this.getAttribute('id')).style(\"fill\", colorQueryNotSelected);\r\n              }           \r\n            });\r\n        } \r\n      })); \r\n      d3.select('#drawArea').raise();\r\n    }\r\n\r\n      /**\r\n       * get all brushes on a dimension/axis\r\n       * turn of overlay for all but the most recent\r\n       */\r\n      function stopListening() {\r\n        dimensions.forEach((d) => {\r\n          const brushesOnDimension = brushes.filter((obj) => obj.dimension === d);\r\n          const currentBrush = brushesOnDimension[brushesOnDimension.length - 1];\r\n\r\n          brushesOnDimension.forEach((b, index) => {\r\n            d3.select('#' + colName + '_' + d + '_brush' + index)\r\n              .selectAll('.overlay')\r\n              .style('pointer-events', function() {\r\n                if (index === brushesOnDimension.indexOf(currentBrush)) {\r\n                  return 'all';\r\n                } else {\r\n                  return 'none';\r\n                }\r\n              });\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    \r\n    /**\r\n     * updates the graph to render the sketched point\r\n     * @param {object} sketchData: sketch data\r\n     */\r\n    function updatePoints(sketchData) {\r\n      // these are data point handlers for dragging/alteration\r\n      const sketchPoint = svg.selectAll('.mySketchPoint')\r\n        .data([sketchData])\r\n        .selectAll('circle')\r\n        .data((d) => Object.entries(d))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('id', (d) => d[0])\r\n        .attr('r', 3.5)\r\n        .attr('cx', function(d) {\r\n          return x(d[0]);\r\n        })\r\n        .attr('cy', function(d) {\r\n          return y[d[0]](d[1]);\r\n        })\r\n        .style('fill', colorSketch)\r\n        .style('stroke', colorUnselected)\r\n        .style('stroke-width', 0.8);\r\n\r\n      const sketchPath = svg.selectAll('.mySketchPath')\r\n        .data([sketchData]) // binding data to path elements\r\n        .attr('d', sPath) \r\n        .style('fill', 'none')\r\n        .style('stroke-width', 1.7)\r\n        .style('stroke', colorSketchPath)\r\n        .style('opacity', opacity1);\r\n\r\n      sketchPoint.exit().remove();\r\n      sketchPath.exit().remove();\r\n    }\r\n\r\n    /** main function to drag axes\r\n    * @param {object} element\r\n    */\r\n    function dragAxis() {\r\n      const prevDimensions = Object.assign([], dimensions);\r\n\r\n      myAxis.call(d3.drag()\r\n        .subject((d) => {\r\n          return {x: x(d)};\r\n        })\r\n        .on('start', (d) => {\r\n          dragging[d] = x(d);\r\n        })\r\n        .on('drag', (d) => {\r\n          dragging[d] = Math.min(width, Math.max(0, d3.event.x));\r\n          svg.selectAll('.myPath').attr('d', path);\r\n          dimensions.sort((a, b) => {\r\n            return position(a) - position(b);\r\n          });\r\n          x.domain(dimensions);\r\n          svg.selectAll('.myAxis').attr('transform', function(d) {\r\n            return 'translate(' + position(d) + ')';\r\n          });\r\n        })\r\n        .on('end', function(d) {\r\n          delete dragging[d];\r\n          transition(d3.select(this)).attr('transform', 'translate(' + x(d) + ')');\r\n          transition(svg.selectAll('.myPath')).attr('d', path);\r\n          transition(svg.selectAll('.data-points'))\r\n            .attr('cx', function(d) {\r\n              return x(d[0]);\r\n            })\r\n            .attr('cy', function(d) {\r\n              return y[d[0]](d[1]);\r\n            });\r\n\r\n            if(JSON.stringify(prevDimensions) !== JSON.stringify(dimensions)) {\r\n              reOrderDefaultOptions();\r\n            }\r\n  \r\n        })\r\n      );\r\n    }\r\n\r\n    /** main function to drag data-points\r\n    * @param {object} element\r\n    */\r\n    function dragPoints() {\r\n      let scaleCoefficient;\r\n      let original;\r\n      let origin;\r\n      let index;\r\n      let delta;\r\n      let id;\r\n      let nodes = [];\r\n      let liveData = {};\r\n      let liveIds = [];\r\n\r\n      svg.selectAll('.data-points-' + colName).call(\r\n        d3.drag()\r\n          .on('start', function(d) {\r\n            changeEditingState(true);\r\n            if (inputParams.includes(d[0])) {\r\n              d3.select(document.getElementById(d[0] + 'on' + colName))\r\n                .style('fill', colorSelectedCoordinate);\r\n\r\n              d3.select(document.getElementById(d[0] + 'on' + colName).children[document.getElementById(d[0] + 'on' + colName).children.length-1])\r\n                .style('fill', colorSelected)\r\n                .style('font-weight', 'bold');\r\n\r\n              const idOfNode = d3.select(this.parentNode).nodes()[0]['attributes']['id']['nodeValue'];\r\n              index = idMap.indexOf(idOfNode);\r\n              original = data[index][d[0]];\r\n\r\n              d3.selectAll('#' + this.getAttribute('id')).each(function() {\r\n                id = this.parentElement.getAttribute('id')\r\n                index = idMap.indexOf(id)\r\n                origin = data[index][d[0]];\r\n                liveIds.push(id);\r\n                return nodes.push({id: id, index: index, dim: d[0], origin: origin});\r\n              });\r\n\r\n              if(selectedDimensions.length !== 0) {\r\n                selectedDimensions.map((dim) => {\r\n                  d3.selectAll('#' + 'data-point-'+ Object.keys(selectedPaths[0]).indexOf(dim) + '-on-' + dim + '-' + colName).each(function() {\r\n                    id = this.parentElement.getAttribute('id')\r\n                    index = idMap.indexOf(id)\r\n                    origin = data[index][dim];\r\n                    liveIds.push(id);\r\n                    return nodes.push({id: id, index: index, dim: dim, origin: origin});\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .on('drag', function(d) {\r\n            d[1] = y[d[0]].invert(d3.event.y);\r\n\r\n            if (inputParams.includes(d[0])) {\r\n              delta = d[1] - original;\r\n\r\n              d3.selectAll('#' + this.getAttribute('id')).each(function() {\r\n                id = this.parentElement.getAttribute('id');\r\n                index = nodes.find((x) => x.id === id && x.dim === d[0]).index;\r\n                origin = nodes.find((x) => x.id === id && x.dim === d[0]).origin;\r\n                if (origin + delta >= y[d[0]].domain()[0] && origin + delta <= y[d[0]].domain()[1]) {\r\n                  d3.select(this).attr('cy', y[d[0]](origin + delta));\r\n                  data[index][d[0]] = origin + delta;\r\n                }\r\n                if (!liveData[id]) {\r\n                  liveData[id] = {};\r\n                }\r\n                liveData[id][d[0]] = data[index][d[0]];\r\n              });\r\n\r\n              if(selectedDimensions.length !== 0) {\r\n                selectedDimensions.map((dim) => {\r\n                  d3.selectAll('#' + 'data-point-'+ Object.keys(selectedPaths[0]).indexOf(dim) + '-on-' + dim + '-' + colName).each(function() {\r\n                    id = this.parentElement.getAttribute('id');\r\n                    index = nodes.find((x) => x.id === id && x.dim === dim).index;\r\n                    origin = nodes.find((x) => x.id === id && x.dim === dim).origin;\r\n                    scaleCoefficient = ((y[dim].domain()[1] - y[dim].domain()[0]) / (y[d[0]].domain()[1] - y[d[0]].domain()[0]));                 \r\n                    if (origin + (delta * scaleCoefficient) >= y[dim].domain()[0] && origin + (delta * scaleCoefficient) <= y[dim].domain()[1]) {\r\n                      d3.select(this).attr('cy', y[dim](origin + (delta * scaleCoefficient)));\r\n                      data[index][dim] = origin + (delta * scaleCoefficient);\r\n                      if (!liveData[id]) {\r\n                        liveData[id] = {};\r\n                      }\r\n                      liveData[id][dim] = data[index][dim] ;\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n              myPath.attr('d', path);\r\n              myTooltip\r\n                .style('visibility', 'visible')\r\n                .style('left', (d3.event.pageX) + 'px')\r\n                .style('top', (d3.event.pageY - 28) + 'px')\r\n                .text(Math.round(y[d[0]].invert(d3.event.y)));\r\n                \r\n              // sendMessage({data:liveData, ids:liveIds , type: parallelConstants.get(\"PARALLEL_EDIT_MESSAGE_TYPE\")});\r\n            }\r\n          })\r\n          .on('end', function(d) {\r\n            if (inputParams.includes(d[0])) {\r\n              let editedAlts = {};\r\n              nodes.map((node) => {\r\n                if (!editedAlts[node.id]) {\r\n                  editedAlts[node.id] = {};\r\n                }     \r\n                editedAlts[node.id][node.dim] = data[node.index][node.dim];         \r\n                commitChanges(node.id, node.dim, data[node.index][node.dim]);\r\n              });\r\n              \r\n              submitChanges(editedAlts);        \r\n              nodes = [];\r\n              liveData = {};\r\n            }\r\n            myTooltip.style('visibility', 'hidden');\r\n            changeEditingState(false);\r\n          })\r\n      );\r\n    }\r\n\r\n    /**\r\n     * this function takes in a row of data and draws a line\r\n     * @param {number} d\r\n     * @return {number} x-y pair\r\n     */\r\n    function path(d) {\r\n      if (d) {\r\n        return d3.line()(dimensions.map((p) => {\r\n          return [position(p), y[p](d[p])];\r\n        }));\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n    /**\r\n     * this function takes in a row of data and draws a line\r\n     * @param {number} d\r\n     * @return {number} x-y pair for sketch data\r\n     */\r\n    function sPath(d) {\r\n      return d3.line()(dimensions.filter((p) => Object.keys(sketchPoints).includes(p)).map((p) => {\r\n        return [position(p), y[p](d[p])];\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * this function reorders axes\r\n     * @param {number} d\r\n     * @return {number} position\r\n     */\r\n    function position(d) {\r\n      const v = dragging[d];\r\n      return v == null ? x(d) : v;\r\n    }\r\n\r\n    /**\r\n    * function for transition animations\r\n    * @param {object} g\r\n    * @return {object} operation on object\r\n    */\r\n    function transition(g) {\r\n      return g.transition().duration(500);\r\n    }\r\n  }\r\n\r\n  updateBrushes = (brush, colId) => {\r\n    try {\r\n      if (!this.props.queries.get('brushes').toJS().filter(b => b.colId = colId).find(b => b.id === brush.id)) {\r\n        this.props.addBrush(brush, colId);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * commits changes to store\r\n   * @param {number} id\r\n   * @param {object} dimension\r\n   * @param {number} newValue\r\n   */\r\n  commitChanges = (id, dimension, newValue) => {\r\n    this.props.alterAlternative(id, dimension, newValue);\r\n  }\r\n\r\n  /**\r\n   * send the changes to the server\r\n   * @param {object} editedAlts\r\n   */\r\n  submitChanges = (editedAlts) => {\r\n    this.props.editAlternatives(editedAlts);\r\n  }\r\n\r\n  alreadySelected = (id) => {\r\n    const altsSelected = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n      .filter((alternative) => (alternative.get('viewId') === id));\r\n\r\n    if (altsSelected.size > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  findNonEmptyBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => (b.extent[0] + b.extent[1]) !== 0).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject([]); // reject\r\n      }\r\n    });\r\n  }\r\n\r\n  findNonEmptyOutputBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => ((b.extent[0] + b.extent[1]) !== 0) && !b.isInput).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject('empty brushes'); // reject\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  findNonEmptyInputBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => ((b.extent[0] + b.extent[1]) !== 0) && b.isInput).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject('empty brushes'); // reject\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // flag: cannot be a state\r\n  changeEditingState = (state) => {\r\n    this.isEditing = state;\r\n  }\r\n\r\n  commitBrushSelections = (brushSelections) => {\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = brushSelections.length;\r\n  }\r\n\r\n  /**\r\n  * updates the state with selectedDimensions  data\r\n  * @param {array} selectedDimensions\r\n  */\r\n  commitDimensions = (selectedDimensions) => {\r\n    this.setState({selectedDimensions: selectedDimensions});\r\n  }\r\n\r\n  toggleAdjustInputBrushes = () => {\r\n    this.setState({adjustInputBrushes: !this.state.adjustInputBrushes});\r\n  }\r\n\r\n  commitValueBands = (message, dim, end, val) => {\r\n    if (message === 'OK') {\r\n      this.props.setValueBands(dim, end, val);\r\n    } else if (message === 'NaN') {\r\n      this.setState({shouldWarn: true, warningMessage: 'Please enter a number.'})\r\n    } else if (message === 'OoB') {\r\n      this.setState({shouldWarn: true, warningMessage: 'Please enter a proper range.'})\r\n    }\r\n  }\r\n\r\n  /**\r\n  * updates the state with sketch data\r\n  * @param {object} sketch\r\n  */\r\n  commitSketch = (sketch) => {\r\n    this.setState({sketchData: Object.assign(this.state.sketchData, sketch)});\r\n  }\r\n\r\n  reOrderDefaultOptions = () => {\r\n    const currentDimensions = Object.assign([], this.state.dimensions);\r\n\r\n    this.defaultOptions = [];\r\n\r\n    currentDimensions.map((d)=> this.defaultOptions.push({value: d, label: d.toString()}));\r\n    this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n  }\r\n\r\n  /**\r\n   * clicking on a path selects it\r\n   * @param {event} e\r\n   */\r\n  selectPath = (e) => {\r\n    const altsSelected = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n      .filter((alternative) => (alternative.get('viewId') === e.target.getAttribute('id')));\r\n      \r\n        // if alternativesSelected.size is equal to zero, that means\r\n        // this alternative is not selected\r\n      if (!this.state.isLiveEditing) {\r\n        if (altsSelected.size === 0) {\r\n          this.props.selectAlternative(e.target.getAttribute('id'));\r\n\r\n          if (this.state.isCloning === true) {\r\n            this.cloneBases.push(e.target.getAttribute('id'));   \r\n            this.props.cloneEditAlternatives([e.target.getAttribute('id')], [this.props.collection.get('viewId')])\r\n          }\r\n        } else {\r\n          this.props.deselectAlternative(e.target.getAttribute('id'));\r\n        }\r\n      } else {\r\n        if (altsSelected.size === 0) {\r\n          this.props.deselectAllAlternatives();\r\n          this.props.selectAlternative(e.target.getAttribute('id'));\r\n        } else {\r\n          this.props.deselectAlternative(e.target.getAttribute('id'));\r\n        }\r\n      }\r\n  }\r\n\r\n  /**\r\n   * event handler for adding/removing parameters/dimensions to the chart\r\n   * @param {object} options\r\n   * @param {object} action\r\n   */\r\n  toggleParameter = (options, {action, removedValue}) => {\r\n    const newValueBands = Object.assign({},this.state.valueBands);\r\n    const currentDimensions = Object.assign([], this.state.dimensions)\r\n    let index;\r\n    this.defaultOptions = [];\r\n\r\n    switch (action) {\r\n    case 'remove-value':\r\n      console.log(\"in remove value\")\r\n      this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId'))).map((alt) => {\r\n        this.props.removeDataField(alt, removedValue.value);\r\n      });\r\n\r\n      index = currentDimensions.indexOf(removedValue.value);\r\n      currentDimensions.splice(index, 1);\r\n\r\n      this.setState({dimensions: currentDimensions, valueBands: removeFieldFromDatum(newValueBands, removedValue.value)});\r\n      currentDimensions.map((d) => this.defaultOptions.push({value: d, label: d.toString()}));\r\n      this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n      if (this.state.isLocked) {\r\n        this.props.lockAspectRatio(currentDimensions);\r\n      }\r\n      break;\r\n    case 'select-option':\r\n      this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId'))).map((alt) => {\r\n        this.props.addDataField(alt, options[options.length-1]['label']);\r\n      });\r\n\r\n      currentDimensions.push(options[options.length-1]['label']);\r\n\r\n      this.setState({\r\n        dimensions: currentDimensions,\r\n        valueBands: addFieldToDatum(\r\n          newValueBands, options[options.length-1]['label'],\r\n          this.state.backupValueBands),\r\n      });\r\n      currentDimensions.map((d) => this.defaultOptions.push({value: d, label: d.toString()}));\r\n      this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n      if(this.state.isLocked)\r\n      {\r\n        this.props.lockAspectRatio(currentDimensions);\r\n      }\r\n      break;\r\n    default:\r\n      console.log('no valid selection');\r\n    }\r\n  }\r\n\r\n\r\n  //#region toggle state for current mode \r\n  /**\r\n   * trigger a state change when selecting a parameter\r\n   */\r\n  selectParameter = () => {\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isToggling: !this.state.isToggling});\r\n  }\r\n\r\n  /**\r\n   * toggles alter mode\r\n   */\r\n  toggleAlterMode = () => {\r\n    this.setState({isCloning: false});\r\n    this.setState({isToggling: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isAltering: !this.state.isAltering})\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  toggleLiveEditMode = () => {\r\n    this.setState({isCloning: false});\r\n    this.setState({isToggling: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isLiveEditing: !this.state.isLiveEditing});\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  /**\r\n   * toggles sketch mode\r\n   */\r\n  toggleSketchMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isSketching: !this.state.isSketching});\r\n  }\r\n\r\n  /**\r\n   * toggles cartesian product mode\r\n   */\r\n  toggleCPMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isCPing: !this.state.isCPing});\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  /**\r\n   * toggles parameter spectra mode\r\n   */\r\n  togglePSMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isPSing:  !this.state.isPSing});\r\n    this.setState({sketchData: {}});\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  /**\r\n   * toggles parameter spectra mode\r\n   */\r\n  toggleSCPMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isSCPing:  !this.state.isSCPing});\r\n    this.setState({sketchData: {}});\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  /**\r\n   * toggles sensitivity analysis mode\r\n   */\r\n  toggleSAMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isBrushing: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isSAing:  !this.state.isSAing});\r\n    this.setState({sketchData: {}});\r\n  }\r\n\r\n  toggleCloneMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isBrushing: false})\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isSampling:  false});\r\n    this.setState({isCloning: !this.state.isCloning});\r\n    this.props.setCollectionMode(this.props.collection.get('viewId'), {isCloning: !this.state.isCloning});\r\n    this.setState({selectedDimensions: []});\r\n  }\r\n\r\n  toggleBrushMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({isSampling:  false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isBrushing: !this.state.isBrushing})\r\n\r\n    if (this.brushSelections.length > 0) {\r\n      const alternatives = this.props.alternatives.get('alternatives');\r\n\r\n      this.brushSelections.map((alternativeID) => {\r\n        findAlternativeRelativesFromID(alternatives, alternativeID).map((relative) => {\r\n          d3.select(document.getElementById(relative.get('viewId')))\r\n          .style('border', null)\r\n          .style('border-style', null)\r\n          .style('border-color', null)\r\n          .style('border-radius', null)\r\n          .style('-webkit-box-shadow', null);\r\n        })\r\n        this.props.selectAlternative(alternativeID)\r\n      })\r\n    }\r\n    \r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.brushes = [];\r\n\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    }; \r\n\r\n    this.props.clearAllBrushes();\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = this.brushSelections.length;\r\n  }\r\n\r\n  toggleSampleMode = () => {\r\n    this.setState({isToggling: false});\r\n    this.setState({isAltering: false});\r\n    this.setState({isLiveEditing: false});\r\n    this.setState({isCloning: false});\r\n    this.setState({isSketching: false});\r\n    this.setState({isCPing: false});\r\n    this.setState({isPSing:  false});\r\n    this.setState({isSAing:  false});\r\n    this.setState({isSCPing: false});\r\n    this.setState({sketchData: {}});\r\n    this.setState({isBrushing: false})\r\n    this.setState({isSampling: !this.state.isSampling})\r\n\r\n    if (this.brushSelections.length > 0) {\r\n      const alternatives = this.props.alternatives.get('alternatives');\r\n\r\n      this.brushSelections.map((alternativeID) => {\r\n        findAlternativeRelativesFromID(alternatives, alternativeID).map((relative) => {\r\n          d3.select(document.getElementById(relative.get('viewId')))\r\n          .style('border', null)\r\n          .style('border-style', null)\r\n          .style('border-color', null)\r\n          .style('border-radius', null)\r\n          .style('-webkit-box-shadow', null);\r\n        })\r\n        this.props.selectAlternative(alternativeID)\r\n      })\r\n    }\r\n\r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.brushes = [];\r\n\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    }; \r\n\r\n    this.props.clearAllBrushes();\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = this.brushSelections.length;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  // TODO: create mock alternatives\r\n  createAlternative = () => {\r\n    const selectedIds = this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n      alt.get('isSelected') === true).map((alt) => alt.get('viewId'));\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    this.props.createNewAlternative(selectedIds, this.state.sketchData);\r\n    this.setState({sketchData: {}})\r\n  }\r\n\r\n  /**\r\n   * handler for Shuffle button (cartesian product)\r\n   */\r\n  cartesianProduct = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n      alt.get('isSelected') === true)\r\n      console.log(selectedAltsInCollection, \" selectedAltsInCollection\")\r\n    if (selectedAltsInCollection.size === 2) {      \r\n      this.props.newCartesianProduct(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions,this.props.collection.get('destinations').toJS());\r\n      this.setState({selectedDimensions: []});\r\n    }\r\n  }\r\n\r\n  parameterSpectra = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n      alt.get('isSelected') === true)\r\n\r\n    if (selectedAltsInCollection.size > 0) {      \r\n      this.props.newParameterSpectra(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions, this.paramaterSpectraAltNum, this.paramaterSpectraDelta, this.props.collection.get('destinations').toJS());\r\n      this.setState({selectedDimensions: []});\r\n    }\r\n  }\r\n\r\n  spectralCartesianProduct = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n      alt.get('isSelected') === true)\r\n\r\n    if (selectedAltsInCollection.size > 0) {      \r\n      this.props.newSpectralCartesianProduct(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions,this.props.collection.get('viewId'),this.props.collection.get('destinations').toJS());\r\n      this.setState({selectedDimensions: []});\r\n    }\r\n  }\r\n\r\n  sensitivityAnalysis = () => {\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n      alt.get('isSelected') === true);\r\n\r\n    if (selectedAltsInCollection.size > 0) {      \r\n      console.log(this.sensitivityAnalysisDelta);\r\n      this.props.newSensitivityAnalysis(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), this.sensitivityAnalysisDelta,this.props.collection.get('destinations').toJS());\r\n    }\r\n  }\r\n\r\n  handleConfirmQuery = (committedQueries) => {\r\n      if (committedQueries.length > 0) {\r\n        if (this.props.collection.get('destinations').size === 0) {\r\n          for (let i = 0; i < committedQueries.length; i++) {\r\n\r\n            (function (query, index, operation, name) {\r\n              setTimeout(function () {\r\n                operation(0 + (index * 2), 5, 3, 5, query, name + '-query' + (index + 1));\r\n              }, 3500 * i);\r\n            })(committedQueries[i], i, this.props.createNewCollection, this.props.collection.get('collectionName'));\r\n           \r\n            this.props.addQuery(this.props.collection.get('collectionName') + '-query' + (i + 1), this.props.collection.get('collectionName'), 'someString', committedQueries[i])\r\n            \r\n          }\r\n          toast.info('Please wait while queries are being committed...', { autoClose: 3500 * committedQueries.length, position: 'bottom-center', rtl: false })\r\n          \r\n        } else {\r\n          for (let j = 0; j < this.props.collection.get('destinations').size; j++) {\r\n            if (this.props.collection.get('destinations').toJS()[j]['__isNew__']) {\r\n              for (let i = 0; i < committedQueries.length; i++) {\r\n                (function (query, index, operation, name) {\r\n                  setTimeout(function () {\r\n                    operation(0 + (index * 2), 5, 2, 4, query, name);\r\n                  }, 3500 * i);\r\n                })(committedQueries[i], i, this.props.createNewCollection, this.props.collection.get('destinations').toJS()[j]['label']);\r\n              }\r\n            } else {\r\n              for (let i = 0; i < committedQueries.length; i++) {\r\n                (function (query, destination, operation) {\r\n                  setTimeout(function () {\r\n                    operation(query, [destination]);\r\n                  }, 3500 * i);\r\n                })(committedQueries[i], this.props.collection.get('destinations').toJS()[j]['value'], this.props.cloneAlternatives);\r\n\r\n                this.props.addQuery(this.props.collection.get('collectionName') + '-query' + (i + 1), this.props.collection.get('collectionName'), 'someString', committedQueries[i])\r\n              }\r\n            }\r\n          }\r\n          toast.info('Please wait while queries are being committed...', { autoClose: 3000 * committedQueries.length * this.props.collection.get('destinations').size, position: 'bottom-center', rtl: false })\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        shouldWarn: false,\r\n        warningMessage: '',\r\n        confirmAction: null,\r\n      })\r\n  }\r\n\r\n  handleBrushAxisClick = () => {\r\n    const queries = Object.assign([], this.committedQueries);\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleBrushMode();\r\n\r\n    if (this.state.isBrushing) {\r\n      this.props.infoRef.current.childNodes[0].childNodes[1].style.display = 'inline';\r\n      this.props.infoRef.current.childNodes[0].childNodes[2].style.display = 'none';\r\n      if (queries.length > 0) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'Do you want to commit these queries?', confirmAction: this.handleConfirmQuery.bind(this, queries) });\r\n      }\r\n    } else {\r\n      this.props.infoRef.current.childNodes[0].childNodes[1].style.display = 'none';\r\n      this.props.infoRef.current.childNodes[0].childNodes[2].style.display = 'inline';\r\n    }\r\n  }\r\n\r\n  handleSampleAxisClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleSampleMode();\r\n  }\r\n\r\n  handleParameterSpectraClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.togglePSMode();\r\n    if (this.state.isPSing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n            alt.get('isSelected') === true).size < 1) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You must select at least 1 alternatives.'});\r\n        return;\r\n      // } else if (this.state.selectedDimensions.length >) {\r\n      //   this.setState({shouldWarn: true,  warningMessage: 'You can select at most 4 dimensions.'});\r\n      //   return;\r\n      } else {\r\n        this.parameterSpectra();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSpectralCartesianProductClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleSCPMode();\r\n\r\n    if (this.state.isSCPing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n            alt.get('isSelected') === true).size <1) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You must select at least 1 alternatives.'});\r\n        return;\r\n      } else if (this.state.selectedDimensions.length > 4) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You can select at most 4 dimensions.'});\r\n        return;\r\n      } else {\r\n        this.spectralCartesianProduct();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSensitivityAnalysisClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleSAMode();\r\n    if (this.state.isSAing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n            alt.get('isSelected') === true).size <1) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You must select at least 1 alternatives.'});\r\n        return;\r\n      } else {\r\n        this.sensitivityAnalysis()\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCloneEditAlternativeClick = () => {\r\n    if (this.state.isCloning === false) {\r\n      this.altsInCollectionBefore = this.props.alternatives.get('alternatives')\r\n      .filter((alt) => this.props.collection.get('altsid').contains(alt.get('viewId')))\r\n        .map((alt) => alt.get('viewId')).toJS();                  \r\n      this.props.deselectAllAlternatives();\r\n      this.cloneBases = [];\r\n      this.toggleCloneMode();\r\n    } else {\r\n      this.altsInCollectionAfter = this.props.alternatives.get('alternatives')\r\n      .filter((alt) => this.props.collection.get('altsid').contains(alt.get('viewId')))\r\n        .map((alt) => alt.get('viewId')).toJS();\r\n\r\n      if (this.altsInCollectionBefore.length !== this.altsInCollectionAfter.length) {\r\n        let difference = this.altsInCollectionAfter.filter(x => !this.altsInCollectionBefore.includes(x));\r\n        difference.map((d) => this.props.hoverAlternativeSpecial(d));\r\n      }\r\n      \r\n      this.props.deselectAllAlternatives();\r\n      this.cloneBases.map((b) => this.props.selectAlternative(b));\r\n      this.toggleCloneMode();\r\n    }\r\n  }\r\n\r\n  handleSketchAlternativeClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleSketchMode();\r\n    if (this.state.isSketching) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n            alt.get('isSelected') === true).size < 1) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You must select a base alternative first.'});\r\n        return;\r\n      } else {\r\n        this.createAlternative();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCartesianProductClick = () => {\r\n    this.setState({shouldWarn: false, warningMessage: ''});\r\n    this.toggleCPMode();\r\n    if (this.state.isCPing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) => \r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n            alt.get('isSelected') === true).size !== 2) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You must select at least 2 alternatives.'});\r\n        return;\r\n      } else if (this.state.selectedDimensions.length > 4) {\r\n        this.setState({shouldWarn: true,  warningMessage: 'You can select at most 4 dimensions.'});\r\n        return;\r\n      } else {\r\n        this.cartesianProduct()\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHover = (e, viewId, refId, hasEntered) => {\r\n    e.stopPropagation();\r\n\r\n    if (!this.isEditing) {\r\n      if (hasEntered) {\r\n        this.props.hoverAlternative(viewId, refId);\r\n      } else{\r\n        this.props.dehoverAlternative(viewId, refId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handler for mouseover\r\n   * @param {event} e\r\n   */\r\n  handleMouseEnter = (e) => {\r\n    this.handleHover(e, e.target.getAttribute('id'), e.target.getAttribute('refid'), true);     \r\n  }\r\n\r\n  /**\r\n   * handler for mouseout\r\n   * @param {event} e\r\n   */\r\n  handleMouseLeave = (e) => {\r\n    this.handleHover(e, e.target.getAttribute('id'), e.target.getAttribute('refid'), false);\r\n  }\r\n\r\n  \r\n  handleKeyEvents = (e) => {\r\n    if (this.state.isBrushing || this.state.isSampling) {\r\n      let toastId = null;\r\n\r\n      // commit query\r\n      // what key?\r\n      if (e.keyCode === 81 || e.keyCode === 113) {\r\n        if (this.brushSelections.length !== 0) {\r\n          if (this.committedQueries.length === 0 || JSON.stringify(this.committedQueries[this.committedQueries.length - 1]) !== JSON.stringify(this.brushSelections)) {\r\n            this.committedQueries.push(Object.assign([], this.brushSelections));\r\n            if (!toast.isActive(toastId)) {\r\n              toastId = toast.success('Query committed', {autoClose: 3000, position: 'bottom-right', rtl: true});\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // reset brush mode\r\n      // what key?\r\n      if (e.keyCode === 82) {\r\n        this.toggleBrushMode();\r\n        this.props.deselectAllAlternatives();\r\n        setTimeout(() => {\r\n          this.toggleBrushMode();\r\n        }, 300);\r\n      }\r\n    }\r\n\r\n    if (this.state.isSampling === true) {\r\n      // submit the samples\r\n      if (e.keyCode === 83) {\r\n        const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) => \r\n          this.props.collection.get('altsid').contains(alt.get('viewId')) && \r\n          alt.get('isSelected') === true)\r\n\r\n        if (selectedAltsInCollection.size === 1) {\r\n          this.findNonEmptyInputBrushes(this.brushes).then((results) => {\r\n            const selectedAlt = selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS();\r\n            const brushResult = results.map((result) => {\r\n              return { \r\n                dim : result.dimension,\r\n                sampleNum: parseInt(this.samples[result.dimension]), \r\n                min:Math.min(result.extent[0], result.extent[1]),\r\n                max:Math.max(result.extent[0], result.extent[1]),\r\n              }\r\n            })            \r\n            this.props.newSampling(selectedAlt, brushResult,this.props.collection.get('destinations').toJS());\r\n          });\r\n        }\r\n      } else if(e.keyCode === 65){        \r\n        this.setState({adjustInputBrushes: true})\r\n      }\r\n    }\r\n  }\r\n\r\n  handleVisibility = () => {\r\n    this.setState({menuHidden: !this.state.menuHidden});\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({menuOpen: true});\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({menuOpen: false});\r\n  };\r\n\r\n\r\n  lockRatio = (locked) => {\r\n    if(locked)\r\n    {\r\n      this.props.lockAspectRatio(this.state.dimensions)\r\n      this.setState({\r\n        isLocked: locked\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.props.unlockAspectRatio(this.state.dimensions);\r\n      this.setState({\r\n        isLocked: locked\r\n      })\r\n    }\r\n  }\r\n\r\n  onParameterSpectraSelect = (e) => {\r\n    this.paramaterSpectraAltNum = e.value;\r\n  }\r\n\r\n  onParameterSpectraDeltaChange = (e) => {    \r\n    this.paramaterSpectraDelta = e.target.value;\r\n  }\r\n\r\n  onSensitivityAnalysisDeltaChange = (e) => {    \r\n    this.sensitivityAnalysisDelta = e.target.value;\r\n  }\r\n  \r\n  /**\r\n  * @function handleDoubleClick\r\n  * @description restores the alternative (i.e. round-trip)\r\n  * @memberof Alternative\r\n  * @param {event} e\r\n  */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.restoreAlternative(e.target.getAttribute('id'));\r\n\r\n  }\r\n\r\n  handleDeleteCancel = () => {\r\n    this.setState({\r\n        shouldWarn: false,\r\n        warningMessage: \"\",\r\n        confirmAction: null\r\n    })\r\n}\r\n\r\n  /**\r\n   * rendering elements\r\n   * @return {object} jsx\r\n   */\r\n  render() {\r\n    const width = this.props.width - margin.left - margin.right;\r\n    const height = this.props.height - margin.top - margin.bottom;\r\n    let pathStyle;\r\n\r\n    // this selects the appropriate style object, which is\r\n    // then fed to the {paths} component\r\n    const paths = this.props.altsInCollection.map((d) => {\r\n      \r\n      const altsSelected = this.props.altsInCollection\r\n        .filter((alternative) => \r\n        alternative.get('isSelected')).filter((alternative) => (\r\n        alternative.get('viewId') === d.get('viewId')));\r\n\r\n      const selectedRelatives = this.props.altsInCollection\r\n        .filter((alternative) => this.props.selectedAlts.includes(alternative.get('refId')) \r\n        && alternative.get('viewId') === d.get('viewId'));\r\n      \r\n      if (altsSelected.size === 0) {\r\n        if (selectedRelatives.size !== 0) {\r\n          pathStyle = {\r\n            stroke: colorSelectedRelated,\r\n            opacity: opacityMid2,\r\n          };    \r\n        } else {\r\n          pathStyle = {\r\n            stroke: colorUnselected,\r\n            opacity: opacityMid1,\r\n          };\r\n        }\r\n      } else if (altsSelected.size !== 0) {\r\n        pathStyle = {\r\n          stroke: colorSelected,\r\n          opacity: opacity1,\r\n        };\r\n      }\r\n\r\n      return <path \r\n        className={\"pc \" + \"pc-ref-\"+ d.get('refId') + \" pc-view-\" + d.get('viewId') + \" \" + \"myPath\"}  \r\n        style={pathStyle} key={'p-' + d.get('viewId') + '-key'} \r\n        refid={d.get('refId')} \r\n        id={d.get('viewId')}\r\n        onMouseEnter={this.state.isBrushing || this.state.isSampling ? null : this.handleMouseEnter}\r\n        onMouseLeave={this.state.isBrushing || this.state.isSampling ? null : this.handleMouseLeave}\r\n        onClick={this.state.isBrushing || this.state.isBrushing ?  null : this.selectPath}\r\n        onDoubleClick={this.handleDoubleClick}\r\n      ></path>;\r\n    });\r\n\r\n    const axes = this.state.dimensions.map((d, i) => {\r\n      return <g className={'myAxis'} id={d + 'on' + this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1]} dim={d} key={Math.random()}></g>;\r\n    });\r\n\r\n\r\n    const clickAxes = this.state.dimensions.map((d, i) => {\r\n      return <g className={'myClickAxis'} id={d + 'onClick' + this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1]} key={d + '-key'}></g>;\r\n    });\r\n\r\n    const points = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true).map((d) => {\r\n      return <g className={'myPoint'} id={d.get('viewId')} key={'pt-' + d.get('viewId') + '-key'}></g>;\r\n    });\r\n\r\n    const sketchPoints = this.state.dimensions.map((d, i) => {\r\n      return <g className={'mySketchPoint'} key={'sp-' + d + '-key'}></g>;\r\n    });\r\n\r\n    const sketchPaths = <path className={'mySketchPath'} style={pathStyle}></path>;\r\n\r\n    const brushTextN = <text className={\"myBrushText\"} id={\"myBrushTextN\"}></text>;\r\n    const brushTextS = <text className={\"myBrushText\"} id={\"myBrushTextS\"}></text>;\r\n\r\n    // generating inputBoxes as number of active brushes\r\n    const inputBoxes = this.brushes.filter((b) => (b.extent[0] + b.extent[1]) !== 0).map((d, i) => {\r\n      return <input className={\"inputBox\"} type=\"text\" name={'inputBox-' + (i+1)} id={d.id + '_input'} key={'ibox-' + d.id + '-key'}/>;\r\n    });\r\n\r\n\r\n    const customStyles = {\r\n      container: (base, state) => {\r\n        return ({\r\n          ...base, \r\n          zIndex: state.isFocused ? '998' : '1',\r\n        });\r\n      },\r\n      dropdownIndicator:  (base, state) => {\r\n        return({\r\n          ...base,\r\n          color: 'black',\r\n        })\r\n      },\r\n      control: (base, state) => {\r\n        return({\r\n        ...base,\r\n        backgroundColor: \"#fff\",\r\n        borderWidth: \"2px\",\r\n        borderColor: \"#000\"\r\n        })\r\n      }\r\n    };\r\n    \r\n    \r\n    return <div     \r\n            onKeyDown={this.handleKeyEvents}\r\n            tabIndex=\"0\">\r\n              <svg width={width} height={height} ref={(e) => this.svgEl = e}>\r\n                <g id='drawArea' width={width} height={height}>\r\n                  {clickAxes}\r\n                  {axes}\r\n                  {paths}\r\n                  {this.state.isAltering || this.state.isCloning || this.state.isLiveEditing ? points : null}\r\n                  {this.state.isSketching ? sketchPaths : null}\r\n                  {this.state.isSketching ? sketchPoints : null}\r\n                  {this.state.isBrushing || this.state.isSampling ? brushTextN : null}\r\n                  {this.state.isBrushing || this.state.isSampling ? brushTextS : null}\r\n                </g>\r\n              </svg>\r\n            {this.state.isSampling ? inputBoxes : null}\r\n            {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage}/> : null}\r\n            <ParallelMenu \r\n              isBrushing = {this.state.isBrushing}\r\n              isSketching = {this.state.isSketching}\r\n              isAltering = {this.state.isAltering}\r\n              isSampling = {this.state.isSampling}\r\n              isLiveEditing = {this.state.isLiveEditing}\r\n              isCloning = {this.state.isCloning}\r\n              isToggling = {this.state.isToggling}\r\n              isCPing = {this.state.isCPing}\r\n              isPSing = {this.state.isPSing}\r\n              isSAing = {this.state.isSAing}\r\n              isSCPing = {this.state.isSCPing}\r\n              handleBrushAxisClick = {this.handleBrushAxisClick}\r\n              handleSampleAxisClick = {this.handleSampleAxisClick}\r\n              handleParameterSpectraClick = {this.handleParameterSpectraClick}              \r\n              handleSpectralCartesianProductClick = {this.handleSpectralCartesianProductClick}\r\n              toggleAlterMode = {this.toggleAlterMode}\r\n              handleSensitivityAnalysisClick = {this.handleSensitivityAnalysisClick}\r\n              toggleLiveEditMode = {this.toggleLiveEditMode}\r\n              handleCloneEditAlternativeClick = {this.handleCloneEditAlternativeClick}\r\n              handleSketchAlternativeClick = {this.handleSketchAlternativeClick}\r\n              handleCartesianProductClick = {this.handleCartesianProductClick}\r\n              selectParameter = {this.selectParameter}\r\n              lockAspectRatio = {this.lockRatio.bind(this)}\r\n              onParameterSpectraSelect = {this.onParameterSpectraSelect}  \r\n              onParameterSpectraDeltaChange = {this.onParameterSpectraDeltaChange} \r\n              onSensitivityAnalysisDeltaChange = {this.onSensitivityAnalysisDeltaChange}           \r\n            />\r\n          {this.state.isToggling ?\r\n          <Select\r\n              styles={customStyles}\r\n              defaultValue={this.defaultOptions}\r\n              isMulti\r\n              isClearable={false}\r\n              options={this.options}\r\n              onChange={this.toggleParameter}\r\n              closeMenuOnSelect={false}\r\n            /> : null }\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Parallel;\r\n","import appConstants from '../constants/appConstants';\r\n\r\n/**\r\n * sends the success message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const successMessage = (id, message) => ({\r\n  type: appConstants.get('HANDLE_SUCCESS'),\r\n  payload: {\r\n    id,\r\n    message,\r\n  },\r\n});\r\n\r\n/**\r\n * sends the warning message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const warningMessage = (id, message) => ({\r\n  type: appConstants.get('HANDLE_WARNING'),\r\n  payload: {\r\n    id,\r\n    message,\r\n  },\r\n});\r\n\r\n/**\r\n * sends the error message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const errorMessage = (id, message) => {\r\n  return ({\r\n    type: appConstants.get('HANDLE_ERROR'),\r\n    payload: {\r\n      id,\r\n      message,\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * toggles message history pane view\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const toggleHistory = (payload) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_HISTORY'),\r\n    payload,\r\n  });\r\n};\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace parallelActions\r\n */\r\n\r\nimport {toast} from 'react-toastify';\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\n  \r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function newCartesianProduct\r\n * @description initiates a new cartesian product process on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs \r\n * @param {array} selectedDimensions\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newCartesianProduct = (alternativeIDs, selectedDimensions, destinations) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('cartesian_product'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Cartesian Product has started'), 'Cartesian Product has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Cartesian Product has not started'), 'Cartesian Product has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newParameterSpectra\r\n * @description initiates a new ParameterSpectra process on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs \r\n * @param {array} selectedDimensions\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newParameterSpectra = (alternativeIDs, selectedDimensions, paramaterSpectraAltNum, paramaterSpectraDelta, destinations) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('parameter_spectra'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      psnum : paramaterSpectraAltNum,\r\n      psdelta: paramaterSpectraDelta,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Parameter Spectra has started'), 'Parameter Spectra has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Parameter Spectra has not started'), 'Parameter Spectra has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSampling\r\n * @description initiates a new sampling process on the server\r\n * @memberof parallelActions\r\n * @param {array} altIds - an array of alternative viewIDs \r\n * @param {array} brushes - an array of brush objects\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store \r\n */\r\nexport const newSampling = (altIds, brushes,destinations) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('sampling'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      altIds : altIds,\r\n      brushes : brushes,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Sampling has started'), 'Sampling has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Sampling has not started'), 'Sampling has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSpectralCartesianProduct\r\n * @description initiates a new specrtralCartesianProduct on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs - an array of alternative viewIDs\r\n * @param {array} selectedDimensions - an array of selected dimensions\r\n * @param {string} collectionID - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newSpectralCartesianProduct = (alternativeIDs, selectedDimensions, collectionID,destinations) => (dispatch) => {\r\n  \r\n  return fetch(urls.get('spectral_cartesian_product'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      collection_id : collectionID,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Spectral Cartesian Product has started'), 'Spectral Cartesian Product has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Spectral Cartesian Product has not started'), 'Spectral Cartesian Product has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSensitivityAnalysis\r\n * @description initiates a new sensitivity analysis on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs - an array of alternative viewIDs\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store \r\n */\r\nexport const newSensitivityAnalysis = (alternativeIDs, sensitivityAnalysisDelta, destinations) => (dispatch) => {\r\n  \r\n  return fetch(urls.get('sensitivity_analysis'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      destinations : destinations,\r\n      sadelta: sensitivityAnalysisDelta\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Sensitivity Analysis has started'), 'Sensitivity Analysis has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Sensitivity Analysis has not started'), 'Sensitivity Analysis has not started ' + time));\r\n  });\r\n};","import appConstants from '../constants/appConstants';\r\n\r\n/**\r\n * ***IMPORTANT***\r\n * The functions here are 'action creators'. Action creators\r\n * dispatch actions to trigger reducers, which is the only way\r\n * to update the redux store.\r\n */\r\n\r\n/**\r\n * dispatches an action that alternatives are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const alternativesFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_ALTERNATIVES'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that collections are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const collectionsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_COLLECTIONS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that layouts are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const layoutFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that projects are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const projectFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_PROJECT'),\r\n  payload,\r\n});\r\n\r\n\r\nexport const fetchingProject = () => ({\r\n  type:  appConstants.get('FETCHING_PROJECT'),\r\n})\r\n\r\n/**\r\n * dispatches an action that selectes a project\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const projectLoaded = (payload) => ({\r\n  type: appConstants.get('SELECT_PROJECT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that keySets are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const keySetsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_KEY_SETS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that valueBands are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const valueBandsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_VALUE_BANDS'),\r\n  payload,\r\n});\r\n\r\nexport const settingsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_SETTINGS'),\r\n  payload,\r\n})\r\n\r\n/**\r\n * dispatches to set the value bands\r\n * @param {string} dim\r\n * @param {number} end\r\n * @param {number} val\r\n * @return {object} : action object\r\n */\r\nexport const setValueBands = (dim, end, val) => ({\r\n  type: appConstants.get('SET_VALUE_BANDS'),\r\n  payload: {\r\n    dim,\r\n    end,\r\n    val,\r\n  }\r\n});\r\n\r\n/**\r\n * dispatches an action to add alternatives\r\n * appends to the existing state\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const addAlternative = (payload) => ({\r\n  type: appConstants.get('ADD_NEW_ALTERNATIVES'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * adds an alternative to a collection\r\n * @param {string} collectionId \r\n * @param {string} alternativeId \r\n * @param {array} collectionInputs\r\n * @param {array} collectionOutputs\r\n * @param {array} dimOrder\r\n * @return {object} : action object\r\n */\r\nexport const addAlternativeToCollection = (collectionId, alternativeId, collectionInputs, collectionOutputs, dimOrder) => {\r\n  \r\n  return ({\r\n    type: appConstants.get('ADD_ALTERNATIVE_TO_COLLECTION'),\r\n    payload: {\r\n      collectionId, \r\n      alternativeId,\r\n      collectionInputs,\r\n      collectionOutputs,\r\n      dimOrder\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * updates an alternative in the store\r\n * with data coming from server\r\n * @param {string} viewId\r\n * @param {object} alternative\r\n * @return {object} : action object\r\n */\r\nexport const updateAlternative = (viewId, alternative) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_ALTERNATIVE'),\r\n    payload: {\r\n      viewId,\r\n      alternative,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * dispatches an action to update\r\n * maximum number of columns of gridLayout\r\n * this is invoked whenever a collection is dragged to the\r\n * current edge of gridLayout\r\n * @param {object} layout\r\n * @return {object} : action object\r\n */\r\nexport const updateMaxColumns = (layout) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_MAX_COLUMNS'),\r\n    width: Math.max(...layout.map((item) => item.x + item.w)) + 9,\r\n    layout,\r\n  });\r\n}\r\n\r\n/**\r\n * dispatches an action that creates a new collection\r\n * appends to existing list of collections\r\n * @param {array} altIds\r\n * @param {string} collectionName\r\n * @param {string} refId\r\n * @param {array} tags\r\n * @param {string} viewId\r\n * @param {boolean} isSelected\r\n * @param {boolean} isSinked\r\n * @param {number} viewType\r\n * @param {array} dimOrder\r\n * @param {array} inputs\r\n * @param {array} outputs\r\n * @param {array} destinations\r\n * @param {number} currentMode\r\n */\r\nexport const createCollection = (altIds, collectionName, refId,\r\n  tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView) => {\r\n  return ({\r\n    type: appConstants.get('CREATE_COLLECTION'),\r\n    payload: {\r\n      'altsid': altIds,\r\n      'collectionName': collectionName,\r\n      'refId': refId,\r\n      'tags': tags,\r\n      'viewId': viewId,\r\n      'isSelected': isSelected,\r\n      'isSinked': isSinked,\r\n      'viewType': viewType,\r\n      'dimOrder': dimOrder,\r\n      'inputs':  inputs,\r\n      'outputs': outputs,\r\n      'destinations': destinations,\r\n      'currentMode': currentMode,\r\n      'isEditingName': isEditingName,\r\n      'collectionNameView': collectionNameView,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dispatches an action to delete a collection\r\n * removes from the existing state\r\n * @param {string} collectionId\r\n * @return {object} : action object\r\n */\r\nexport const deleteCollection = (collectionId) => ({\r\n  type: appConstants.get('DELETE_COLLECTION'),\r\n  payload: collectionId,\r\n});\r\n\r\n/**\r\n * selects a collection\r\n * appends to the existing state\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const selectCollection = (viewId) =>({\r\n  type: appConstants.get('SELECT_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n  },\r\n});\r\n\r\n/**\r\n * deselect a collection\r\n * removes from the existing state\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const deselectCollection = (viewId) => ({\r\n  type: appConstants.get('DESELECT_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n  },\r\n});\r\n\r\n/**\r\n * deselect all collections\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const deselectAllCollections = (payload) => ({\r\n  type: appConstants.get('DESELECT_ALL_COLLECTIONS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * clips a collection i.e. removes it from grid layout\r\n * it saves the collection's id, its alterntives and layout before doing that\r\n * @param {string} viewId\r\n * @param {string} refId\r\n * @param {array} altIDs\r\n * @param {array} layout\r\n * @return {object} : action object\r\n */\r\nexport const clipCollection = (viewId, refId, altIDs = [], layout = []) => ({\r\n  type: appConstants.get('CLIP_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n    'refId': refId,\r\n    'altsid': altIDs,\r\n    'layout': layout,\r\n  },\r\n});\r\n\r\n/**\r\n * selects an alternative\r\n * remembers the collection it was selected from\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const selectAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('SELECT_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * hovers an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const hoverAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('HOVER_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dehovers all alternative\r\n * @return {object} : action object\r\n */\r\nexport const dehoverAllAlternative = () => {\r\n  return ({\r\n    type: appConstants.get('DEHOVER_ALL_ALTERNATIVES'),\r\n  });\r\n};\r\n\r\n/**\r\n * deselects an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const deselectAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('DESELECT_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dehovers an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const dehoverAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('DEHOVER_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * deselects all alternatives\r\n * @return {object} : action object\r\n */\r\nexport const deselectAllAlternatives = () => ({\r\n  type: appConstants.get('DESELECT_ALL_ALTERNATIVES'),\r\n});\r\n\r\n/**\r\n * clips an alternative with given ID\r\n * @param {string} viewId\r\n * @param {string} refId\r\n * @return {object} : action object\r\n */\r\nexport const clipAlternatives = (viewId, refId) => ({\r\n  type: appConstants.get('CLIP_ALTERNATIVE'),\r\n  payload: {\r\n    'viewId': viewId,\r\n    'refId': refId,\r\n  },\r\n});\r\n\r\n/**\r\n * adds a layout object to grid layout\r\n * this is usually done for a new collection\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const addLayoutObject = (payload) => ({\r\n  type: appConstants.get('INSERT_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n\r\n/**\r\n * saves the layout params for a given grid layout\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const saveLayoutObject = (payload) => ({\r\n  type: appConstants.get('SAVE_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * cleans up the clipboard for alternatives\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const clearAltsClipboard = (payload) => ({\r\n  type: appConstants.get('CLEAR_ALTS_CLIPBOARD'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * cleans up the clipboard for collections\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const clearColsClipboard = (payload) => ({\r\n  type: appConstants.get('CLEAR_COLS_CLIPBOARD'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * updates the store with the edited name for the collection\r\n * with given ID\r\n * @param {string} collectionId\r\n * @param {string} collectionName\r\n * @return {object} : action object\r\n */\r\nexport const editNameForCollection = (collectionId, collectionName) => ({\r\n  type: appConstants.get('CHANGE_COLLECTION_NAME'),\r\n  payload: {collectionId, collectionName},\r\n});\r\n\r\n/**\r\n * shows the header menu at the given X Y coordinates\r\n * @param {number} headerX\r\n * @param {number} headerY\r\n * @return {object} : action object\r\n */\r\nexport const showHeader = (headerX, headerY) => {\r\n  return ({\r\n    type: appConstants.get('SHOW_HEADER'),\r\n    headerX,\r\n    headerY,\r\n  });\r\n};\r\n\r\n/**\r\n * hides the header menu\r\n * @return {object} : action object\r\n */\r\nexport const hideHeader = () => {\r\n  return ({\r\n    type: appConstants.get('HIDE_HEADER'),\r\n  });\r\n};\r\n\r\n/**\r\n * shows the sink menu at the given X Y coordinates\r\n * @param {number} listX\r\n * @param {number} listY\r\n * @return {object} : action object\r\n */\r\nexport const showSinkList = (listX, listY) => {\r\n  return ({\r\n    type: appConstants.get('SHOW_SINK_LIST'),\r\n    listX,\r\n    listY,\r\n  });\r\n};\r\n\r\n/**\r\n * hides the sink menu\r\n * @return {object} : action object\r\n */\r\nexport const hideSinkList = () => {\r\n  return ({\r\n    type: appConstants.get('HIDE_SINK_LIST'),\r\n  });\r\n};\r\n\r\n/**\r\n * 'inSink' is a boolean property for collections to determine\r\n * whether to render them or not; this toggles its value\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const toggleSink = (payload) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_SINK'),\r\n    payload,\r\n  });\r\n};\r\n\r\n/**\r\n * change the view mode (default, parallel, scatter)\r\n * @param {string} collectionId\r\n * @param {number} viewType\r\n * @return {object} : action object\r\n */\r\nexport const toggleViewMode = (collectionId, viewType) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_VIEW_MODE'),\r\n    payload: {\r\n      collectionId,\r\n      viewType,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * change the view mode (folder, parallel, list)\r\n * @param {string} alternativeID\r\n * @return {object} : action object\r\n */\r\nexport const toggleAltView = (alternativeID) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_ALT_VIEW'),\r\n    payload: alternativeID,\r\n  });\r\n};\r\n\r\n/**\r\n * modifies an alternative's parameter\r\n * @param {string} alternativeID\r\n * @param {string} parameter\r\n * @param {object} newValue\r\n * @return {object} : action object\r\n */\r\nexport const alterAlternative = (alternativeID, parameter, newValue) => {\r\n  return ({\r\n    type: appConstants.get('ALTER_ALTERNATIVE'),\r\n    payload: {\r\n      alternativeID,\r\n      parameter,\r\n      newValue,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * adds a field to a data object\r\n * @param {object} alternative\r\n * @param {string} field\r\n * @return {object} : action object\r\n */\r\nexport const addDataField = (alternative, field) => {\r\n  return ({\r\n    type: appConstants.get('ADD_DATA_FIELD'),\r\n    payload: {\r\n      alternative: alternative,\r\n      field: field,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * removes a field from a data object\r\n * @param {object} alternative\r\n * @param {string} field\r\n * @return {object} : action object\r\n */\r\nexport const removeDataField = (alternative, field) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_DATA_FIELD'),\r\n    payload: {\r\n      alternative: alternative,\r\n      field: field,\r\n    },\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @param {string} alternativeId: id of alternative\r\n * @return {object} : action object\r\n */\r\nexport const orderAlternatives = (alternativeId) => {\r\n  return ({\r\n    type: appConstants.get('ORDER_ALTERNATIVES'),\r\n    payload: alternativeId,\r\n  });\r\n};\r\n\r\n/**\r\n * @param {string} viewId: id of collection\r\n * @param {array} dimOrder: current dimensionsions and their order\r\n * @return {object} : action object\r\n */\r\nexport const orderCollectionDimensions = (viewId, dimOrder) => {\r\n  return ({\r\n    type: appConstants.get('ORDER_COLLECTION_DIMENSIONS'),\r\n    payload: {\r\n      viewId,\r\n      dimOrder,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @param {string} viewId: id of collection\r\n * @param {boolean} isLoading: status of collection\r\n * @return {object} : action object\r\n */\r\nexport const setLoadingState = (viewId, isLoading) => {\r\n  return ({\r\n    type: appConstants.get('SET_LOADING_STATE'),\r\n    payload: {\r\n      viewId,\r\n      isLoading,\r\n    },\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @param {object} payload: array of alternative ids\r\n * @return {object} : action object\r\n */\r\nexport const removeAlternatives = (payload) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_ALTERNATIVE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setAlternativeSize = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_ALTERNATIVE_SIZE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setCompactionType = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_COMPACTION_TYPE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const gatherAllCollections = () => {\r\n  return ({\r\n    type: appConstants.get('GATHER_ALL_COLLECTIONS'),\r\n  });\r\n};\r\n\r\nexport const toggleSettings = () => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_SETTINGS'),\r\n  });\r\n};\r\n\r\n/**\r\n * shows and hides search dialog\r\n */\r\nexport const toggleSearch = () => {\r\n  return ({\r\n   type: appConstants.get('TOGGLE_SEARCH'),\r\n  })\r\n}\r\n/**\r\n *  show search results and hides search screen\r\n */\r\nexport const searchedCollectionSuccess = () => ({\r\n  type: appConstants.get('SEARCHED_COLLECTION'),\r\n});\r\n\r\n/**\r\n * @param {Array} strings\r\n * @description shows validation message with unmatch resuslts \r\n */\r\nexport const searchedCollectionFailed = (namesMissMatch) => {\r\n  return ({\r\n    type: appConstants.get('SEARCH_COLLECTION_FALID'),\r\n    payload: namesMissMatch\r\n  })\r\n}\r\n\r\n/**\r\n * removes validation\r\n */\r\nexport const emptyMissMatchArray = () => {\r\n  return({\r\n    type: appConstants.get('EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH'),\r\n  });\r\n}\r\n\r\nexport const setCollisionPrevention = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_COLLISION_PREVENTION'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setCollectionDestination = (collection, destinations) => {\r\n  return ({\r\n    type: appConstants.get('SET_COLLECTION_DESTINATION'),\r\n    payload: {\r\n      collection,\r\n      destinations,\r\n    }\r\n  })\r\n}\r\n\r\nexport const setCollectionMode = (collection, mode) => {\r\n  return ({\r\n    type: appConstants.get(\"SET_COLLECTION_MODE\"),\r\n    payload: {\r\n      collection,\r\n      mode,\r\n    }\r\n  });\r\n}\r\n\r\nexport const updateCollectionTags = (collectionId, tags) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_COLLECTION_TAGS'),\r\n    payload: {\r\n      collectionId,\r\n      tags\r\n    }\r\n  });\r\n}\r\n\r\nexport const addQuery = (queryId, fromCollection, queryString, selections) => {\r\n  \r\n  return ({\r\n    type: appConstants.get('ADD_QUERY'),\r\n    payload: {\r\n      queryId,\r\n      fromCollection, \r\n      queryString, \r\n      selections,\r\n    }\r\n  });\r\n}\r\n\r\nexport const removeQuery = (queryId) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_QUERY'),\r\n    payload: {\r\n      queryId,\r\n    }\r\n  });\r\n}\r\n\r\nexport const clearAllQueries = () => {\r\n  return ({\r\n    type: appConstants.get('CLEAR_ALL_QUERIES'),\r\n  });\r\n}\r\n\r\nexport const addBrush = (brush, colId) => {\r\n  return ({\r\n    type: appConstants.get('ADD_BRUSH'),\r\n    payload: {\r\n      ...brush,\r\n      colId\r\n    }\r\n  });\r\n}\r\n\r\nexport const removeBrush = (brushId) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_BRUSH'),\r\n    payload: {\r\n      brushId,\r\n    }\r\n  });\r\n}\r\n\r\nexport const clearAllBrushes = () => {\r\n  return ({\r\n    type: appConstants.get('CLEAR_ALL_BRUSHES'),\r\n  });\r\n}\r\n\r\nexport const updateLayoutForCollection = (layoutId) => {\r\n  return ({\r\n    type: appConstants.get(\"UPDATE_LAYOUTS\"),\r\n    payload: layoutId,\r\n  })\r\n}\r\n\r\n\r\nexport const isEditingCollectionsName = (refId) => {\r\n   return ({\r\n     type: appConstants.get(\"HANDLE_EDIT_NAME_START\"),\r\n     payload: refId,\r\n   })\r\n}\r\n\r\nexport const removeFocus = () => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_FOCUS')\r\n  })\r\n}\r\n\r\nexport const editCollectionName = (name) => {\r\n  return ({\r\n    type: appConstants.get(\"EDIT_COLLECTION_NAME\"),\r\n    payload: {\r\n      name: name,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const isCreatingProject = () => {\r\n  return ({\r\n    type: appConstants.get(\"CREATING_PROJECT\"),\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * dispatches an action that user is fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const userFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_USER'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that user is not fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const userFetchFailed = (payload) => ({\r\n  type: appConstants.get('NOT_FETCH_USER'),\r\n  payload,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: appConstants.get(\"LOGOUT_USER\"),\r\n})\r\n\r\nexport const updateDeletedProject = (projectId) => ({\r\n  type: appConstants.get(\"DELETE_PROJECT\"),\r\n  payload: projectId\r\n})\r\n\r\nexport const openEditProject = (project) => ({\r\n  type: appConstants.get(\"PROJECT_EDIT_BOX\"),\r\n  payload: project\r\n})\r\n\r\n\r\nexport const updateProjectDetails = (editElements) => ({\r\n  type: appConstants.get(\"UPDATE_PROJECT\"),\r\n  payload: editElements\r\n})\r\n\r\n\r\nexport const showProjectMenu = (xPos, yPos, project) => {\r\n  return ({\r\n    type: appConstants.get(\"SHOW_PROJECT_CONTEXT_MENU\"),\r\n    payload: {\r\n      xPos: xPos,\r\n      yPos: yPos, \r\n      project: project\r\n    }\r\n  })\r\n}\r\n\r\nexport const shouldCloseProjectContextMenu = () => ({\r\n  type: appConstants.get(\"HIDE_PROJECT_CONTEXT_MENU\")\r\n})\r\n\r\n\r\n\r\n","/**\r\n * Action dispatchers for operations on alternative objects\r\n * @namespace alternativeActions\r\n */\r\n\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  findCollectionsFromID,\r\n  fetchCollectionsNotID,\r\n} from '../util/collections';\r\nimport {\r\n  fetchAlternativesNotID,\r\n  findAlternativesFromID,\r\n  findAlternativeRelativesFromID,\r\n} from '../util/alternatives';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {\r\n  collectionsFetch,\r\n  selectAlternative,\r\n  orderAlternatives,\r\n  hoverAlternative,\r\n  dehoverAllAlternative,\r\n  addAlternative,\r\n  addAlternativeToCollection,\r\n  deselectAlternative,\r\n  setLoadingState,\r\n  removeAlternatives\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux'\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function createNewAlternative\r\n * @description creates a new alternative from a given set of base-alternatives and an object of sketch points\r\n * @memberof alternativeActions\r\n * @param {array} viewIds - a set of base-alternatives\r\n * @param {object} sketchData - an object of sketch points\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const createNewAlternative = (viewIds, sketchData) => (dispatch) => {\r\n    return fetch(urls.get('alternative_sketching'), {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        ids: viewIds.toJS(),\r\n        values: sketchData\r\n      })\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n        //TODO: check if success!\r\n        dispatch(successMessage(toast.success('New alternative created'), 'new alternative created' + time));\r\n      }).catch((err) => {\r\n        console.log(err);\r\n        dispatch(errorMessage(toast.error('New alternative creation failed'), 'new alternative creation failed' + time));\r\n      });\r\n};\r\n\r\n/**\r\n * @function restoreAlternative\r\n * @description initiates a *round-trip* for a given alternative\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewId of the alternative\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const restoreAlternative = (viewId) => () => {\r\n    return fetch(urls.get('alternativeRestore'), {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({viewId : viewId})\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n        return data;\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    });\r\n};\r\n\r\n/**\r\n * @function cutAlternativesFromCollection\r\n * @description dispatches an action to cut an alternative from the collection\r\n * @memberof alternativeActions\r\n * @param {string} altID - viewId of the alternative\r\n * @returns {void}\r\n */\r\nexport const cutAlternativesFromCollection = (altID) => (dispatch, getState) => {\r\n    try {\r\n      dispatch(deselectAlternative(altID));\r\n      const collections = getState().collections.get('collections');\r\n      const alternatives = getState().alternatives.get('alternatives');\r\n      const alternative = findAlternativesFromID(alternatives, altID); \r\n      const otherCollections = fetchCollectionsNotID(collections, alternative.get(\"collectionViewId\"));\r\n      const collection = findCollectionsFromID(collections, alternative.get(\"collectionViewId\"));\r\n      const oldAlts = collection.get('altsid');\r\n      const filteredAlts = fetchAlternativesNotID(oldAlts, altID);\r\n      const updatedCollection = collection.set('altsid', filteredAlts);\r\n      const newCollections = otherCollections.push(updatedCollection);\r\n      dispatch(collectionsFetch(newCollections));\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  };\r\n\r\n\r\n/**\r\n * @function removeAlternativesFromCollection\r\n * @description removes a list of alternatives from a collection\r\n * @memberof alternativeActions\r\n * @param {ImmutableList} alts - an immutable list of alternatives\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const removeAlternativesFromCollection = (alts) => (dispatch, getState) => {\r\n  if (alts.size > 0) {\r\n    const refIds = [];\r\n    const collectionRefId = [];\r\n  \r\n    alts.map((alt) => {\r\n      refIds.push(alt.get('refId'));\r\n      collectionRefId.push(alt.get('collectionRefId'));\r\n    });\r\n    \r\n    return fetch(urls.get('alternativesRemove'), {\r\n      method: 'delete',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({refIds:refIds , collectionRefId:collectionRefId}),\r\n    }).then(response => response.json())\r\n    .then((data) => {\r\n      data.map((alt) => {\r\n        batch(() => {\r\n          dispatch(deselectAlternative(alt)); \r\n          dispatch(removeAlternatives(alt));\r\n          dispatch(cutAlternativesFromCollection(alt));\r\n        })\r\n      });\r\n      dispatch(successMessage(toast.success('Alternative(s) removed'), 'alternative(s) removed ' + time));\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('Alternative(s) not removed'), 'alternative(s) not removed ' + time));\r\n    });\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('please select an alternative'), 'please select an alternative' + time));\r\n  }\r\n \r\n}\r\n\r\n/**\r\n * @function refAlternativesToCollection\r\n * @description refs alternative(s) to collection(s)\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to ref\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const refAlternativesToCollection = (alts, cols) => (dispatch, getState) => {\r\n    if (alts.length > 0 && cols.length > 0) {\r\n      const toastyVar =  toast.info(\"Copying Alts To collection\", {\r\n        toastId: \"CopyAltsWithRef\",\r\n        autoClose: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        progress: 0.8,\r\n        position: 'bottom-center',\r\n        rtl: true,\r\n      });\r\n      return fetch(urls.get('alternativeCopy'), {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          source: alts,\r\n          destination: cols,\r\n        })\r\n      }).then(response => response.json())\r\n        .then((data) => {\r\n          \r\n          toast.update(toastyVar, {progress: 0.5});\r\n\r\n          data.forEach((datum) => {\r\n\r\n            const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n            const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n            const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n            datum.alts.map((alternative) => {\r\n              dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)));\r\n            });\r\n\r\n            datum.alts.map((alt, index) => {\r\n              batch(() => {\r\n                // TODO: fix collection inputs/outputs/dimOrder\r\n                dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n                dispatch(deselectAlternative(alts[index]));\r\n                dispatch(hoverAlternativeSpecial(alt.viewId));\r\n              });\r\n            });\r\n          });\r\n\r\n          toast.update(toastyVar, {progress: 0, closeOnClick: true, autoClose: 1});\r\n          \r\n          dispatch(successMessage(toast.success('Alternative(s) copied'), 'alternative(s) copied ' + time));\r\n      }).catch((err) => {\r\n        \r\n        toast.update(toastyVar, {progress: 0, closeOnClick: true, autoClose: 1});\r\n\r\n        dispatch(errorMessage(toast.error('Alternative(s) not copied'), 'alternative(s) not copied ' + time));\r\n      })\r\n    } else {\r\n      dispatch(warningMessage(toast.warning('please select an alternative and a collection'), 'please select an alternative and a collection' + time));\r\n    }\r\n  };\r\n    \r\n \r\n\r\n/**\r\n * @function cloneAlternativesToCollection\r\n * @description clone alternative(s) to collection(s)\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to clone\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneAlternativesToCollection = (alts, cols) => (dispatch, getState) => {\r\n\r\n  if (alts.length > 0 && cols.length > 0) {\r\n    const toastyVar =  toast.info(\"Cloning alts to collection\", {\r\n      toastId: \"CloneAltsToCollection\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      progress: 0.8,\r\n      position: 'bottom-center',\r\n      rtl: true,\r\n    });\r\n\r\n    return fetch(urls.get('alternativeClone'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        source: alts,\r\n        destination: cols,\r\n      }),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n        \r\n        toast.update(toastyVar, {progress: 0.5});\r\n\r\n        data.forEach((datum) => {\r\n\r\n          const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n          const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n          const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n          datum.alts.map((alternative) => {\r\n            dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n          });\r\n\r\n          datum.alts.map((alt, index) => {\r\n            batch(() => {\r\n              // TODO: fix collection inputs/outputs/dimOrder\r\n              dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n              dispatch(deselectAlternative(alts[index]));\r\n              dispatch(hoverAlternativeSpecial(alt.viewId));\r\n            });\r\n          });\r\n        });\r\n        toast.update(toastyVar, {\r\n          progress: 0,\r\n          closeOnClick: true,\r\n          autoClose: 1,\r\n        })\r\n        dispatch(successMessage(toast.success('Alternative(s) cloned'), 'alternative(s) cloned ' + time));\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0,\r\n        closeOnClick: true,\r\n        autoClose: 1,\r\n      })\r\n      dispatch(errorMessage(toast.success('Alternative(s) not cloned'), 'alternative(s) not cloned ' + time));\r\n    })\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('Please select an alternative and a collection'), 'please select an alternative and a collection' + time));\r\n  }\r\n};\r\n\r\n/**\r\n * @function cloneEditAlternativesToCollection\r\n * @description clones alternative(s) to collection(s) and selects them to edit\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to ref\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneEditAlternativesToCollection = (alts, cols) => (dispatch, getState) => {\r\n  return fetch(urls.get('alternativeCloneEdit'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      source: alts,\r\n      destination: cols,\r\n    }),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      data.forEach((datum) => {\r\n\r\n        const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n        const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n        const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n        datum.alts.map((alternative) => {\r\n          dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n        });\r\n        datum.alts.map((alt, index) => {\r\n          batch(() => {\r\n\r\n            // TODO: fix collection inputs/outputs/dimOrder\r\n            dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n            dispatch(deselectAlternative(alts[index]));\r\n            dispatch(selectAlternative(alt.viewId));\r\n          });\r\n        });\r\n      });\r\n        dispatch(successMessage(toast.success('Alternative cloned'), 'alternative cloned ' + time));\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.success('Alternative not cloned'), 'alternative not cloned ' + time));\r\n  })\r\n\r\n} \r\n\r\n/**\r\n * @function editAlternatives\r\n * @description edits alternatives\r\n * @memberof alternativeActions\r\n * @param {object} editedAlts - an object composed of alternative viewIDs and edited params\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const editAlternatives = (editedAlts) => (dispatch, getState) => {\r\n  Object.keys(editedAlts).map((key) => {\r\n    dispatch(setLoadingState(key, true));\r\n    findAlternativeRelativesFromID(getState().alternatives.get('alternatives'), key)\r\n      .map((alt) => {\r\n        dispatch(setLoadingState(alt.get('viewId'), true))\r\n      })\r\n  });\r\n\r\n  return fetch(urls.get('alternativeEdit'), {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(editedAlts),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n\r\n      if(data.success === true) {\r\n        dispatch(successMessage(toast.success('Alternative(s) edited'), 'alternative(s) edited ' + time));\r\n      } else {\r\n        dispatch(warningMessage(toast.success('Edit failed'), 'edit failed ' + time));\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.success('Alternative(s) not edited'), 'alternative(s) not edited ' + time));\r\n    })\r\n  };\r\n\r\n/**\r\n * @function selectAlternatives\r\n * @description selects and orders the alternative with the given viewId\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @returns {void}\r\n */\r\nexport const selectAlternatives = (viewId) => (dispatch) => {\r\n  dispatch(selectAlternative(viewId));\r\n  dispatch(orderAlternatives(viewId));\r\n};\r\n\r\n/**\r\n * @function hoverAlternative\r\n * @description hovers and orders the alternative with the given viewId\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @returns {void}\r\n */\r\nexport const hoverAlternatives = (viewId) => (dispatch) => {\r\n  dispatch(dehoverAllAlternative());\r\n  dispatch(hoverAlternative(viewId));\r\n  dispatch(orderAlternatives(viewId));\r\n};\r\n\r\n/**\r\n * @function hoverAlternativeSpecial\r\n * @description hovers and orders the alternative with the given viewId (special: doesn't dehover the rest)\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @return {void}\r\n */\r\nexport const hoverAlternativeSpecial = (viewId) => (dispatch) => {\r\n  dispatch(hoverAlternative(viewId));\r\n  // dispatch(orderAlternatives(viewId));\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Parallel from '../components/parallel/Parallel';\r\nimport {\r\n    newCartesianProduct,\r\n    newParameterSpectra,\r\n    newSensitivityAnalysis,\r\n    newSpectralCartesianProduct,\r\n    newSampling,\r\n  } from '../actions/parallelActions';\r\n  import {\r\n    alterAlternative,\r\n    addDataField,\r\n    removeDataField,\r\n    orderCollectionDimensions,\r\n    setValueBands,\r\n    addQuery,\r\n    removeQuery,\r\n    clearAllQueries,\r\n    addBrush,\r\n    removeBrush,\r\n    clearAllBrushes,\r\n  } from '../actions/updateActions';\r\n  import {\r\n    cloneEditAlternativesToCollection,\r\n    createNewAlternative,\r\n    editAlternatives,\r\n  } from '../actions/alternativeActions';\r\n\r\nclass ParallelContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Parallel key={'parallelView-' + this.props.collection.get('viewId')} {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scales: state.scales,\r\n    queries: state.queries\r\n  });\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n  \r\n      alterAlternative: (alternativeID, parameter, newValue) => {\r\n        dispatch(alterAlternative(alternativeID, parameter, newValue));\r\n      },\r\n  \r\n      editAlternatives: (editedAlternatives) => {\r\n        dispatch(editAlternatives(editedAlternatives));\r\n      },\r\n  \r\n      cloneEditAlternatives: (alts = [], cols = []) => {\r\n        dispatch(cloneEditAlternativesToCollection(alts, cols))\r\n      },\r\n  \r\n      createNewAlternative: (alternativeID, newId, sketchData) => {\r\n        dispatch(createNewAlternative(alternativeID, newId, sketchData));\r\n      },\r\n  \r\n      newCartesianProduct: (alternativeIDs , keySets, destinations) => {\r\n        dispatch(newCartesianProduct(alternativeIDs , keySets , destinations));\r\n      },\r\n  \r\n      \r\n      newParameterSpectra: (alternativeIDs , keySets, paramaterSpectraAltNum, paramaterSpectraDelta, destinations) => {\r\n        dispatch(newParameterSpectra(alternativeIDs , keySets, paramaterSpectraAltNum, paramaterSpectraDelta, destinations));\r\n      },\r\n    \r\n      newSensitivityAnalysis: (alternativeIDs, sensitivityAnalysisDelta, destinations) => {\r\n        dispatch(newSensitivityAnalysis(alternativeIDs, sensitivityAnalysisDelta, destinations));\r\n      },\r\n    \r\n      newSpectralCartesianProduct: (alternativeIDs, keySets , collectionID, destinations) => {\r\n        dispatch(newSpectralCartesianProduct(alternativeIDs, keySets , collectionID, destinations));\r\n      },\r\n    \r\n      newSampling: (altIds , brushes, destinations) => {\r\n        dispatch(newSampling(altIds , brushes, destinations));\r\n      },\r\n    \r\n      addDataField: (alternative, field) => {\r\n        dispatch(addDataField(alternative, field));\r\n      },\r\n    \r\n      removeDataField: (alternative, field) => {\r\n        dispatch(removeDataField(alternative, field));\r\n      },\r\n    \r\n      orderCollectionDimensions: (viewId, dimOrder) => {\r\n        dispatch(orderCollectionDimensions(viewId, dimOrder));\r\n      },\r\n  \r\n      setValueBands: (dim, end, val) => {\r\n        dispatch(setValueBands(dim, end, val))\r\n      },\r\n    \r\n      addQuery: (queryId, fromCollection, queryString, selections) => {\r\n        dispatch(addQuery(queryId, fromCollection, queryString, selections))\r\n      },\r\n    \r\n      removeQuery: (queryId) => {\r\n        dispatch(removeQuery(queryId))\r\n      },\r\n    \r\n      clearAllQueries: () => {\r\n        dispatch(clearAllQueries())\r\n      },\r\n    \r\n      addBrush: (brush, colId) => {\r\n        dispatch(addBrush(brush, colId))\r\n      },\r\n    \r\n      removeBrush: (brushId) => {\r\n        dispatch(removeBrush(brushId))\r\n      },\r\n    \r\n      clearAllBrushes: () => {\r\n        dispatch(clearAllBrushes())\r\n      },\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParallelContainer);","import React, {PureComponent} from 'react';\r\nimport styles from './listView.module.scss';\r\nimport MaterialTable, {MTableBodyRow} from 'material-table';\r\nimport Scene from '../scene/Scene';\r\nimport {\r\n  getAlternativeImageURL,\r\n  findAlternativesFromID,\r\n} from '../../util/alternatives';\r\nimport {\r\n  Md3DRotation,\r\n  MdInsertPhoto\r\n} from 'react-icons/md';\r\nimport debounce from 'lodash/debounce';\r\n\r\n/**\r\n * @class ListView\r\n * @extends React.PureComponent\r\n * @description presentational component for the list view\r\n */\r\nclass ListView extends PureComponent {\r\n\r\n  handleMouseEnter = (viewId, refId) => {\r\n    this.props.hoverAlternative(viewId, refId);\r\n  }\r\n\r\n  handleMouseLeave = (viewId, refId) => {\r\n    this.props.dehoverAlternative(viewId, refId);\r\n  }\r\n\r\n  handleRowClick = (e, selectedRow) => {\r\n      if (!this.props.altsInCollection.find(alt => alt.get('viewId') === selectedRow.viewId).get('isSelected')) {\r\n        this.props.selectAlternative(selectedRow.viewId);\r\n      } else {\r\n        this.props.deselectAlternative(selectedRow.viewId);\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={styles['list-container']}>\r\n        <MaterialTable\r\n          columns={this.props.columns}\r\n          data={this.props.data}\r\n          options={{\r\n            search: true,\r\n            sorting: true,\r\n            paging: false,\r\n            padding: 'dense',\r\n            showTitle: false,\r\n            maxBodyHeight: this.props.height,\r\n            headerStyle: {\r\n              position: 'sticky',\r\n              top: 0,\r\n            },\r\n            rowStyle: (rowData) => {\r\n              return {\r\n                backgroundColor:                    \r\n                // a ternary expression to select the background color                   \r\n                this.props.altsInCollection.filter((alternative) =>\r\n                  alternative.get('isSelected') && alternative.get('viewId') === rowData.viewId).size === 0 \r\n\r\n                  ? this.props.altsInCollection.filter((alternative) => this.props.selectedAlts.includes(alternative.get('refId')) \r\n                    && alternative.get('viewId') === rowData.viewId).size !== 0 \r\n\r\n                  ? styles.colorSelectedRelated : '#ffffff' : styles.colorSelected,\r\n              };\r\n            },\r\n          }}\r\n\r\n          components={{\r\n            Row: props => (\r\n              <MTableBodyRow\r\n                {...props}\r\n                id={props.data.viewId}\r\n                key={'tableList-' + props.data.viewId} \r\n                className={\"tableList tableList-ref-\" + props.data.refId + \" tableList-view-\" + props.data.viewId} \r\n                onMouseEnter={debounce(this.handleMouseEnter.bind(this, props.data.viewId, props.data.refId))}\r\n                onMouseLeave={debounce(this.handleMouseLeave.bind(this, props.data.viewId, props.data.refId))}\r\n              />\r\n            )\r\n          }}\r\n\r\n          onRowClick={this.handleRowClick.bind(this)}\r\n  \r\n          detailPanel={[\r\n            {\r\n              icon: () => <MdInsertPhoto/>,\r\n              tooltip: 'Show Image',\r\n              render: (rowData) => {\r\n                return (\r\n                  <div>\r\n                    <img src={getAlternativeImageURL(findAlternativesFromID(this.props.altsInCollection, rowData.viewId))}\r\n                      className={styles['alternative-image']}\r\n                      style={{\r\n                        height: 800,\r\n                        width: 800,\r\n                      }}\r\n                      alt={'image for ' + rowData.viewId}/>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              icon: () => <Md3DRotation/>,\r\n              tooltip: 'Show Model',\r\n              render: (rowData) => {\r\n                return (\r\n                  <div>\r\n                    <Scene\r\n                      customStyle={'position: sticky; left: 0;'}\r\n                      width={800} height={800}\r\n                      gltf={rowData.gltf}\r\n                      id={rowData.viewId}\r\n                    />\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListView from '../components/listView/ListView';\r\n\r\nclass ListContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const columns = this.props.dimensions.toJS().map((dim) => {\r\n          return {title: dim, field: dim, headerStyle: {position: 'sticky', top: 0, fontWeight: (Object.keys(this.props.collection.get('outputs')).includes(dim)) ? 'bold' : 'normal'}};\r\n        });\r\n    \r\n        const data = this.props.altsInCollection.map((alt) => {\r\n          return {\r\n            viewId: alt.get('viewId'), \r\n            gltf: alt.get('gltf'), \r\n            refId: alt.get('refId'),\r\n            collectionViewId: alt.get('collectionViewId'), \r\n            ...alt.get('parallelData').toJS()\r\n          };\r\n        }).toJS();\r\n    \r\n        this.state = {\r\n          columns: columns,\r\n          data: data,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <ListView key={'listView-' + this.props.collection.get('viewId')} columns={this.state.columns} data={this.state.data} {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dimensions: state.scales.get('keySets'),\r\n  })\r\n\r\nexport default connect(mapStateToProps)(ListContainer);","import React from 'react';\r\nimport styles from './infoBar.module.scss';\r\n\r\nconst InfoBar = props => {\r\n\r\n    const selected = props.altsInCollection.filter((alt) => alt.isSelected).length;\r\n\r\n    return (\r\n        <div className={styles[\"infobar\"]} ref={props.infoRef}>\r\n          <span>\r\n            <span className={styles[\"infopar-a\"]}>{props.altsInCollection.length}</span>\r\n            <span className={styles[\"infopar-s\"]}>{selected}</span>\r\n            <span className={styles[\"infopar-r\"]}></span>\r\n          </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBar;","import React from 'react';\r\nimport styles from './tagBar.module.scss';\r\n\r\nconst TagBar = props => {\r\n    const tags = props.tagOptions.map((tag, i) => { \r\n        return <span className={styles[\"tagBar-span\"]} key={\"tagBar-key\" + i}>#{tag.label}</span>\r\n    });\r\n\r\n    return (\r\n        <div className={styles[\"tagBar\"]}>\r\n            {tags}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TagBar;","import React, {PureComponent} from 'react';\r\nimport classnames from 'classnames';\r\nimport {\r\n  MdVerticalAlignBottom,\r\n  MdDelete,\r\n  MdDeleteForever,\r\n  MdCheckCircle,\r\n  MdCancel,\r\n} from 'react-icons/md';\r\nimport {\r\n  IoMdMove,\r\n} from 'react-icons/io';\r\nimport {FaHashtag} from 'react-icons/fa';\r\nimport {IconContext} from 'react-icons';\r\nimport AlternativeContainer from '../../../containers/AlternativeContainer';\r\nimport {\r\n  renderIf,\r\n} from '../../../util/util';\r\nimport {\r\n  getCollectionName,\r\n  getAlternativesInCollection,\r\n} from '../../../util/collections';\r\nimport styles from './collection.module.scss';\r\nimport {getLayoutForCollection} from '../../../util/layouts';\r\nimport ParallelContainer from '../../../containers/ParallelContainer';\r\nimport ListContainer from '../../../containers/ListContainer';\r\nimport InfoBar from '../../infoBar/InfoBar';\r\nimport TagBar from '../../tagBar/TagBar';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport * as d3 from 'd3';\r\n\r\n/**\r\n * @constant\r\n * @type {array}\r\n * @default\r\n */\r\nconst options = [\r\n  {value: 1, label: 'folder view'},\r\n  {value: 2, label: 'parallel view'},\r\n  {value: 3, label: 'list view'},\r\n];\r\n\r\n/**\r\n * @class Collection\r\n * @extends React.PureComponent\r\n * @description presentational component of a single collection containing **Alternatives** component.\r\n */\r\nclass Collection extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props - component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      isTagging: false,\r\n      isDragging: false,\r\n      collectionName: '',\r\n      shouldFocus: null,\r\n    }\r\n\r\n    this.infoRef = React.createRef();\r\n    this.destinationOptions = [];\r\n    this.tagOptions = [];\r\n  \r\n  }\r\n\r\n  /**\r\n  * @description gets the width and height after the component mounts\r\n  */\r\n  componentDidMount = () => {\r\n    const obj = this.cmpEl.getBoundingClientRect();\r\n    this.setState({\r\n      width: obj.width,\r\n      height: obj.height,\r\n      collectionName: getCollectionName(this.props.collection),\r\n    });\r\n  }\r\n\r\n  /**\r\n  * @description gets the width and height after the component updates\r\n  */\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    const obj = this.cmpEl.getBoundingClientRect();\r\n    this.setState({width: obj.width});\r\n    this.setState({height: obj.height});\r\n    \r\n    if (prevProps.collection.get(\"collectionName\") !== this.props.collection.get(\"collectionName\")) {\r\n      this.setState({\r\n        collectionName: this.props.collection.get(\"collectionName\"),\r\n      });\r\n    }\r\n\r\n    if(this.props.shouldRemoveFocus){\r\n      this.setState({\r\n        shouldFocus: null,\r\n      })\r\n      this.props.removeFocus();\r\n    }\r\n\r\n    if (prevProps.collection.get(\"isEditingName\") !==  this.props.collection.get(\"isEditingName\")) {\r\n      let element = document.getElementById(this.state.shouldFocus);\r\n\r\n      if (element !== null) {\r\n        element.select();\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  /**\r\n   * @function loadTags\r\n   * @description loads the tags that are available to the collection\r\n   * @memberof Collection\r\n   * @returns {void}\r\n   */\r\n  loadTags = () => {\r\n    this.tagOptions = this.props.collection.get('tags').toJS().map(tag => {\r\n      return {'label': tag, 'value': tag, '__isNew__': false}\r\n    });\r\n  }\r\n\r\n  toggleTagging = () => {\r\n    this.setState({isTagging: !this.state.isTagging});\r\n  }\r\n\r\n  toggleEditViewForCollection = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.props.isEditingCollectionsName(this.props.collection.get('refId') );\r\n    this.setState({shouldFocus: this.props.collection.get('viewId')});\r\n  }\r\n\r\n  handleCloseClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.deleteCollections(this.props.collection.get('viewId'));\r\n  };\r\n\r\n  handleEmptyClick = (e) => {\r\n    e.stopPropagation();\r\n    const selectedAlternatives  = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected') && alternative.get('collectionViewId') === this.props.collection.get('viewId'));    \r\n    this.props.removeAlternativesFromCollection(selectedAlternatives);\r\n  }\r\n\r\n  /**\r\n   * minimize click\r\n   * @param {event} e\r\n   */\r\n  handleMinimizeClick = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.props.toggleViewMode(this.props.collection.get('viewId'), 1);\r\n\r\n    this.props.saveLayoutObject(getLayoutForCollection(\r\n      this.props.layouts,\r\n      this.props.collection.get('viewId'))\r\n    );\r\n\r\n    this.props.toggleSink(this.props.collection.get('viewId'));\r\n    this.props.deselectCollection(this.props.collection.get('viewId'));\r\n  }\r\n\r\n  /**\r\n   * @function handleSelect\r\n   * @description when clicked, appends a collection's ID to an array of selected collections\r\n   * @memberof Collection\r\n   */\r\n  handleSelect = () => {\r\n    if (!this.props.collection.get('isSelected')) {\r\n      this.props.selectCollection(this.props.collection.get('viewId'));\r\n    } else {\r\n      this.props.deselectCollection(this.props.collection.get('viewId'));\r\n    }\r\n  }\r\n\r\n  handleHovsClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId'))).map((d) => {\r\n\r\n        const hoveredRelatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => d.get('isHovered') || (alternative.get('isHovered') && \r\n          alternative.get('refId') === d.get('refId') &&\r\n          !this.props.collection.get('altsid').contains(alternative.get('viewId'))));\r\n\r\n          if (hoveredRelatives.size !== 0) {\r\n            this.props.selectAlternative(d.get('viewId'));\r\n\r\n            d3.select(\".alt-view-\" + d.get('viewId')) \r\n              .style('border', '1.5px')\r\n              .style('border-style', 'solid')\r\n              .style('border-color', styles.colorSelected)\r\n              .style('border-radius', '7px')\r\n              .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n          }\r\n      });\r\n  }\r\n\r\n  handleRefsClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    this.props.alternatives.get('alternatives').filter((alt) => \r\n      this.props.collection.get('altsid').contains(alt.get('viewId'))).map((d) => {\r\n\r\n        const selectedRelatives = this.props.alternatives.get('alternatives')\r\n          .filter((alternative) => alternative.get('isSelected') && \r\n            alternative.get('refId') === d.get('refId') &&\r\n            !this.props.collection.get('altsid').contains(alternative.get('viewId')));\r\n\r\n          if (selectedRelatives.size !== 0) {\r\n            this.props.selectAlternative(d.get('viewId'));\r\n\r\n            d3.select(\".alt-view-\" + d.get('viewId')) \r\n              .style('border', '1.5px')\r\n              .style('border-style', 'solid')\r\n              .style('border-color', styles.colorSelected)\r\n              .style('border-radius', '7px')\r\n              .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n          }\r\n      });\r\n  }\r\n\r\n  handleUnselectClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    getAlternativesInCollection(this.props.collection, this.props.alternatives.get('alternatives'))\r\n      .map((alt) => {\r\n        this.props.deselectAlternative(alt.get('viewId'));\r\n\r\n        d3.selectAll(\".alt-ref-\" + alt.get('refId'))\r\n          .style('border', null)\r\n          .style('border-style', null)\r\n          .style('border-color', null)\r\n          .style('border-radius', null)\r\n          .style('-webkit-box-shadow', null);\r\n      });\r\n  }\r\n\r\n\r\n  handleBlur = (e) => {\r\n    if (e.key === 'Enter') {\r\n      let name = \"untitled\";\r\n      let copy = false;\r\n\r\n      if (e.target.value.includes('#') && '#' + this.props.collection.get('collectionName') !== e.target.value) {\r\n        copy = true;\r\n      }\r\n        name = e.target.value.replace(/#/g,\"\").replace(/ /g,\"-\")\r\n   \r\n        if (this.props.collection.get(\"collectionName\") !== name && name.length > 0) {\r\n          const nameExists = this.props.nameExists(name, this.props.collection);\r\n\r\n          if (this.props.isMultipleInputs) {\r\n            if (!nameExists) {\r\n\r\n              let object = {\r\n                name: name, \r\n                collection: this.props.collection\r\n              }\r\n\r\n              this.props.updateMultipleNames(object);\r\n\r\n              this.setState({\r\n                shouldFocus: null,\r\n              });\r\n\r\n            } else {\r\n            \r\n              this.props.isEditingCollectionsName(this.props.collection.get(\"refId\"))\r\n              this.setState({\r\n                shouldFocus: null,\r\n              })\r\n            }\r\n          } else {\r\n            if (!nameExists) {\r\n              try {\r\n                const collection =  this.props.collection.toJS();\r\n                      collection.collectionName = name + \"-\" + collection.collectionNameView\r\n                      this.props.updateCollection(collection);\r\n                    \r\n              } catch (err) {\r\n                console.log(err)\r\n              } finally {\r\n                this.props.editNameForCollection(this.props.collection.get('viewId'), name);\r\n                this.setState({\r\n                  shouldFocus: null,\r\n                });            \r\n              }\r\n            } else {\r\n              this.props.isEditingCollectionsName(this.props.collection.get(\"refId\")) \r\n              this.setState({\r\n                shouldFocus: null,\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          this.props.nameHasTheSameValue(this.props.collection.get('refId'));\r\n          this.setState({\r\n            collectionName: this.props.collection.get(\"collectionName\"),\r\n            shouldFocus: null,\r\n          })\r\n        }\r\n      } else {\r\n        // console.log(\"in blur\");\r\n      }\r\n  }\r\n\r\n  handleTaggingSelect = (newValue, actionMeta) => {\r\n    if (newValue) {\r\n      try {\r\n        const colToUpdate = this.props.collection.toJS();\r\n        colToUpdate.tags = newValue.map(v => v.value);\r\n        this.props.updateCollection(colToUpdate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.props.updateCollectionTags(this.props.collection.get('viewId'), newValue.map(v => v.value));\r\n      }\r\n    } else {\r\n      try {\r\n        const colToUpdate = this.props.collection.toJS();\r\n        colToUpdate.tags = [];\r\n        this.props.updateCollection(colToUpdate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.props.updateCollectionTags(this.props.collection.get('viewId'), []);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleViewSelect = (mode) => {\r\n      switch (mode.label) {\r\n      case 'folder view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      case 'parallel view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      case 'list view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      default:\r\n        console.log('no valid selection');\r\n      }\r\n  }\r\n\r\n  handleDestinationSelect = (newValue) => {\r\n    if (!newValue) {\r\n      this.props.setCollectionDestination(this.props.collection.get('viewId'), []);\r\n    } else {\r\n      this.props.setCollectionDestination(this.props.collection.get('viewId'), newValue);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * to prevent double click from creating a new collection\r\n   * @param {event} e\r\n   */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleFocus = (e) => {\r\n    e.target.select();\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  handleDrag = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.setState({isDragging: !this.state.isDragging});\r\n  }\r\n\r\n  handleDragClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleTextChange = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    let name = e.target.value.replace(/#/g,\"\").replace(/ /g,\"-\")\r\n\r\n    const object  = {\r\n      refId: this.props.collection.get('refId'),\r\n      viewId: this.props.collection.get('viewId')\r\n    }\r\n\r\n    this.props.changeMultipleName(object)\r\n\r\n    this.setState({\r\n      collectionName: name\r\n    });   \r\n  }\r\n\r\n  handleAspectRatio = (dimensions) => {\r\n    \r\n    const object = {\r\n      viewId: this.props.collection.get(\"viewId\"),\r\n      width: 0,\r\n      height: 6, // best height for readability\r\n      isResizable: false,\r\n    } \r\n\r\n    object.width = Math.floor(dimensions.length * 0.4) > 4 ? Math.floor(dimensions.length * 0.4) : 4;\r\n  \r\n    this.props.updateAspectRatio(object)\r\n  }\r\n\r\n  handleUnlockAspectRatio = () => {\r\n    let object = {\r\n      viewId: this.props.collection.get(\"viewId\"),\r\n      isResizable: true,\r\n    } \r\n    this.props.updateUnlockAspectRatio(object);\r\n  }\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    const collectionHeight = getLayoutForCollection(this.props.layouts, this.props.collection.get('viewId')).get('h');\r\n\r\n    // this is to figure out which style to apply to the current collection\r\n    // collection selected has a blue border, other collections with the same (ref) id\r\n    // are highlighted with yellow border\r\n    let situation = 'C';\r\n    \r\n    if (this.props.collection.get('isSelected')) {\r\n      situation = 'A';\r\n    } else if (!this.props.collection.get('isSelected') && this.props.selectedCols.includes(this.props.collection.get('refId'))) {\r\n      situation = 'B';\r\n    }\r\n\r\n    \r\n    const selectStyleName = classnames({\r\n      [styles['collection']]: situation === 'C',\r\n      [styles['collection-selected']]: situation === 'A',\r\n      [styles['collection-related']]: situation === 'B',\r\n    });\r\n\r\n    const dragStyleName = classnames({\r\n      [styles['start-drag']]: !this.state.dragging,\r\n      'drag-handle': true,\r\n      [styles['dragging']]: this.state.dragging,\r\n    });\r\n\r\n\r\n    const customStyles = {\r\n      container: (base, state) => {\r\n        return ({...base, zIndex: state.isFocused ? '998' : '1'}); // Only when current state focused\r\n      },\r\n    };\r\n    \r\n    this.destinationOptions = this.props.loadOptions(this.props.collection.get('viewId'));\r\n\r\n    this.loadTags();\r\n    return (\r\n      <div \r\n        key = {'collection-box-' + this.props.collection.get('viewId')}\r\n        ref={(el) => this.cmpEl = el}\r\n        className={selectStyleName}\r\n        style={this.props.style}\r\n        onDoubleClick={this.handleDoubleClick}>\r\n        <div \r\n          onClick={this.handleSelect} \r\n          className={styles.pointer2} \r\n        >\r\n          <div className={styles['icon-handle']}>\r\n          <span>\r\n            <span>\r\n              <IconContext.Provider value={{size: '1.25em'}}>\r\n                <IoMdMove title='move'\r\n                  className={dragStyleName}\r\n                  onClick={this.handleDragClick}\r\n                  onDragStart={this.handleDrag}\r\n                  onDragEnd={this.handleDrag}\r\n                />\r\n              </IconContext.Provider>\r\n            </span>\r\n            <span style={{marginLeft: '12px'}}>\r\n              <IconContext.Provider value={{size: '1.25em', color: styles.colorSelected, paddingLeft: '2px'}}>\r\n                  <MdCancel title='unselect'\r\n                    onClick={this.handleUnselectClick}\r\n                    className={styles.pointer}\r\n                  />\r\n              </IconContext.Provider>\r\n              </span>\r\n            <span>\r\n              <IconContext.Provider value={{size: '1.25em', color: styles.colorHovered}}>\r\n                  <MdCheckCircle title='select hovered'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleHovsClick}\r\n                  />\r\n              </IconContext.Provider>\r\n              </span>\r\n              <span>\r\n              <IconContext.Provider value={{size: '1.25em', color: styles.colorSelectedRelated}}>\r\n                  <MdCheckCircle title='select refed'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleRefsClick}\r\n                  />\r\n              </IconContext.Provider>\r\n              </span>\r\n            </span>\r\n            {renderIf(\r\n              !this.props.collection.get(\"isEditingName\"),\r\n              (\r\n                <div \r\n                  className={styles['collection-name-div']}\r\n                  onDoubleClick={this.toggleEditViewForCollection}>\r\n                  <div className={styles['collection-title-div']}>\r\n                     <h4\r\n                      className={styles['collection-name']}\r\n                      onDoubleClick={this.toggleEditViewForCollection}>\r\n                      {getCollectionName(this.props.collection)}\r\n                    </h4> \r\n                  </div>\r\n                    \r\n                  <div className={styles['collection-titleView-div']}>\r\n                    <h4\r\n                      className={styles['collection-name-view']}\r\n                    >\r\n                      {this.props.collection.get(\"collectionNameView\")}\r\n                    </h4>\r\n                  </div>\r\n                  \r\n                </div>  \r\n              ),\r\n             <div className={styles['collection-name-div']}>\r\n              <div className={styles['collection-input-div']}>\r\n                  <input\r\n                    id={this.props.collection.get('viewId')}\r\n                    type=\"text\"\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    className={styles['textInputStyle']}\r\n                    onChange={this.handleTextChange}\r\n                    value={this.state.collectionName}\r\n                  />\r\n              </div>\r\n\r\n              <div className={styles['collection-titleView-div']}>\r\n                    <h4 className={styles['collection-name-view']}>\r\n                      {this.props.collection.get(\"collectionNameView\")}\r\n                    </h4>\r\n              </div>\r\n             </div>\r\n            )}\r\n            <span>\r\n              <IconContext.Provider value={{size: '1.35em'}}>\r\n                <MdVerticalAlignBottom title='sink'\r\n                  className={styles.pointer}\r\n                  onClick={this.handleMinimizeClick}\r\n                />\r\n              </IconContext.Provider>\r\n              <span>\r\n              <IconContext.Provider value={{size: '1.35em'}}>\r\n                  <MdDelete title='empty'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleEmptyClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n              <span>\r\n                <IconContext.Provider value={{size: '1.35em'}}>\r\n                  <MdDeleteForever title='delete'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleCloseClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{'display':'flex', 'justifyContent': 'space-between', 'flexDirection': 'row'}}>\r\n        {collectionHeight < 2 ? null : <div style={{'flex': '60%', 'marginRight': '1%'}}>\r\n          <Select\r\n            styles={customStyles}\r\n            defaultValue={options[this.props.collection.get('viewType')-1]}\r\n            options={options}\r\n            onChange={this.handleViewSelect}\r\n          />\r\n        </div>}\r\n        {this.props.collection.get('viewType') !== 2 ? null : <div style={{'flex': '30%', 'marginLeft': '1%'}}>\r\n          <CreatableSelect\r\n            styles={customStyles}\r\n            isMulti\r\n            placeholder={'destination collection(s)'}\r\n            options={this.destinationOptions}\r\n            onChange={this.handleDestinationSelect}\r\n          />\r\n        </div>}\r\n        </div>\r\n        <hr></hr>\r\n        {this.props.collection.get('viewType') === 1 ? <AlternativeContainer\r\n          altsInCollection={this.props.altsInCollection}\r\n          layoutForCollection={this.props.layoutForCollection}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          removeAlternativesFromCollection={this.props.removeAlternativesFromCollection}\r\n          toggleAltView={this.props.toggleAltView}\r\n          restoreAlternative={this.props.restoreAlternative}\r\n          selectedAlts={this.props.selectedAlts}      \r\n         /> : null}\r\n        {this.props.collection.get('viewType') === 2 ? <ParallelContainer\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          deselectAllAlternatives={this.props.deselectAllAlternatives}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          hoverAlternativeSpecial={this.props.hoverAlternativeSpecial}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          sendMessage={this.props.sendMessage}\r\n          altsInCollection={this.props.altsInCollection}\r\n          collection={this.props.collection}\r\n          alternatives={this.props.alternatives}\r\n          cloneAlternatives={this.props.cloneAlternatives}\r\n          createNewCollection={this.props.createNewCollection}\r\n          setCollectionMode={this.props.setCollectionMode}\r\n          infoRef={this.infoRef}\r\n          restoreAlternative={this.props.restoreAlternative}\r\n          selectedAlts={this.props.selectedAlts}\r\n          lockAspectRatio={this.handleAspectRatio.bind(this)}\r\n          unlockAspectRatio={this.handleUnlockAspectRatio}      \r\n        /> : null}\r\n        {this.props.collection.get('viewType') === 3 ? <ListContainer \r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          altsInCollection={this.props.altsInCollection}\r\n          collection={this.props.collection}\r\n          alternatives={this.props.alternatives}\r\n          selectedAlts={this.props.selectedAlts}      \r\n\r\n        /> : null}\r\n        <IconContext.Provider value={{size: '1.15em'}}>\r\n          <FaHashtag \r\n            title='tag'\r\n            className={styles.tagEdit}\r\n            onClick={this.toggleTagging}\r\n          />\r\n        </IconContext.Provider>\r\n        <InfoBar\r\n          altsInCollection={this.props.altsInCollection.toJS()}\r\n          infoRef={this.infoRef}\r\n        />\r\n        {this.state.isTagging ?\r\n          <div style={{'marginLeft': '5%'}}>\r\n            <CreatableSelect\r\n              styles={customStyles}\r\n              isMulti\r\n              onChange={this.handleTaggingSelect}\r\n              defaultValue={this.tagOptions}\r\n              menuPosition={'fixed'}\r\n            /> \r\n          </div> : null }\r\n          <TagBar \r\n            tagOptions={this.tagOptions}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Collection;\r\n","import Collection from './Collection';\r\n\r\nexport default Collection;\r\n","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styles from './settingsPanel.module.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n/**\r\n * @class SettingsPanel\r\n * @extends React.PureComponent\r\n * @description this component contains the global DStar settings, such as collection tiling, alternative thumbnail size and etc.\r\n */\r\nclass SettingsPanel extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          settingsOpen: true,\r\n          selectBox1Open: false,\r\n          selectBox2Open: false,\r\n          selectBox3Open: false,\r\n          altSize: this.props.settings.get('alternativeImageSize'),\r\n          colType: this.props.settings.get('collectionCompactionType'),\r\n          colPrev: this.props.settings.get('preventCollision'),\r\n      }\r\n\r\n      this.selectedProject = {};  \r\n      this.newProjectName = \"\";\r\n      this.newProjectDescription = \"\";  \r\n  }\r\n\r\n  /**\r\n   * @function handleSizeChange\r\n   * @memberof SettingsPanel\r\n   * @description changes the size of alternative thumbnails\r\n   * @param {event} event\r\n   */\r\n  handleSizeChange = (event) => {\r\n    this.setState({altSize: event.target.value});\r\n    this.props.setAlternativeSize(event.target.value);\r\n  };\r\n\r\n    /**\r\n   * @function handleTypeChange\r\n   * @memberof SettingsPanel\r\n   * @description handles the tiling option choice\r\n   * @param {event} event \r\n   */\r\n  handleTypeChange = (event) => {\r\n    this.setState({colType: event.target.value});\r\n    this.props.setCompactionType(event.target.value);\r\n  };\r\n\r\n    /**\r\n   * @function handlePreventionChange\r\n   * @memberof SettingsPanel\r\n   * @description handles the compaction prevention choice\r\n   * @param {event} event \r\n   */\r\n  handlePreventionChange = (event) => {\r\n    this.setState({colPrev: event.target.value});\r\n    this.props.setCollisionPrevention(event.target.value);\r\n  };\r\n\r\n    /**\r\n   * @function handleSettingsClose\r\n   * @memberof SettingsPanel\r\n   * @description hides the settings pane\r\n   */\r\n  handleSettingsClose = () => {\r\n      this.setState({settingsOpen: false});\r\n      this.props.toggleSettings();\r\n  };\r\n\r\n  /**\r\n   * @function handleSizeClose\r\n   * @memberof SettingsPanel\r\n   * @description hides size options\r\n   */\r\n  handleSizeClose = () => {\r\n    this.setState({selectBox1Open: false});\r\n  };\r\n\r\n  /**\r\n   * @function handleSizeOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the size options\r\n   */\r\n  handleSizeOpen = () => {\r\n    this.setState({selectBox1Open: true});\r\n  };\r\n\r\n  /**\r\n   * @function handleTypeClose\r\n   * @memberof SettingsPanel\r\n   * @description hides the tiling options\r\n   */\r\n  handleTypeClose = () => {\r\n    this.setState({selectBox2Open: false});\r\n  };\r\n\r\n  /**\r\n   * @function handleTypeOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the tiling options\r\n   */\r\n  handleTypeOpen = () => {\r\n    this.setState({selectBox2Open: true});\r\n  };\r\n\r\n  /**\r\n   * @function handlePreventionClose\r\n   * @memberof SettingsPanel\r\n   * @description hides the compaction prevention options\r\n   */\r\n  handlePreventionClose = () => {\r\n    this.setState({selectBox3Open: false});\r\n  };\r\n\r\n  /**\r\n   * @function handlePreventionOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the compaction prevention options\r\n   */\r\n  handlePreventionOpen = () => {\r\n    this.setState({selectBox3Open: true});\r\n  };\r\n\r\n  /**\r\n   * @function handleSelect\r\n   * @memberof projectBox\r\n   * @description selecting one of the existing projects\r\n   */\r\n  handleSelect = () => {\r\n    if ((typeof(this.selectProject) !== \"undefined\") && this.selectProject.name) {\r\n      this.props.selectProject(this.selectProject);\r\n      this.setState({settingsOpen: false});\r\n    }        \r\n  };\r\n\r\n  /**\r\n   * @function handleCreate\r\n   * @memberof projectBox\r\n   * @description creating a new project \r\n   */\r\n  handleCreate = () => {\r\n    if (this.newProjectName !== \"\") {\r\n      this.props.createProject(this.newProjectName, this.newProjectDescription);\r\n      this.setState({settingsOpen: false});\r\n    }    \r\n  };\r\n\r\n  onProjectChange = (e) => {    \r\n    var index = this.props.projects.toJS().findIndex((project)=>project.name === e.value);\r\n\r\n    if (index > -1) {\r\n      this.selectProject = this.props.projects.toJS()[index];\r\n    }    \r\n  }\r\n\r\n  onProjectNameChange = (e) =>{\r\n    this.newProjectName = e.target.value;\r\n  }\r\n\r\n  onProjectDescriptionChange = (e) =>{\r\n    this.newProjectDescription = e.target.value;\r\n  }\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      const options = this.props.projects.toJS().map((project)=>project.name);\r\n      const defaultOption = options[0];\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              className={styles['panel']} \r\n              open={this.state.settingsOpen}\r\n              onClose={this.handleSettingsClose}\r\n              aria-labelledby=\"settings-dialog-title\"\r\n              aria-describedby=\"settings-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"settings-dialog-title\">{\"Settings\"}</DialogTitle>\r\n              <hr/>\r\n              <DialogContent className={styles['panel-content']}>\r\n                <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td><p>alternative image size</p></td>\r\n                    <td>\r\n                        <FormControl>\r\n                          <InputLabel id=\"open-select-label\"></InputLabel>\r\n                          <Select\r\n                            labelId=\"open-select-label\"\r\n                            id=\"open-select\"\r\n                            open={this.state.selectBox1Open}\r\n                            onClose={this.handleSizeClose}\r\n                            onOpen={this.handleSizeOpen}\r\n                            value={this.state.altSize}\r\n                            onChange={this.handleSizeChange}\r\n                          >\r\n                            <MenuItem value={150}>Small</MenuItem>\r\n                            <MenuItem value={180}>Medium</MenuItem>\r\n                            <MenuItem value={210}>Large</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><p>collection tiling method</p></td>\r\n                    <td> \r\n                        <FormControl>\r\n                          <InputLabel id=\"open-select-label\"></InputLabel>\r\n                          <Select\r\n                            labelId=\"open-select-label\"\r\n                            id=\"open-select\"\r\n                            open={this.state.selectBox2Open}\r\n                            onClose={this.handleTypeClose}\r\n                            onOpen={this.handleTypeOpen}\r\n                            value={this.state.colType}\r\n                            onChange={this.handleTypeChange}\r\n                          >\r\n                            <MenuItem value={'none'}>None</MenuItem>\r\n                            <MenuItem value={'vertical'}>Vertical</MenuItem>\r\n                            <MenuItem value={'horizontal'}>Horizontal</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td><p>prevent collection collision</p></td>\r\n                    <td> \r\n                        <FormControl>\r\n                          <InputLabel id=\"open-select-label\"></InputLabel>\r\n                          <Select\r\n                            labelId=\"open-select-label\"\r\n                            id=\"open-select\"\r\n                            open={this.state.selectBox3Open}\r\n                            onClose={this.handlePreventionClose}\r\n                            onOpen={this.handlePreventionOpen}\r\n                            value={this.state.colPrev}\r\n                            onChange={this.handlePreventionChange}\r\n                          >\r\n                            <MenuItem value={false}>Yes</MenuItem>\r\n                            <MenuItem value={true}>No</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                    </td>\r\n\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n                <hr />\r\n                <div className={styles[\"containerForProjectAndName\"]}>\r\n                  <p className={styles[\"projectLabel\"]}>User Name: </p>\r\n                  <p\r\n                   className={styles[\"projectTitle\"]}\r\n                  > {this.props.user.get(\"username\")}</p>\r\n                </div>\r\n\r\n                <div className={styles[\"containerForProjectAndName\"]}>\r\n                  <p\r\n                   className={styles[\"projectLabel\"]}\r\n                  >Project: </p>\r\n                  <p\r\n                   className={styles[\"projectTitle\"]}\r\n                  > {this.props.selectedProject.name}</p>\r\n                </div>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleSettingsClose} color=\"primary\">\r\n                    OK\r\n                  </Button>\r\n                </DialogActions>\r\n                \r\n                  \r\n              \r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SettingsPanel;","import React, { PureComponent } from \"react\";\r\nimport styles from './searchPanel.module.scss';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n/**\r\n * @class SearchPanel\r\n * @extends React.PureComponent\r\n * @description this componet search through collections by name.\r\n */\r\nclass SearchPanel extends PureComponent {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {object} props \r\n     */\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            searchOpen: true,\r\n            searchText: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function handleSearchClose\r\n     * @memberof SearchPanel\r\n     * @param {Object} e\r\n     * @description hide the search panel \r\n     */\r\n    handleSearchClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ searchOpen: false})\r\n        this.props.toggleSearch();\r\n    }\r\n\r\n    /**\r\n     * @function handleSearchText\r\n     * @description handle search text change\r\n     * @memberof SearchPanel\r\n     * @param {Object} e\r\n     */\r\n    handleSearchText = (e) => {\r\n        this.setState({\r\n            searchText: e.target.value,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @function handleSubmit\r\n     * @memberof SearchPanel\r\n     * @description hande search from submition\r\n     * @param {object} e\r\n     */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(this.state.searchText){\r\n            this.props.handleSearch(this.state.searchText);\r\n        }else{\r\n            const empty = [];\r\n            this.props.searchedCollectionFailed(empty);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function removeValidation\r\n     * @memberof SearchPanel\r\n     * @deprecated sets vlidation to false\r\n     */\r\n    removeValidation = () => {\r\n        if (this.props.search.get('showValidation')){\r\n            this.props.searchedCollectionSuccess();\r\n            this.props.emptyMissMatchArray();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * @returns {ReactPureComponent}\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    className={styles['panel']}\r\n                    open={this.state.searchOpen}\r\n                    onClose={this.handleSearchClose}\r\n                    aria-labelledby=\"search-dialog-title\"\r\n                >\r\n                    <DialogTitle\r\n                        id=\"search-dialog-title\"\r\n                    >\r\n                        {\"Collection Search\"}\r\n                    </DialogTitle>\r\n                    <hr/>\r\n                    <DialogContent className={styles['panel-content']}>\r\n                        <form onSubmit={this.handleSubmit} \r\n                            className={styles['panel-form']}\r\n                        >\r\n                            <TextField\r\n                                className={styles['panel-textField']}\r\n                                onClick={this.removeValidation}\r\n                                id=\"outlined-full-width\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter Collection name\"\r\n                                variant=\"outlined\"\r\n                                onChange={this.handleSearchText}\r\n                                value={this.state.searchText}\r\n                                error={this.props.search.get('showValidation')}\r\n                                helperText={\r\n                                    this.props.search.get('showValidation') ? \"Can't find collection \" + this.props.search.get(\"missMatchCollectionNames\").toString() : null}\r\n                            >\r\n                            </TextField>\r\n                            <div\r\n                             className={styles[\"panel-buttons-container\"]}\r\n                            >\r\n                                <Button \r\n                                    type=\"submit\" \r\n                                    color=\"primary\"\r\n                                    className={styles['panel-button']}>\r\n                                    Search\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={this.handleSearchClose} \r\n                                    color=\"primary\"\r\n                                    className={styles['action-button']}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React, {PureComponent} from 'react';\r\nimport styles from './sinkList.module.scss';\r\nimport {getLayoutForCollectionFromClipboard} from '../../util/layouts';\r\nimport {getCoordinates} from '../../util/collections';\r\nimport Immutable from 'immutable';\r\n\r\n// TODO: make it functional component\r\n\r\n/**\r\n * @class SinkList\r\n * @extends React.PureComponent\r\n * @description this is the presentational component of the SinkList component\r\n */\r\nclass SinkList extends PureComponent {\r\n\r\n/**\r\n * @function handleClick\r\n * @memberof SinkList\r\n * @description handles where to open the sinkList menu upon click on the icon in header/context menu\r\n * @param {event} event\r\n * @param {number} collectionID\r\n */\r\nhandleClick = (event, collectionID) => {\r\n  const x = event.clientX;\r\n  const y = event.clientY;\r\n  const newPoint = getCoordinates(x, y - 64);\r\n\r\n  const collectionLayout = getLayoutForCollectionFromClipboard(this.props.layouts, collectionID);\r\n  \r\n  const layoutObject = Immutable.fromJS({\r\n    x: newPoint.x,\r\n    y: newPoint.y,\r\n    w: collectionLayout ? collectionLayout.get('w') : 3,\r\n    h: collectionLayout ? collectionLayout.get('h') : 5,\r\n    i: collectionID,\r\n  });\r\n\r\n  this.props.addLayoutObject(layoutObject);\r\n  this.props.restoreCollection(collectionID);\r\n}\r\n\r\n/**\r\n * @returns {ReactPureComponent}\r\n */\r\nrender() {\r\n\r\n  const collectionsSinked = this.props.collections.get('collections').filter((collection) => (\r\n    collection.get('isSinked') === true\r\n  ));\r\n\r\n  const collections = collectionsSinked.map((collection) => {\r\n    return (\r\n      <tr className={styles['items-list']} key={'sink-item-' + collection.get('viewId')} \r\n          onClick={(e) => this.handleClick(e, collection.get('viewId'))}>\r\n        <td>\r\n          {collection.get('collectionName')}\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n    return (\r\n      <div className={styles['sink-list-menu']}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th> Collections in Sink <hr className={styles['hr-sinkList']} /></th>\r\n            </tr>\r\n            {collections}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SinkList;\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace collectionActions\r\n */\r\n\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  deleteCollection,\r\n  createCollection,\r\n  addLayoutObject,\r\n  deselectCollection,\r\n  deselectAlternative,\r\n  toggleSink,\r\n  addAlternative,\r\n  editNameForCollection,\r\n  addAlternativeToCollection,\r\n} from './updateActions';\r\nimport {\r\n  cloneAlternativesToCollection,\r\n} from './alternativeActions'\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {\r\n  findCollectionsFromID,\r\n  removeViewName\r\n} from '../util/collections';\r\nimport {\r\n  findAlternativesFromID,\r\n} from '../util/alternatives';\r\nimport Immutable from 'immutable';\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function deleteCollections\r\n * @description deletes a collection with the given viewID\r\n * @memberof collectionActions\r\n * @param {string} collectionId - the viewID of collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const deleteCollections = (collectionId) => (dispatch, getState) => {\r\n  return fetch(urls.get('deleteCollection'), {\r\n    method: 'delete',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify([collectionId]),\r\n  }).then(() => {\r\n    const collections = getState().collections.get('collections');\r\n    const alternatives = getState().alternatives.get('alternatives');\r\n    const collection = findCollectionsFromID(collections, collectionId);\r\n\r\n    collection.get('altsid').map((alt) => {\r\n      const alternative = findAlternativesFromID(alternatives, alt);\r\n      dispatch(deselectAlternative(alternative.get('viewId')));\r\n    });\r\n\r\n    batch(() => {\r\n      dispatch(deselectCollection(collectionId));\r\n      dispatch(deleteCollection(collectionId));\r\n      dispatch(successMessage(toast.success('Collection deleted'), 'collection deleted ' + time));\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection is not deleted'), 'collection not deleted ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function updateCollection\r\n * @description updates a (whole) collection\r\n * @memberof collectionActions\r\n * @param {object} collection - the collection object\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const updateCollection = (collection) => (dispatch) => {\r\n  \r\n  return fetch(urls.get('collections'), {\r\n    method: 'put',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify([collection]),\r\n  }).then((data) => {\r\n    if (data.status === 200) {\r\n      dispatch(successMessage(toast.success('Collection updated'), 'collection updated ' + time));\r\n    } else {\r\n      dispatch(warningMessage(toast.warning('Something went wrong'), 'something went wrong ' + time));\r\n    }\r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Collection is not updated'), 'collection not updated ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function createNewCollection\r\n * @description dispatches an action to create a new collection\r\n * @memberof collectionActions\r\n * @param {number} x - x coordinate\r\n * @param {number} y - y coordinate\r\n * @param {number} w - collection width\r\n * @param {number} h - collection height\r\n * @param {array} altsid - array of alternative viewIDs that belong to the collection\r\n * @param {string} viewId - viewID of the collection\r\n * @param {string} refId - refID of the collection\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @param {array} dimOrder - order of dimensions of the alternatives in the collection\r\n * @param {array} inputs - input dimensions\r\n * @param {array} outputs - output dimensions\r\n * @param {array} destinations - destinations for the query operations on this collection\r\n * @param {object} currentMode - current mode (if any) in the parallel coordinates view\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */ \r\nexport const createNewCollection = (\r\n  x = 0, y = 0, w = 3, h = 5, altsid = [], collectionName = 'col',\r\n  viewId = null, refId = null, isSelected = false, isSinked = false,\r\n  tags = [], viewType = 1, dimOrder, inputs = [], outputs = [], destinations = [], currentMode = {}, isEditingName = false,  collectionNameView = \"View(1)\") => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('collections'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({}),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n\r\n      viewId = data[0].viewId;\r\n      refId = data[0].refId;\r\n      viewType = data[0].viewType;\r\n      tags = data[0].tags;\r\n      dimOrder = getState().scales.get('keySets');\r\n      collectionNameView = data[0].collectionNameView;\r\n    \r\n      collectionName     =  collectionName && collectionName !== 'col' ? collectionName + \"-\" + collectionNameView : data[0].collectionName + \"-\" + collectionNameView;\r\n\r\n      const layoutObject = Immutable.fromJS(\r\n        {x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n      );\r\n\r\n      batch(() => {\r\n        dispatch(addLayoutObject(layoutObject));\r\n        dispatch(createCollection(data[0].altsid, collectionName, \r\n          refId, tags, viewId, isSelected, isSinked,\r\n          viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView));\r\n      });\r\n\r\n      return viewId;\r\n\r\n    }).then(viewId => {\r\n\r\n      if (altsid !== null && altsid !== undefined && altsid.length > 0) {\r\n        dispatch(cloneAlternativesToCollection(altsid, [viewId]));\r\n      }\r\n\r\n      if (collectionName !== null && collectionName !== undefined && collectionName.length > 0) {\r\n        batch(() => {\r\n          let nameWithoutView = collectionName\r\n           nameWithoutView    = removeViewName(nameWithoutView)\r\n          dispatch(updateCollection(findCollectionsFromID(getState().collections.get('collections'), viewId).toJS()));\r\n          dispatch(editNameForCollection(viewId,  nameWithoutView))\r\n        });\r\n      }\r\n\r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Collection is not created'), 'collection is not created' + time));\r\n    });\r\n};\r\n\r\n\r\n\r\n/**\r\n * @function copyWithRefCollection\r\n * @description copies an collection as a ref i.e. the new collection as a mirror image of the copied collection\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const copyWithRefCollection = (viewIds = null, isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {},  isEditingName = false) => (dispatch, getState) => {\r\n  const toastyVar = toast.info(\"Copying Collection With Ref\", {\r\n    toastId: \"CopyWithRef\",\r\n    autoClose: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    rtl: true,\r\n    position: 'bottom-center',\r\n    progress: 0.8,\r\n  });\r\n  return fetch(urls.get('collectionCopyWithRef'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(viewIds),\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n    .then((data) => {\r\n\r\n      toast.update(toastyVar, {progress: 0.5});\r\n\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n      for (let i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n    \r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n      for (let i = 0; i < newCollections.length; i++) {    \r\n        const newCollection = newCollections[i];\r\n        let collectionName = newCollection.collectionName;\r\n\r\n        let viewId = newCollection.viewId;\r\n        let refId = newCollection.refId; \r\n\r\n        let collectionNameView = newCollection.collectionNameView;\r\n        viewType = newCollection.viewType;\r\n        tags = newCollection.tags;\r\n        let altsid = newCollection.altsid;\r\n        let inputs = newCollection.inputs;\r\n        let outputs = newCollection.outputs;\r\n        let dimOrder = findCollectionsFromID(getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder');\r\n\r\n        let layout = data.collections[i].layout;\r\n        \r\n        const layoutObject = Immutable.fromJS(\r\n          {x: layout.x + layout.w, y: layout.y, w:layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n        );\r\n\r\n        batch(() => {\r\n          toast.update(toastyVar, {progress: 0.2});\r\n\r\n          dispatch(addLayoutObject(layoutObject)); \r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView));\r\n          dispatch(addLayoutObject(layoutObject)); \r\n\r\n          if (toast.isActive(toastyVar)) {\r\n            toast.update(toastyVar, {\r\n              progress: 0,\r\n              closeOnClick: true,\r\n              autoClose: 1,\r\n            });\r\n          }\r\n          dispatch(successMessage(toast.success('Collection copied'), 'collection copied' + time));\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, {progress: 0, closeOnClick: true, autoClose: 1});\r\n      dispatch(errorMessage(toast.error('collection is not copied'), 'collection is not copied' + time));\r\n    });\r\n};\r\n\r\n/**\r\n * @function cloneAltInNewCollection\r\n * @description copies an collection as a ref i.e. the new collection as a mirror image of the copied collection\r\n * @memberof collectionActions\r\n * @param {number} x - x coordinate\r\n * @param {number} y - y coordinate\r\n * @param {number} w - collection width\r\n * @param {number} h - collection height\r\n * @param {array} altsid - array of alternative viewIDs that belong to the collection\r\n * @param {string} viewId - viewID of the collection\r\n * @param {string} refId - refID of the collection\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @param {array} dimOrder - order of dimensions of the alternatives in the collection\r\n * @param {array} inputs - input dimensions\r\n * @param {array} outputs - output dimensions\r\n * @param {array} destinations - destinations for the query operations on this collection\r\n * @param {object} currentMode - current mode (if any) in the parallel coordinates view\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */ \r\nexport const cloneAltInNewCollection = (\r\n  altsToBeCloned = [], x = 0, y = 0, w = 3, h = 5, altsid = [], collectionName = 'col',\r\n  viewId = null, refId = null, isSelected = false, isSinked = false,\r\n  tags = [], viewType = 1, dimOrder, inputs = [], outputs = [], destinations = [], currentMode = {}, isEditingName = false,  collectionNameView = \"View(1)\") => (dispatch, getState) => {\r\n\r\n  if (altsToBeCloned.length > 0) {\r\n    const toastyVar = toast.info(\"Clone Alternative In a New Collection\", {\r\n    toastId: \"cloneAltInNewCollection\",\r\n    autoClose: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    rtl: true,\r\n    position: 'bottom-center',\r\n    progress: 0.8,\r\n  });\r\n\r\n  return fetch(urls.get('cloneAltInNewCollection'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        altsid:altsToBeCloned\r\n      }),\r\n    }).then(response => response.json())\r\n    .then((data) => {\r\n      var collections = data.collections;\r\n      viewId = collections[0].viewId;\r\n      refId = collections[0].refId;\r\n      viewType = collections[0].viewType;\r\n      tags = collections[0].tags;\r\n      dimOrder = getState().scales.get('keySets');\r\n      collectionNameView = collections[0].collectionNameView;\r\n    \r\n      collectionName =  collectionName && collectionName !== 'col' ? collectionName + \"-\" + collectionNameView : collections[0].collectionName + \"-\" + collectionNameView;\r\n\r\n      const layoutObject = Immutable.fromJS(\r\n        {x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n      );\r\n\r\n      batch(() => {\r\n        dispatch(addLayoutObject(layoutObject));\r\n        dispatch(createCollection(collections[0].altsid, collectionName, \r\n          refId, tags, viewId, isSelected, isSinked,\r\n          viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView));\r\n      });\r\n\r\n      return data;\r\n    }).then((data) => {\r\n      toast.update(toastyVar, {progress: 0.5});\r\n      let alternatives = data.alternatives;\r\n\r\n      alternatives.forEach((datum) => {\r\n\r\n        const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n        const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n        const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n        batch(()=>{\r\n          datum.alts.map((alternative) => {\r\n            dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n          });\r\n        })\r\n        \r\n        datum.alts.map((alt, index) => {\r\n          batch(() => {\r\n            // TODO: fix collection inputs/outputs/dimOrder\r\n            dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n          });\r\n        });\r\n      });\r\n\r\n      return data;   \r\n    }).then((data)=>{\r\n      if (collectionName !== null && collectionName !== undefined && collectionName.length > 0) {\r\n        batch(() => {\r\n          let nameWithoutView = collectionName\r\n           nameWithoutView    = removeViewName(nameWithoutView)\r\n          dispatch(updateCollection(findCollectionsFromID(getState().collections.get('collections'), viewId).toJS()));\r\n          dispatch(editNameForCollection(viewId,  nameWithoutView))\r\n        });\r\n      }\r\n\r\n      return data.refs;\r\n    }).then((data) => {\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n      for (let i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n    \r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n      batch(() => {\r\n        for (let i = 0; i < newCollections.length; i++) {    \r\n          const newCollection = newCollections[i];\r\n          let collectionName = newCollection.collectionName;\r\n\r\n          let viewId = newCollection.viewId;\r\n          let refId = newCollection.refId; \r\n\r\n          let collectionNameView = newCollection.collectionNameView;\r\n          viewType = newCollection.viewType;\r\n          tags = newCollection.tags;\r\n          let altsid = newCollection.altsid;\r\n          let inputs = newCollection.inputs;\r\n          let outputs = newCollection.outputs;\r\n\r\n          let layout = data.collections[i].layout;\r\n          \r\n          const layoutObject = Immutable.fromJS(\r\n            {x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n          );\r\n\r\n          dispatch(addLayoutObject(layoutObject)); \r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView));\r\n          dispatch(addLayoutObject(layoutObject)); \r\n        } \r\n\r\n        toast.update(toastyVar, {\r\n          progress: 0,\r\n          closeOnClick: true,\r\n          autoClose: 1,\r\n        })\r\n        dispatch(successMessage(toast.success('Alternative(s) cloned in the new collection'), 'alternative(s) cloned in the new collection ' + time));\r\n      });     \r\n    }).catch((err) => {\r\n      console.log(err)\r\n      toast.update(toastyVar, {\r\n        progress: 0,\r\n        closeOnClick: true,\r\n        autoClose: 1,\r\n      })\r\n      dispatch(errorMessage(toast.success('Alternative(s) not cloned in the new collection'), 'alternative(s) not cloned in the new collection ' + time));\r\n    })\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('Please select an alternative'), 'please select an alternative' + time));\r\n  }\r\n};\r\n\r\n/**\r\n * @function cloneCollection\r\n * @description creates a new collection as a clone i.e. with a new refId\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneCollection = (viewIds=null, isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {}, isEditingName = false)  => (dispatch, getState) => {\r\n\r\n  const toastyVar =  toast.info(\"Cloning Collection\", {\r\n    toastId: \"cloningCollection\",\r\n    autoClose: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    progress: 0.8,\r\n    position: 'bottom-center',\r\n    rtl: true,\r\n  });\r\n\r\n  return fetch(urls.get('collectionClone'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(viewIds),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0.5\r\n      })\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n      \r\n      for (var i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n\r\n      toast.update(toastyVar, {progress: 0.2});\r\n    \r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n\r\n      for (let i = 0; i < newCollections.length; i++) {      \r\n        const newCollection    = newCollections[i];\r\n        let collectionName     = newCollection.collectionName;\r\n        let collectionNameView = newCollection.collectionNameView\r\n        let viewId = newCollection.viewId;\r\n        let refId = newCollection.refId; \r\n        viewType = newCollection.viewType;\r\n        tags = newCollection.tags;\r\n        let altsid = newCollection.altsid;\r\n       \r\n        let inputs = newCollection.inputs;\r\n        let outputs = newCollection.outputs;\r\n        let dimOrder = findCollectionsFromID(\r\n          getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder')\r\n\r\n          let layout = data.collections[i].layout;\r\n        const layoutObject = Immutable.fromJS(\r\n          {x: layout.x + layout.w, y: layout.y, w:layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n        );\r\n        \r\n        batch(() => {\r\n          dispatch(addLayoutObject(layoutObject));\r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView));\r\n          toast.update(toastyVar, {\r\n            progress: 0,\r\n            closeOnClick: true,\r\n            autoClose: 1,\r\n          })\r\n          dispatch(successMessage(toast.success('Collection cloned'), 'collection cloned' + time));\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0,\r\n        closeOnClick: true,\r\n        autoClose: 1,\r\n      })\r\n      dispatch(errorMessage(toast.error('Collection is not cloned'), 'collection is not cloned' + time));\r\n    });\r\n};\r\n\r\n/**\r\n * @function deepCloneCollection\r\n * @description creates a new collection as a clone and also clones all of its alternatives\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const deepCloneCollection = (viewIds=null, \r\n  isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {}, isEditingName = false) => (dispatch, getState) => {\r\n\r\n    const toastyVar =  toast.info(\"Deep Cloning Collection\", {\r\n      toastId: \"DeepCloningCollection\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      progress: 0.8,\r\n      position: 'bottom-center',\r\n      rtl: true,\r\n    });\r\n\r\n  return fetch(urls.get('collectionDeepClone'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(viewIds),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0.5\r\n      })\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n      \r\n      for (let i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n    \r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n\r\n      for (let i = 0; i < newCollections.length; i++) {      \r\n        const newCollection = newCollections[i];\r\n        let collectionName     = newCollection.collectionName;\r\n        let collectionNameView =  newCollection.collectionNameView;\r\n        let viewId = newCollection.viewId;\r\n        let refId = newCollection.refId; \r\n        viewType = newCollection.viewType;\r\n        tags = newCollection.tags;\r\n        let altsid = newCollection.altsid;\r\n        let inputs = newCollection.inputs;\r\n        let outputs = newCollection.outputs;\r\n        let dimOrder = findCollectionsFromID(getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder');\r\n        let layout = data.collections[i].layout;\r\n\r\n        const layoutObject = Immutable.fromJS(\r\n          {x: layout.x + layout.w, y: layout.y, w:layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false}\r\n        );\r\n\r\n        batch(() => {\r\n          dispatch(addLayoutObject(layoutObject));\r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView));\r\n          toast.update(toastyVar, {\r\n            progress: 0,\r\n            closeOnClick: true,\r\n            autoClose: 1,\r\n          })\r\n          dispatch(successMessage(toast.success('Collection cloned'), 'collection cloned' + time));\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0,\r\n        closeOnClick: true,\r\n        autoClose: 1,\r\n      })\r\n      dispatch(errorMessage(toast.error('Collection is not cloned'), 'collection is not cloned' + time));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @function sinkCollection\r\n * @description sinks a collection\r\n * @memberof collectionActions\r\n * @param {string} collectionId - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const sinkCollection = (collectionId) => (dispatch) => {\r\n  return fetch(urls.get('sinkCollection'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({collectionId}),\r\n  }).then(() => {\r\n    batch(() => {\r\n      dispatch(toggleSink(collectionId));\r\n      dispatch(successMessage(toast.success('Collection sinked'), 'collection sinked ' + time));\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection not sinked'), 'collection not sinked ' + time));\r\n  })\r\n};\r\n\r\n/**\r\n * @function restoreCollection\r\n * @description restores a collection from the sink\r\n * @memberof collectionActions\r\n * @param {string} collectionId - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const restoreCollection = (collectionId) => (dispatch) => {\r\n  return fetch(urls.get('sinkCollection'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({collectionId}),\r\n  }).then(() => {\r\n    batch(() => {\r\n      dispatch(toggleSink(collectionId));\r\n      dispatch(successMessage(toast.success('Collection restored'), 'collection restored ' + time));\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection not restored'), 'collection not restored ' + time));\r\n  })\r\n};\r\n  \r\n/**\r\n * @function layoutUpdate\r\n * @description updates the layout of the collection and the canvas\r\n * @memberof collectionActions\r\n * @param {object} newLayout - an object of ReactGridLayout layout\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const layoutUpdate = (newLayout) => {\r\n  return fetch(urls.get('layout_fetch'), {\r\n    method: 'PUT',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      layout: newLayout,\r\n    })\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React, {PureComponent} from 'react';\r\nimport styles from './header.module.scss';\r\nimport SinkList from '../sinkList/SinkList';\r\nimport {\r\n  layoutUpdate,\r\n} from '../../actions/collectionActions';\r\n\r\nimport {\r\n  MdVerticalAlignBottom,\r\n  MdSettings,\r\n  MdSearch,\r\n  MdHelpOutline,\r\n  MdMailOutline,\r\n  MdRoundedCorner\r\n} from 'react-icons/md';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n// TODO: make it functional component\r\n\r\n/**\r\n * @class Header     \r\n * @extends React.PureComponent\r\n * @description this is the presentational component of header (context) menu\r\n * @component \r\n */\r\nclass Header extends PureComponent { \r\n\r\n  /**\r\n   * @function handleSinkClick\r\n   * @description when clicked, this function toggles the collection sink\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleSinkClick = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (this.props.header.get('listShow')) {\r\n      this.props.hideSinkList();\r\n    } else {\r\n      this.props.showSinkList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function handleHistoryClick\r\n   * @description when clicked, this function toggle's the history page\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleHistoryClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleHistory();\r\n  }\r\n\r\n  /**\r\n   * @function handleUnselectAllClick\r\n   * @description when clicked, this function unselects all items (alternatives, collections etc.)\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleUnselectAllClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.deselectAllCollections();\r\n    this.props.deselectAllAlternatives();\r\n    this.props.hideHeader();\r\n\r\n    d3.selectAll(\".alt\")\r\n      .style('border', null)\r\n      .style('border-style', null)\r\n      .style('border-color', null)\r\n      .style('border-radius', null)\r\n      .style('-webkit-box-shadow', null);\r\n\r\n    d3.selectAll(\".pc\")\r\n      .style('stroke', styles.colorUnselected)\r\n      .style('opacity', 0.3);\r\n\r\n    d3.selectAll(\".tableList\")\r\n      .style('background-color', '#ffffff');\r\n  }\r\n\r\n  /**\r\n   * @function handleSettingsClick\r\n   * @description when clicked, this function toggles the settings pane\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleSettingsClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleSettings();\r\n  }\r\n\r\n  /**\r\n   * @function handleSearchClick\r\n   * @description when clicked, this function toggoles the search pane\r\n   * @memberof Headr\r\n   * @param {event} e\r\n   */\r\n  handleSearchClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleSearch();\r\n  }\r\n\r\n  handleHelpClick = (e) => {\r\n    e.stopPropagation();\r\n    const newWindow = window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\" , '_blank', \"docs\")\r\n  }\r\n\r\n  handleGatherAll = (e) => {\r\n    try {\r\n      this.props.gatherAllCollections();\r\n    } catch (err) {\r\n      console.log(err)\r\n    } finally {\r\n      layoutUpdate(this.props.layouts.get('gridLayout').toJS());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The component should render the view for the header menu\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    const positionOfContextMenu = {\r\n      'position': 'absolute',\r\n      'top': this.props.header.get('headerY'),\r\n      'left': this.props.header.get('headerX'),\r\n      'zIndex': 3,\r\n    };\r\n\r\n    const backgroundColorStyle = {backgroundColor: 'white'};\r\n\r\n    return (\r\n      <div style={positionOfContextMenu}>\r\n        <input className={styles['right-click-menu']} id=\"right-click-menu\" />\r\n        <label htmlFor=\"right-click-menu\" />\r\n        <img style={backgroundColorStyle} src={require('../../resources/DStar.png')} alt=\"DStar-logo\" onClick={this.handleGatherAll}/>\r\n        <ul>\r\n          <li title=\"Unselect All\" className={styles['right-click-icon']} onClick = {this.handleUnselectAllClick}> <a style={backgroundColorStyle} ><MdRoundedCorner/></a> </li>\r\n          <li title=\"Show History\" className={styles['right-click-icon']} onClick = {this.handleHistoryClick}> <a style={backgroundColorStyle} ><MdMailOutline/></a> </li>\r\n          <li title=\"Show Sink\" className={styles['right-click-icon']} onClick = {this.handleSinkClick}> <a style={backgroundColorStyle} ><MdVerticalAlignBottom/></a> </li>\r\n          <li title=\"Settings\" className={styles['right-click-icon']} onClick = {this.handleSettingsClick}> <a style={backgroundColorStyle} ><MdSettings/></a></li>\r\n          <li title=\"Search\" className={styles['right-click-icon']} onClick={this.handleSearchClick} >  <a style={backgroundColorStyle} ><MdSearch/></a> </li>\r\n          <li title=\"Help\" className={styles['right-click-icon']} onClick = {this.handleHelpClick}> <a style={backgroundColorStyle} ><MdHelpOutline/></a></li>\r\n          <div>{this.props.header.get('listShow') ? <SinkList {...this.props} /> : null}</div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {renderIf} from '../util/util';\r\nimport Header from '../components/header';\r\nimport {\r\n  showSinkList,\r\n  hideSinkList,\r\n  addLayoutObject,\r\n  gatherAllCollections,\r\n  toggleSettings,\r\n  hideHeader,\r\n  dehoverAllAlternative,\r\n  toggleSearch,\r\n} from '../actions/updateActions';\r\nimport {\r\n  restoreCollection,\r\n} from '../actions/collectionActions';\r\nimport {\r\n  toggleHistory\r\n} from '../actions/notificationActions';\r\n\r\n/**\r\n * This component connects the Header component to the state.\r\n * It has all the interactions required by the header component\r\n * The header is displayed when you right click on the design gallery\r\n */\r\nclass HeaderContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component of the header.\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return renderIf(\r\n      this.props.header.get('headerShow'),\r\n      (<Header {...this.props} />),\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * state for the header container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  header: state.header,\r\n  layouts: state.layouts,\r\n  collections: state.collections,\r\n});\r\n\r\n/**\r\n * interactions for header container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  showSinkList: () => {\r\n    dispatch(showSinkList());\r\n  },\r\n\r\n  hideSinkList: () => {\r\n    dispatch(hideSinkList());\r\n  },\r\n\r\n  addLayoutObject: (layout) => {\r\n    dispatch(addLayoutObject(layout));\r\n  },\r\n\r\n  toggleHistory: () => {\r\n    dispatch(toggleHistory());\r\n  },\r\n\r\n  gatherAllCollections: () => {\r\n    dispatch(gatherAllCollections());\r\n  },\r\n\r\n  toggleSettings: () => {\r\n    dispatch(toggleSettings());\r\n  },\r\n\r\n  dehoverAllAlternative: () => {\r\n    dispatch(dehoverAllAlternative());\r\n  },\r\n  \r\n  hideHeader: () => {\r\n    dispatch(hideHeader());\r\n  },\r\n\r\n  toggleSearch: () => {\r\n    dispatch(toggleSearch());\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to restore collection with ID\r\n   * @param {string} collectionId: the ID of the collection\r\n   */\r\n  restoreCollection: (collectionId) => {\r\n    dispatch(restoreCollection(collectionId));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import NotBar from './NotBar';\r\n\r\nexport default NotBar;\r\n","import React, {PureComponent} from 'react';\r\nimport {MdClose} from 'react-icons/md';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport styles from './notBar.module.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/**\r\n * @class NotBar\r\n * @extends React.PureComponent\r\n * @description this is the presentational component for NotBar, which handles the toast notifications\r\n */\r\nclass NotBar extends PureComponent {\r\n\r\n  /**\r\n   * @function hideHistoryPane\r\n   * @memberof NotBar\r\n   * @description hides the history pane upon click\r\n   * @param {event} e \r\n   */\r\n  hideHistoryPane = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleHistory();\r\n  }\r\n\r\n  /**\r\n  * @returns {ReactPureComponent}\r\n  */\r\n  render() {\r\n  const errors = this.props.notifications.get('errors');\r\n  const warnings = this.props.notifications.get('warnings');\r\n  const successes = this.props.notifications.get('successes');\r\n\r\n  const errorMessages = errors.map((error) => {\r\n  return (\r\n    <tr key={error.get('id')}>\r\n      <td>\r\n        {error.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n const warningMessages = warnings.map((warning) => {\r\n  return (\r\n    <tr key={warning.get('id')}>\r\n      <td>\r\n        {warning.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n const successMessages = successes.map((success) => {\r\n  return (\r\n    <tr key={success.get('id')}>\r\n      <td>\r\n        {success.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          className={styles['toast-container']}\r\n          toastClassName={styles['each-toast']}\r\n          position={'bottom-right'}\r\n          draggable={false}\r\n          closeButton={false}\r\n          autoClose={3000}\r\n          rtl={true}\r\n        />\r\n        <div> {this.props.notifications.get('showHistory') ? \r\n          <div className={styles['history-pane']} onClick={this.hideHistoryPane}>\r\n            <span>\r\n              <MdClose\r\n                  className={styles['closeIcon']}\r\n                  onClick={this.handleCloseClick}\r\n                />\r\n            </span>\r\n            <div className={styles['success-pane']}> \r\n              <span className={styles['title-bar']}>{successes.size + ' messages'}</span><hr className={styles['hr-history-pane']}/> \r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                  {successMessages}\r\n                </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n            <div className={styles['warning-pane']}> \r\n              <span className={styles['title-bar']}>{warnings.size + ' messages'}</span><hr className={styles['hr-history-pane']}/> \r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                  {warningMessages}\r\n                </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n            <div className={styles['error-pane']}> \r\n              <span className={styles['title-bar']}>{errors.size + ' messages'}</span><hr className={styles['hr-history-pane']}/>\r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                    {errorMessages}\r\n                  </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n          </div> \r\n        : null} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotBar;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {renderIf} from '../util/util';\r\nimport NotBar from '../components/notBar';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n  toggleHistory,\r\n} from '../actions/notificationActions';\r\n\r\n\r\nclass NotificationContainer extends Component {\r\n    render() {\r\n        return renderIf(\r\n            true,\r\n            (<NotBar {...this.props} />),\r\n          );\r\n    }\r\n}\r\n\r\n/**\r\n * state for the header container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications\r\n});\r\n\r\n/**\r\n * interactions for header container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  successMessage: (id, message) => {\r\n    dispatch(successMessage(id, message));\r\n  },\r\n\r\n  warningMessage: (id, message) => {\r\n    dispatch(warningMessage(id, message));\r\n  },\r\n\r\n  errorMessage: (id, message) => {\r\n    dispatch(errorMessage(id, message));\r\n  },\r\n\r\n  toggleHistory: () => {\r\n    dispatch(toggleHistory());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(NotificationContainer);\r\n","import React, { PureComponent } from 'react';\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport Websocket from 'react-websocket';\r\nimport appConstants from '../../constants/appConstants';\r\nimport Collection from './collection';\r\nimport {urls} from '../../constants/urls';\r\nimport {getLayoutForCollection} from '../../util/layouts';\r\nimport SettingsPanel from '../settingsPanel/SettingsPanel';\r\nimport SearchPanel from '../searchPanel/SearchPanel';\r\nimport HeaderContainer from '../../containers/HeaderContainer';\r\nimport NotificationContainer from '../../containers/NotificationContainer';\r\nimport layoutConstants from '../../constants/layout';\r\nimport MessageBox from './../messageBox/MessageBox';\r\nimport styles from './collections.module.scss';\r\nimport * as d3 from 'd3';\r\nimport {\r\n  findCollectionsFromID,\r\n  findCollectionRelativesFromID,\r\n  getCoordinates,\r\n  calculateWidth,\r\n  getAlternativesInCollection,\r\n  getCollectionsByTag,\r\n  nameExists,\r\n  handleNameCounter\r\n} from '../../util/collections';\r\nimport {\r\n  findAlternativeRelativesFromID,\r\n} from '../../util/alternatives';\r\nimport throttle from 'lodash/throttle';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @class Collections\r\n * @extends React.PureComponent\r\n * @description this is the presentational component of the all the collections. it renders all the individual collection components.\r\n */\r\nclass Collections extends PureComponent {\r\n  \r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shouldWarn: false,\r\n      confirmAction: null,\r\n      warningMessage: '',\r\n      matchNumOfColums: 0,\r\n      scrollX: 0,\r\n      editingNames: false,\r\n      editName: '',\r\n      isMultipleInputs: false,\r\n    }\r\n\r\n    this.selectedAlts = [];\r\n    this.selectedCols = [];\r\n  }\r\n\r\n  /**\r\n   * @description traverse each collection in collections, wrap it in a *<div>*, then assign it a **key/id** and its associated alternatives\r\n   * @param {object} collections - collection components\r\n   * @param {object} layouts - layout object (ReactGridLayout)\r\n   * @param {object} props - additional props to send to collection\r\n   * @returns {ReactPureComponent} <Collection>\r\n   */\r\n  renderCollection = (collections, layouts, props={}) => (\r\n    collections.map((collection) => {\r\n      return (\r\n        <div \r\n          key={collection.get('viewId')} \r\n          data-grid={getLayoutForCollection(layouts, collection.get('viewId')).toJS()}>\r\n          <Collection\r\n            key={collection.get('viewId')}\r\n            id={collection.get('refId')}\r\n            layouts={layouts}\r\n            collection={collection}\r\n            altsInCollection={getAlternativesInCollection(collection, this.props.alternatives.get('alternatives'))}\r\n            isDraggable={true}\r\n            isResizable={true}\r\n            layoutForCollection={getLayoutForCollection(layouts, collection.get('viewId'))}\r\n            {...props}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n  )\r\n\r\n  /**\r\n   * updates the collection layouts when triggered\r\n   * @param {object} layout\r\n   */\r\n  onLayoutChange = (layout) => {\r\n    this.props.sendMessage(\r\n      this.refWebSocket, {layout: layout, type: layoutConstants.get(\"LAYOUT_UPDATE_MESSAGE_TYPE\")}\r\n    );\r\n  }\r\n\r\n  sendMessage = (data) => {\r\n    this.props.sendMessage(this.refWebSocket, data);\r\n  }\r\n\r\n  /**\r\n   * @function handleKeyEvents\r\n   * @description responds to key stroke events with associated copy, clone or move functions\r\n   * @memberof Collections\r\n   * @param {event} e - keyboard event\r\n   */\r\n  handleKeyEvents = (e) => {\r\n    \r\n\r\n    if (e.altKey && e.keyCode === 67) {\r\n      console.log('you have pressed ALT+C ');\r\n      this.props.clearAltsClipboard();\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected')).toJS();\r\n      \r\n      if (selectedAlternatives.length > 0) {\r\n        this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => {\r\n            this.props.clipAlternatives(selectedAlternative.get('viewId'), selectedAlternative.get('refId'));\r\n            this.props.successMessage(toast.success('alternative cliped'), 'alternative cliped ' + time);\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n      \r\n    }\r\n\r\n    if (e.altKey && e.keyCode === 88) {\r\n      console.log('you have pressed ALT+X ');\r\n      this.props.clearAltsClipboard();\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n      \r\n        if (selectedAlternatives.length > 0) {\r\n        this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => {\r\n            this.props.clipAlternatives(selectedAlternative.get('viewId'), selectedAlternative.get('refId'));\r\n            this.props.cutAlternativesFromCollection(selectedAlternative.get('viewId'));\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n      \r\n    }\r\n\r\n    if (!e.shiftKey && e.altKey && e.keyCode === 8) {\r\n      console.log('you have pressed ALT+BACKSPACE/DELETE');\r\n      this.props.clearAltsClipboard();\r\n\r\n      const selectedAlternatives  = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n      \r\n      if (selectedAlternatives.size > 0) {\r\n        this.props.removeAlternativesFromCollection(selectedAlternatives);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.altKey && e.keyCode === 8) {\r\n      console.log('you have pressed SHIFT+ALT+BACKSPACE/DELETE');\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n\r\n      if (selectedAlternatives.size > 0) {\r\n        this.setState({\r\n          shouldWarn: true,\r\n          warningMessage: 'Do you want to delete all selected alternative views and their underlying alternative?',\r\n          confirmAction: this.handleAlternativeDelete\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.altKey && e.keyCode === 86) {\r\n      console.log('you have pressed ALT+V');\r\n      const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n      const cols = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).map((col) => col.get('viewId')).toJS();\r\n      this.props.refAlternatives(alts, cols);\r\n    }\r\n\r\n    if (e.altKey && e.keyCode === 66) {\r\n      console.log('you have pressed ALT+B');\r\n      const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n      const cols = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).map((col) => col.get('viewId')).toJS();\r\n      this.props.cloneAlternatives(alts, cols);\r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 67) {\r\n      console.log('you have pressed CTRL+C');\r\n      this.props.clearColsClipboard();\r\n      const selectedCollections = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).toJS();\r\n      \r\n      if (selectedCollections.length > 0) {\r\n        this.props.collections.get('collections').filter((collection) => collection.get('isSelected'))\r\n          .map((selectedCollection) => {\r\n            try {\r\n              const alternatives = findCollectionsFromID(this.props.collections.get('collections'), selectedCollection.get('viewId')).get('altsid');\r\n              const layout = getLayoutForCollection(this.props.layouts, selectedCollection.get('viewId'));\r\n              this.props.clipCollection(selectedCollection.get('viewId'), selectedCollection.get('refId'), alternatives, layout);\r\n              this.props.successMessage(toast.success('collection copied'), 'collection copied' + time);\r\n            } catch (e) {\r\n              console.error(e.message);\r\n            }\r\n          }); \r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n      \r\n    \r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 88) {\r\n      console.log('you have pressed CTRL+X');\r\n\r\n      this.props.clearColsClipboard();\r\n      const selectedCollections = this.props.collections.get('collections').filter((collection) => collection.get('isSelected'));\r\n      \r\n      if (selectedCollections.size > 0) {\r\n        this.props.collections.get('collections').filter((collection) => collection.get('isSelected'))\r\n          .map((selectedCollection) => {\r\n            try {\r\n              const alternatives = findCollectionsFromID(this.props.collections.get('collections'), selectedCollection.get('viewId')).get('altsid');\r\n\r\n              alternatives.toJS().map((alt) => {\r\n                return this.props.deselectAlternative(alt.viewId);\r\n              });\r\n\r\n              const layout = getLayoutForCollection(this.props.layouts, selectedCollection.get('viewId'));\r\n              this.props.clipCollection(selectedCollection.get('viewId'), selectedCollection.get('refId'), alternatives, layout);\r\n              this.props.deselectCollection(selectedCollection.get('viewId'));\r\n              this.props.deleteCollections(selectedCollection.get('viewId'));\r\n            } catch (e) {\r\n              console.error(e.message);\r\n            }\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n      \r\n    }\r\n\r\n    if(!e.shiftKey && e.ctrlKey && e.keyCode === 8) {\r\n      console.log('you have pressed CTRL+BACKSPACE/DELETE');\r\n      this.props.clearColsClipboard();\r\n\r\n      const selectedCollections = this.props.collections.get('collections')\r\n        .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n      \r\n      if (selectedCollections.size > 0 ) {\r\n        selectedCollections.map((collection) => {\r\n          this.props.deleteCollections(collection);\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 8) { \r\n      console.log('you have pressed SHIFT+CTRL+BACKSPACE/DELETE');\r\n      const selectedCollections = this.props.collections.get('collections')\r\n        .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n\r\n      if (selectedCollections.size > 0) {\r\n        this.setState({\r\n          shouldWarn: true,\r\n          warningMessage: 'Do you want to delete all selected collection views and their underlying collection?',\r\n          confirmAction: this.handleCollectionDelete,\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n      \r\n    \r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 86) {\r\n      console.log('you have pressed CTRL+V');\r\n      \r\n      if (this.props.collections.get('clippedCollections').size > 0 ) {\r\n        const copyCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n        this.props.copyWithRefCollection(copyCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n    }\r\n\r\n    if (!e.shiftKey && e.ctrlKey && e.keyCode === 66) {\r\n      console.log('you have pressed CTRL+B');\r\n\r\n      if (this.props.collections.get('clippedCollections').size > 0) {\r\n        const cloneCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n        this.props.cloneCollection(cloneCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 66) {\r\n      console.log('you have pressed SHIFT+CTRL+B');\r\n\r\n      if (this.props.collections.get('clippedCollections').size > 0) {\r\n        const cloneCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n\r\n        this.props.deepCloneCollection(cloneCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n      \r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 78) {\r\n      console.log('you have pressed SHIFT+CTRL+N');\r\n\r\n      if (this.props.alternatives.get('clippedAlternatives').size > 0) {\r\n        const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n\r\n        this.props.cloneAltInNewCollection(alts);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy an alternative first'), 'please copy an alternative first ' + time);\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  handleCollectionDelete = (e) => {\r\n      this.props.clearColsClipboard();\r\n\r\n      const selectedCollections = this.props.collections.get('collections')\r\n         .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n\r\n      const colRelList = [];\r\n\r\n      selectedCollections.map((selectedCol) => \r\n         findCollectionRelativesFromID(this.props.collections.get('collections'), selectedCol)\r\n            .map((colRel) => colRelList.push(colRel.get('viewId'))));\r\n\r\n      colRelList.concat(selectedCollections.toJS()).map((col) => {\r\n        this.props.deselectCollection(col);\r\n        this.props.deleteCollections(col);\r\n      })\r\n\r\n      this.setState({\r\n        shouldWarn: false,\r\n        warningMessage: '',\r\n        confirmAction: null,\r\n      })\r\n  }\r\n\r\n  handleAlternativeDelete = (e) => {\r\n    this.props.clearAltsClipboard();\r\n\r\n    const selectedAlternatives  = this.props.alternatives.get('alternatives')\r\n      .filter((alternative) => alternative.get('isSelected'))\r\n\r\n    const altRelList = [];\r\n      \r\n    selectedAlternatives.map((alt) => altRelList.push(alt));\r\n\r\n    selectedAlternatives.map((selectedAlt) => \r\n        findAlternativeRelativesFromID(this.props.alternatives.get('alternatives'), selectedAlt.get('viewId'))\r\n          .map((altRel) => altRelList.push(altRel)));\r\n\r\n    this.props.removeAlternativesFromCollection(altRelList);\r\n\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: '',\r\n      confirmAction: null,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param {object} ev: the event object\r\n   */\r\n  handleDoubleClick = (ev) => {\r\n    console.log(this.props.settings.get('showSettings'))\r\n    if (!this.props.header.get('headerShow') && !this.props.settings.get('showSettings')) {\r\n      const newPoint = getCoordinates(\r\n        ev.clientX - 12, // some fine tuning\r\n        ev.clientY - 48,\r\n      );\r\n\r\n      this.props.createNewCollection(newPoint.x, newPoint.y);\r\n    }\r\n  }\r\n\r\n  handleContextMenu = (event) => {\r\n    event.preventDefault();\r\n    this.props.showHeader(event.pageX, event.pageY);\r\n  }\r\n\r\n\r\n  getRefId = (filterdCollections) => {\r\n      for(let collection of filterdCollections)\r\n      {\r\n        return collection.get('refId');\r\n      }\r\n  }\r\n\r\n  hideHeader = () => {\r\n    let filterdCollections = this.props.collections.get('collections').filter((col) => col.get('isEditingName'));\r\n    \r\n    if (filterdCollections.size > 0) {\r\n      const refId = this.getRefId(filterdCollections);\r\n      this.props.isEditingCollectionsName(refId);\r\n      this.props.removeFocus();\r\n    }\r\n\r\n    if (this.props.header.get('headerShow')) {\r\n      this.props.hideHeader();\r\n      this.props.hideSinkList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function loadOptions\r\n   * @description loads the destination options that *should* be available to the collection\r\n   * @memberof Collection\r\n   * @returns {void}\r\n   */\r\n  loadOptions = (viewId) => {\r\n    return this.props.collections.get('collections')\r\n      .filter((collection) => collection.get('viewId') !== viewId)\r\n        .map((collection) => {\r\n          return {'label': collection.get('collectionName'), collectionName:collection.get('collectionName')+\"-\"+collection.get('collectionNameView') , 'value': collection.get('viewId'), '__isNew__': false};\r\n        });\r\n  }\r\n\r\n  cloneAlternativesFromTaggedCollections = (tagName, collectionId) => {\r\n        const collectionsToCopy = getCollectionsByTag(this.props.collections.get('collections'), tagName);\r\n\r\n        collectionsToCopy.map(collection => {\r\n          const col = findCollectionsFromID(this.props.collections.get('collections'), collection.get('viewId'));\r\n          const alts = col.get('altsid').toJS();\r\n          this.props.cloneAlternatives(alts, [collectionId]);  \r\n        });\r\n  }\r\n\r\n  hoverAlternative = (viewId, refId) => {\r\n    \r\n    const isSelected = this.props.alternatives.get('alternatives')\r\n    .find(alt => alt.get('viewId') === viewId).get('isSelected');\r\n    \r\n    if (isSelected) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHoveredSelected)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHoveredSelected);\r\n  \r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHoveredSelected)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHoveredSelected)\r\n      \r\n      } else if (!isSelected && this.selectedAlts.includes(refId)) {\r\n        \r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHoveredRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHoveredRelated);\r\n  \r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHoveredRelated)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHoveredRelated)\r\n\r\n      } else {\r\n        \r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHovered)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHovered);\r\n  \r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHovered)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHovered)   \r\n      }\r\n  }\r\n\r\n  dehoverAlternative = (viewId, refId) => {\r\n\r\n    const isSelected = this.props.alternatives.get('alternatives')\r\n    .find(alt => alt.get('viewId') === viewId).get('isSelected');\r\n    \r\n    if (isSelected) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorSelectedRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelectedRelated);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorSelectedRelated)\r\n        .style('opacity', 0.7);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorSelectedRelated);\r\n\r\n        this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected'))\r\n        .map(alt => {\r\n          d3.select(\".alt-view-\" + alt.get('viewId'))   \r\n          .style('border', '1.5px')\r\n          .style('border-style', 'solid')\r\n          .style('border-color', styles.colorSelected)\r\n          .style('border-radius', '7px')\r\n          .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n\r\n          d3.select(\".pc-view-\" + alt.get('viewId'))\r\n          .style('stroke', styles.colorSelected)\r\n          .style('opacity', 1);\r\n\r\n          d3.select(\".tableList-view-\" + alt.get('viewId'))   \r\n            .style('background-color', styles.colorSelected);\r\n        });\r\n    } else if (!isSelected && this.selectedAlts.includes(refId)) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorSelectedRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelectedRelated);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorSelectedRelated)\r\n        .style('opacity', 0.7);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorSelectedRelated);\r\n    \r\n      this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected'))\r\n        .map(alt => {\r\n          d3.select(\".alt-view-\" + alt.get('viewId'))   \r\n          .style('border', '1.5px')\r\n          .style('border-style', 'solid')\r\n          .style('border-color', styles.colorSelected)\r\n          .style('border-radius', '7px')\r\n          .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n\r\n          d3.select(\".pc-view-\" + alt.get('viewId'))\r\n            .style('stroke', styles.colorSelected)\r\n            .style('opacity', 1);\r\n\r\n          d3.select(\".tableList-view-\" + alt.get('viewId'))   \r\n            .style('background-color', styles.colorSelected);\r\n        });\r\n    } else if (!isSelected && !this.selectedAlts.includes(refId) ) {\r\n        d3.selectAll(\".alt-ref-\" + refId)\r\n          .style('border', null)\r\n          .style('border-style', null)\r\n          .style('border-color', null)\r\n          .style('border-radius', null)\r\n          .style('-webkit-box-shadow', null);\r\n    \r\n        d3.selectAll(\".pc-ref-\" + refId)\r\n          .style('stroke', styles.colorUnselected)\r\n          .style('opacity', 0.3);\r\n    \r\n        d3.selectAll(\".tableList-ref-\" + refId)\r\n          .style('background-color', '#ffffff');\r\n      }\r\n  }\r\n\r\n  /**\r\n   * handleSearch finds collection by name\r\n   * @param {String} searchText\r\n   */\r\n  handleSearch = (searchText) => {\r\n    let trimmedText = searchText.replace(/ /g, '');\r\n    const arrayOfStrings = trimmedText.split(\",\");\r\n    let collection = null;\r\n    let foundAll = true;\r\n    let namesMissMatch = [];\r\n    \r\n    for(let i = 0; i < arrayOfStrings.length; i++) {\r\n      collection = this.props.collections.get('collections')\r\n        .find(col => col.get(\"collectionName\").toLowerCase() === arrayOfStrings[i].toLowerCase());        \r\n        \r\n        if (collection) {\r\n          this.props.selectCollection(collection.get(\"viewId\"));\r\n        } else {\r\n          foundAll = false;\r\n          namesMissMatch.push(arrayOfStrings[i]);\r\n          this.props.searchedCollectionFailed();\r\n        }\r\n    }\r\n\r\n    if (!foundAll) {\r\n      this.props.searchedCollectionFailed(namesMissMatch)\r\n    } else {\r\n      this.props.searchedCollectionSuccess();\r\n      this.props.toggleSearch();\r\n    }\r\n  }\r\n\r\n\r\n  updateLayoutForCollection = (layout) => {\r\n    let layoutId = layout.get('i');\r\n    this.props.updateLayoutForCollection(layoutId);\r\n  }\r\n\r\n\r\n  changeMultipleName = (object) => {\r\n\r\n    let collectionsWithRef =  this.props.collections.get('collections').filter(col => col.get(\"refId\") === object.refId);\r\n    if (collectionsWithRef.size > 1) {\r\n      for (let collection of collectionsWithRef) {\r\n        if (collection.get(\"isEditingName\")) {\r\n          let selectedElement = document.getElementById(object.viewId);\r\n          \r\n          if (collection.get('viewId') !== object.viewId) {\r\n            let refElement = document.getElementById(collection.get('viewId'));\r\n  \r\n            if(refElement !== null) {\r\n                refElement.value = selectedElement.value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(!this.state.isMultipleInputs) {\r\n        this.setState({\r\n          isMultipleInputs: true,\r\n        });\r\n      }\r\n    } else {\r\n      // console.log(\"only one\")\r\n    }\r\n  }\r\n\r\n  checkNameExists = (name, unquieCollections)  => {\r\n    let counter = 0;\r\n    let compareNumber =  0;\r\n\r\n    for (let collection of unquieCollections) {\r\n      let collectionSubname = collection.get(\"collectionName\").substring(0, name.length + 1);\r\n      if (collection.get(\"collectionName\") === name) {\r\n        counter++;\r\n      } else if (collectionSubname === name + \":\")\r\n      {      \r\n        counter++;\r\n        let numberAsString =  collection.get(\"collectionName\").split(\":\")\r\n        let integer = parseInt(numberAsString[1], 10);\r\n\r\n        if (compareNumber <= integer) {\r\n          compareNumber = integer;\r\n        }\r\n      }\r\n    }\r\n    if(compareNumber > counter) {\r\n      return compareNumber + 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n\r\n\r\n  updateMultipleNames = (object) => {\r\n    let refIdsCollection = this.props.collections.get(\"collections\").filter((col) => col.get('refId') === object.collection.get('refId'))\r\n    if (refIdsCollection !== null && refIdsCollection.size > 1) {\r\n        for (let collection of refIdsCollection) {\r\n          try {\r\n              let newCollection = collection.toJS();\r\n              newCollection.collectionName = object.name + \"-\" +  newCollection.collectionNameView;\r\n              this.props.updateCollection(newCollection);\r\n            } catch(err) {\r\n              console.log(err)\r\n            } finally {\r\n              this.props.editNameForCollection(collection.get('viewId'), object.name);\r\n            } \r\n        }\r\n        this.setState({\r\n          isMultipleInputs: false,\r\n        });\r\n    } else {\r\n      console.log(\"has no ref\")\r\n    }\r\n  }\r\n\r\n  namesExists = (name, collection) => {\r\n     return nameExists(name, this.props.collections.get(\"collections\"), collection)\r\n  }\r\n\r\n  showWarningMessage = () => {\r\n    this.props.warningMessage(toast.warning('Name already exists'), 'Name already exists' + time);\r\n  }\r\n\r\n  handleNameExists = (collection, name) => {\r\n    this.props.warningMessage(toast.warning(`Collection ${name} already exists`), 'Name already exists' + time);\r\n    let nameCounter =  handleNameCounter(this.props.collections.get(\"collections\"), name, collection);\r\n    return nameCounter;\r\n  }\r\n\r\n  nameHasTheSameValue = (refId) => {\r\n    this.props.warningMessage(toast.warning(`Collection name did not change`), 'collection name did not change' + time);\r\n    this.props.isEditingCollectionsName(refId);\r\n  }\r\n\r\n \r\n  updateAspectRatio = (object) => {\r\n  \r\n    let copyArray = [...this.props.layouts.get('gridLayout').toJS()]\r\n    let newArray = copyArray.map((layout) => {\r\n      if(layout.i === object.viewId)\r\n      {\r\n        layout.w = object.width;\r\n        layout.h = object.height;\r\n        layout.isResizable = object.isResizable\r\n        return layout\r\n      }\r\n      return layout\r\n\r\n    })\r\n\r\n    this.props.updateMaxColumns(newArray)\r\n  }\r\n\r\n  updateUnlockAspectRatio = (object) => {\r\n    let copyArray = [...this.props.layouts.get('gridLayout').toJS()];\r\n    let newArray = copyArray.map((layout) => {\r\n      if( layout.i === object.viewId) {\r\n        layout.isResizable = object.isResizable;\r\n        return layout;\r\n      }\r\n      return layout\r\n\r\n    })\r\n\r\n    this.props.updateMaxColumns(newArray)\r\n  }\r\n\r\n  handleDeleteCancel = () => {\r\n    this.setState({\r\n        shouldWarn: false,\r\n        warningMessage: \"\",\r\n        confirmAction: null\r\n    })\r\n}\r\n\r\n  \r\n  /**\r\n  * @returns {ReactPureComponent}\r\n  */\r\n  render() {\r\n      const width = calculateWidth(\r\n        this.props.layouts.get('maxColumns'),\r\n        layoutConstants.get('MARGIN'),\r\n        layoutConstants.get('CELL_DIM'),\r\n        layoutConstants.get('BUFFER')\r\n      );\r\n\r\n      const collectionsDivStyle = {\r\n        width:  window.innerWidth+ 'px',\r\n        minWidth: '100%',\r\n        height: window.innerHeight + 'px',\r\n        minHeight: '100%',\r\n      }\r\n\r\n      this.selectedAlts = [...new Set(this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected')).map(alt => alt.get('refId')).toJS())];\r\n      this.selectedCols = [...new Set(this.props.collections.get('collections').filter(col => col.get('isSelected')).map(col => col.get('refId')).toJS())];\r\n    return (\r\n      <div\r\n        ref={this.mainRef}\r\n        onKeyDown={this.handleKeyEvents}\r\n        onDoubleClick={this.handleDoubleClick}\r\n        tabIndex=\"0\"\r\n        style={collectionsDivStyle}\r\n        onContextMenu={this.handleContextMenu}\r\n        onClick={this.hideHeader}\r\n        className={styles[\"container\"]}\r\n      >\r\n\r\n        <HeaderContainer  \r\n          deselectAllCollections={this.props.deselectAllCollections}\r\n          deselectAllAlternatives={this.props.deselectAllAlternatives}\r\n        />\r\n        <NotificationContainer />\r\n\r\n        <ReactGridLayout\r\n        className={styles[\"gridLayout\"]}\r\n          cols = {this.props.layouts.get('maxColumns')}\r\n          rowHeight={60}\r\n          layout={this.props.layouts.get('gridLayout').toJS()}\r\n          width={width}\r\n          isDraggable\r\n          isResizable\r\n          onLayoutChange={this.onLayoutChange}\r\n          onResizeStop = {\r\n            throttle(\r\n              this.props.updateMaxColumns.bind(\r\n                this.props.layouts.get('gridLayout')\r\n              ))\r\n          }\r\n          onDragStop = {\r\n            throttle(this.props.updateMaxColumns.bind(\r\n              this.props.layouts.get('gridLayout')\r\n              ))\r\n          }\r\n          compactType={this.props.settings.get('collectionCompactionType') !== 'none' ? this.props.settings.get('collectionCompactionType') : null}\r\n          preventCollision={this.props.settings.get('preventCollision')}\r\n          draggableHandle=\".drag-handle\"\r\n        >\r\n          {this.renderCollection(\r\n            this.props.collections.get('collections').filter((collection) => (collection.get('isSinked') === false)),\r\n            this.props.layouts,\r\n            {\r\n              hoverAlternative: this.hoverAlternative,\r\n              dehoverAlternative: this.dehoverAlternative,\r\n              sendMessage: this.sendMessage,\r\n              loadOptions: this.loadOptions,\r\n              isMultipleInputs: this.state.isMultipleInputs,\r\n              cloneAlternativesFromTaggedCollections: this.cloneAlternativesFromTaggedCollections,\r\n              updateLayoutForCollection: this.updateLayoutForCollection,\r\n              updateAspectRatio: this.updateAspectRatio.bind(this),\r\n              updateUnlockAspectRatio: this.updateUnlockAspectRatio.bind(this),\r\n              updateMultipleNames: this.updateMultipleNames.bind(this),\r\n              createNewCollection: this.props.createNewCollection,\r\n              deleteCollections: this.props.deleteCollections,\r\n              selectCollection: this.props.selectCollection,\r\n              deselectCollection: this.props.deselectCollection,\r\n              selectAlternative: this.props.selectAlternative,\r\n              deselectAlternative: this.props.deselectAlternative,\r\n              deselectAllAlternatives: this.props.deselectAllAlternatives,\r\n              hoverAlternativeSpecial: this.props.hoverAlternativeSpecial,\r\n              cloneAlternatives: this.props.cloneAlternatives,\r\n              toggleSink: this.props.sinkCollection,\r\n              toggleViewMode: this.props.toggleViewMode,\r\n              toggleAltView: this.props.toggleAltView,\r\n              removeAlternativesFromCollection: this.props.removeAlternativesFromCollection,\r\n              editNameForCollection: this.props.editNameForCollection,\r\n              isEditingCollectionsName: this.props.isEditingCollectionsName,\r\n              nameExists: this.namesExists.bind(this),\r\n              handleNameExists: this.handleNameExists.bind(this), \r\n              restoreAlternative: this.props.restoreAlternative,\r\n              updateCollection: this.props.updateCollection,\r\n              saveLayoutObject: this.props.saveLayoutObject,\r\n              setCollectionDestination: this.props.setCollectionDestination,\r\n              setCollectionMode: this.props.setCollectionMode,\r\n              updateCollectionTags: this.props.updateCollectionTags,\r\n              alternatives: this.props.alternatives,\r\n              layouts: this.props.layouts,\r\n              selectedAlts: this.selectedAlts,\r\n              selectedCols: this.selectedCols,\r\n              changeMultipleName: this.changeMultipleName.bind(this),\r\n              nameHasTheSameValue: this.nameHasTheSameValue.bind(this),\r\n              removeFocus: this.props.removeFocus,\r\n              shouldRemoveFocus: this.props.collections.get('shouldRemoveFocus'),\r\n            }\r\n          )}\r\n        </ReactGridLayout>\r\n        <Websocket\r\n          url={urls.get('websocketURL')+\"?projectId=\"+ sessionStorage.getItem(appConstants.get('PROJECT_ID'))+ \"&userId=\"+ localStorage.getItem(appConstants.get('USER_ID'))}\r\n          onMessage={this.props.onMessageRecieved}\r\n          onOpen={this.props.openWebSocketConnection}\r\n          ref={Websocket => this.refWebSocket = Websocket}\r\n        />\r\n        {this.props.settings.get('showSettings') ? \r\n          <SettingsPanel \r\n            settings = {this.props.settings}\r\n            toggleSettings = {this.props.toggleSettings}\r\n            setCollisionPrevention = {this.props.setCollisionPrevention}\r\n            setAlternativeSize = {this.props.setAlternativeSize}\r\n            setCompactionType = {this.props.setCompactionType}\r\n            projects={this.props.projects.get('projects')} \r\n            message=\"Please select a project: \" \r\n            selectProject={this.props.selectProject}\r\n            createProject={this.props.createProject}\r\n            user={this.props.user.get(\"user\")}  \r\n            selectedProject={this.props.projects.get(\"selectedProject\")}\r\n            /> \r\n        : null}\r\n        {this.props.search.get('showSearch') ?\r\n          <SearchPanel\r\n            search={this.props.search}\r\n            toggleSearch={this.props.toggleSearch}\r\n            handleSearch={this.handleSearch}\r\n            searchedCollectionFailed={this.props.searchedCollectionFailed}\r\n            searchedCollectionSuccess={this.props.searchedCollectionSuccess}\r\n            emptyMissMatchArray={this.props.emptyMissMatchArray}\r\n          />\r\n          : null\r\n        }\r\n       \r\n        {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage}/> : null} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Collections;\r\n","import Collections from './Collections';\r\n\r\nexport default Collections;\r\n","/**\r\n * Action dispatchers for operations using websockets\r\n * @namespace websocketActions\r\n */\r\n\r\nimport appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  addAlternative,\r\n  createCollection,\r\n  collectionsFetch,\r\n  addLayoutObject,\r\n  addAlternativeToCollection,\r\n  valueBandsFetch,\r\n  keySetsFetch,\r\n  updateAlternative,\r\n  setLoadingState,\r\n  selectAlternative,\r\n} from './updateActions';\r\nimport {\r\n  hoverAlternativeSpecial,\r\n} from './alternativeActions';\r\nimport {\r\n  findCollectionsFromName,\r\n} from '../util/collections';\r\nimport {\r\n  findCollectionsFromID,\r\n  fetchCollectionsNotID,\r\n} from '../util/collections';\r\nimport {\r\n  removeFieldFromDatum,\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {batch} from 'react-redux';\r\n\r\n// TODO: add notifications/toasts below\r\n\r\n/**\r\n * @function openWebSocketConnection\r\n * @description opens websocket connection\r\n * @memberof websocketActions\r\n * @returns {action}\r\n */\r\nexport const openWebSocketConnection = () => ({\r\n  type: appConstants.get('OPEN_WEB_SOCKET_CONNECTION'),\r\n});\r\n\r\n/**\r\n * @function closeWebSocketConnection\r\n * @description closes websocket connection\r\n * @memberof websocketActions\r\n * @returns {action}\r\n */\r\nexport const closeWebSocketConnection = () => ({\r\n  type: appConstants.get('OPEN_WEB_SOCKET_CONNECTION'),\r\n});\r\n\r\n/**\r\n * @function setNewWebsocket\r\n * @description dispatches an action that to set a new Websocket connection\r\n * @memberof websocketActions\r\n * @param {object} payload\r\n * @returns {action}\r\n */\r\nexport const setNewWebsocket = (payload) => ({\r\n  type: appConstants.get('SET_NEW_WEBSOCKET'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * @function sendMessage\r\n * @description  sends a message through websocket\r\n * @memberof websocketActions\r\n * @param {object} websocket\r\n * @param {object} message\r\n * @returns {action}\r\n */\r\nexport const sendMessage = (websocket, message) => () => {\r\n  if (websocket) {\r\n    if (websocket.state.ws.readyState === 1) {\r\n      const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n      const projectId = sessionStorage.getItem(appConstants.get('PROJECT_ID'));\r\n      message.projectId = projectId;\r\n      message.userId = userId;\r\n      const data = JSON.stringify(message);\r\n      websocket.sendMessage(data);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @function onMessageRecieved\r\n * @description  responds to message received with redux actions\r\n * @memberof websocketActions\r\n * @param {object} response\r\n * @returns {action}\r\n */\r\nexport const onMessageRecieved = (response) => (dispatch) => {\r\n  const {type, data} = JSON.parse(response);\r\n  switch (type) {\r\n  case 'NEW':\r\n    batch(() => {\r\n      dispatch(addAlternative(shapeAlternative(data.alt, data.alt.params, data.alt.outputs)));\r\n      dispatch(hoverAlternativeSpecial(data.alt.viewId));\r\n      dispatch(manageNewAlternative(data.alt, data.collection, data.valueBands, data.keySets));\r\n      dispatch(addRefs(data.refResult));\r\n    });\r\n    break;\r\n  case 'EDIT':\r\n    dispatch(editNewAlternative(data.alts, data.valueBands));\r\n    break;\r\n  case 'NEWALT':\r\n    dispatch(addNewAlternative(data.alt, data.collection));\r\n    break;\r\n  default:\r\n    break;\r\n  }\r\n};\r\n\r\n\r\nexport const manageNewAlternative = (alts, newCollection, valueBands, keySets) => (dispatch, getState) => {\r\n  const coll = getState().collections.get('collections');\r\n  const result = findCollectionsFromID(coll, alts.collectionViewId);\r\n\r\n  batch(() => {\r\n    dispatch(valueBandsFetch(valueBands));\r\n    dispatch(keySetsFetch(keySets));\r\n  });\r\n\r\n\r\n  if (!result) {\r\n\r\n    const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n    const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n    newCollection = shapeCollection(newCollection, Object.keys(inputs), Object.keys(outputs))\r\n\r\n    const collectionViewId = newCollection.viewId;\r\n    \r\n    const layoutObject = Immutable.fromJS(\r\n      {x:2, y:2, w:3, h:5 , i: collectionViewId, minW: 3, minH: 5, moved: false, static: false}\r\n    );\r\n\r\n    batch(() => {\r\n      dispatch(addLayoutObject(layoutObject));\r\n      dispatch(createCollection([alts._id], newCollection.collectionName, newCollection.refId,\r\n        newCollection.tags, newCollection.viewId,\r\n        false, false, false, newCollection.viewType, getState().scales.get('keySets'), newCollection.inputs, newCollection.outputs, [], {}));\r\n    });\r\n\r\n  } else {\r\n    const otherCollections = fetchCollectionsNotID(coll, result.get(\"viewId\"));\r\n    const updatedCollection = result.update('altsid',\r\n      (altsid) => altsid.push(alts._id));\r\n\r\n    const updatedCollections = otherCollections.push(updatedCollection);\r\n    dispatch(collectionsFetch(updatedCollections));    \r\n  }\r\n\r\n};\r\n\r\nexport const addRefs = (data) => (dispatch, getState) => {\r\n\r\n  const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n  const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n  data.forEach((datum) => {\r\n    datum.alts.map((alternative) => {\r\n      dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n    });\r\n\r\n    datum.alts.map((alt) => {\r\n      batch(() => {\r\n        dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId));\r\n        dispatch(selectAlternative(alt.viewId));\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport const editNewAlternative = (alts, valueBands) => (dispatch, getState) => {\r\n\r\n  const collections = getState().collections.get('collections')\r\n  const keySets = getState().scales.get('keySets').toJS();\r\n  \r\n  const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n  const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n    alts.map((alt) => {\r\n      const newAlternative = shapeAlternative(alt, inputs, outputs);\r\n\r\n      const fromCollection = findCollectionsFromName(collections, newAlternative.collectionName);\r\n      const dimOrder = fromCollection.get('dimOrder').toJS();\r\n\r\n      let parallelData = newAlternative.parallelData;\r\n\r\n      let difference = keySets.filter((key) => !dimOrder.includes(key));\r\n\r\n      difference.forEach((dim) => parallelData = removeFieldFromDatum(parallelData, dim));\r\n      \r\n      newAlternative.parallelData = parallelData;\r\n\r\n      dispatch(updateAlternative(newAlternative.viewId, newAlternative));\r\n      dispatch(setLoadingState(newAlternative.viewId, false));\r\n    })\r\n\r\n    dispatch(valueBandsFetch(valueBands));    \r\n};\r\n\r\n/**\r\n * @function addNewAlternative\r\n * @description  dispatches an action to add a new alternative\r\n * @memberof websocketActions\r\n * @param {array} alts\r\n * @param {array} collections\r\n * @returns {action}\r\n */\r\nexport const addNewAlternative = (alts, collections) => (dispatch) => {\r\n  batch(() => {\r\n    dispatch(editNewAlternative(alts));\r\n    dispatch(manageNewAlternative(alts, collections));\r\n  });\r\n};\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace fetchActions\r\n */\r\n\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  alternativesFetch,\r\n  collectionsFetch,\r\n  layoutFetch,\r\n  projectFetch,\r\n  addLayoutObject,\r\n  keySetsFetch,\r\n  valueBandsFetch,\r\n  settingsFetch,\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {\r\n  filterCollectionsFromLayouts,\r\n  correctAltIDsInCollections,\r\n  addCollectionNameView,\r\n  shouldAddNameView,\r\n} from '../util/collections';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection\r\n} from '../util/util';\r\nimport {\r\n  getAlternativeIDs,\r\n} from '../util/alternatives';\r\nimport Immutable from 'immutable';\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux';\r\nimport { updateCollection } from './collectionActions';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n\r\n/***\r\n * @function getUserProjects\r\n * @description fetches users project from database\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const getUserProjects = () => (dispatch) => {\r\n  fetch(urls.get('project_fetch'))\r\n    .then((response)=> response.json())\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        batch(() => {\r\n          dispatch(projectFetch(response));           \r\n        });   \r\n      }else{\r\n        dispatch(projectFetch(response));\r\n      }      \r\n\r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Layouts not fetched'), 'layouts not fetched ' + time));\r\n    })\r\n  };\r\n\r\n\r\n\r\n/**\r\n * @function fetchLayout\r\n * @description fetch layout information from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchProject = () => (dispatch) => {\r\n  fetch(urls.get('project_fetch'))\r\n    .then((response)=> response.json())\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        \r\n        batch(() => {\r\n          dispatch(projectFetch(response)); \r\n          dispatch(fetchLayout()); \r\n        });   \r\n      }else{\r\n        dispatch(projectFetch(response));\r\n      }      \r\n      \r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Projects not fetched'), 'Projects not fetched ' + time));\r\n    })\r\n  };\r\n\r\n/**\r\n * @function fetchLayout\r\n * @description fetch layout information from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchLayout = () => (dispatch) => (\r\n  fetch(urls.get('layout_fetch'))\r\n    .then((response)=> response.json())\r\n    .then((response) => {\r\n        const layouts = response[0]['layout'];\r\n        batch(() => {\r\n          dispatch(layoutFetch(layouts));\r\n          dispatch(fetchAlternatives());\r\n          dispatch(successMessage(toast.success('Layouts fetched'), 'layouts fetched ' + time)); \r\n        });               \r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Layouts not fetched'), 'layouts not fetched ' + time));\r\n    })\r\n);\r\n\r\nexport const fetchSettings = () => (dispatch) => (\r\n  fetch(urls.get('settings_fetch'))\r\n    .then(response => response.json())\r\n    .then((response) => {\r\n      const settings = {\r\n        alternativeImageSize: response.length !== 0 && response[0].hasOwnProperty('alternativeImageSize') ? response[0].alternativeImageSize : 180,\r\n        collectionCompactionType: response.length !== 0 && response[0].hasOwnProperty('collectionCompactionType') ? response[0].collectionCompactionType : 'none',\r\n        preventCollision: response.length !== 0 && response[0].hasOwnProperty('preventCollision') ? response[0].preventCollision : true,\r\n      };\r\n\r\n      batch(() => {\r\n        dispatch(settingsFetch(settings));\r\n        dispatch(fetchAlternatives());\r\n      });\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n);\r\n\r\n/**\r\n * @function fetchAlternatives\r\n * @description fetch the alternative data from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchAlternatives = () => (dispatch) => (\r\n  fetch(urls.get('alternatives_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      // ensure no null data gets in\r\n      const alternatives = response.alternatives.filter(alt => alt !== null).map(alt => shapeAlternative(alt));\r\n\r\n      batch(() => {\r\n        dispatch(alternativesFetch(alternatives));\r\n        dispatch(keySetsFetch(response.keySets));\r\n        dispatch(valueBandsFetch(response.valueBands));\r\n        dispatch(fetchCollections());\r\n        dispatch(successMessage(toast.success('Alternatives fetched'), 'alternatives fetched ' + time));\r\n      });\r\n\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('Alternatives not fetched'), 'alternatives not fetched ' + time));\r\n    })\r\n);\r\n\r\n\r\n/**\r\n * @function fetchCollections\r\n * @description fetch the collection data and update the store with the results. The collections present in the layout are put filtered and sent, the other collections are put into the sink.\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchCollections = () => (dispatch, getState) => (\r\n  fetch(urls.get('collections_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? Object.keys(getState().alternatives.get('alternatives').toJS()[0]['params']) : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? Object.keys(getState().alternatives.get('alternatives').toJS()[0]['outputs']) : {};\r\n\r\n      const layouts = getState().layouts;\r\n      const alternatives = getState().alternatives;\r\n      const altIDs = getAlternativeIDs(alternatives.get('alternatives'));\r\n      const correctedCollections = correctAltIDsInCollections(response, altIDs);\r\n      const collectionsWithoutLayout = filterCollectionsFromLayouts(correctedCollections, layouts);\r\n\r\n      for (let i = 0; i < collectionsWithoutLayout.length; i++) {\r\n        \r\n        const col = collectionsWithoutLayout[i];\r\n\r\n        if (col) {\r\n          const layoutObject = Immutable.fromJS({x:2, y:2, w:3, h:5 , i: col.viewId, minW: 3, minH: 5, moved: false, static: false});   \r\n\r\n          dispatch(addLayoutObject(layoutObject));\r\n        }\r\n      }\r\n      let shouldAddName = shouldAddNameView(correctedCollections)\r\n      if(shouldAddName)\r\n      {\r\n        let addViewName = addCollectionNameView(correctedCollections)\r\n        addViewName.map((col => dispatch(updateCollection(col))))\r\n      }\r\n      let modifiedCollections   = correctedCollections.map(col => shapeCollection(col, inputs, outputs))\r\n      batch(() => {\r\n        dispatch(collectionsFetch(modifiedCollections));\r\n        dispatch(successMessage(toast.success('Collections fetched'), 'collections fetched ' + time));\r\n      });\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('Collections not fetched'), 'collections not fetched ' + time));\r\n    })\r\n);\r\n","import Project from './Project';\r\n\r\nexport default Project;","import React, {PureComponent} from 'react';\r\nimport styles from './project.module.scss';\r\nimport imageAlts from '../../../resources/SquamishThree1.png';\r\n\r\nclass Project extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    /**\r\n     * @function  handleSelectedProject\r\n     * @param {Object} e \r\n     * @description select an existing project and render project page\r\n     */\r\n    handleSelectedProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.selectProject(this.props.project.toJS())\r\n        this.props.history.push(\"./project\");\r\n    }\r\n\r\n    /**\r\n     * @function handleDelete\r\n     * @param {Object} e \r\n     * @description deletes project\r\n     */\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation(); \r\n        this.props.deleteProject(this.props.project.get(\"id\"));\r\n    }\r\n\r\n    /**\r\n     * @function handleEdit\r\n     * @param {Object} e \r\n     * @description edits project\r\n     */\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.openEditProject(this.props.project)\r\n    }\r\n\r\n    onRightClick = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation();\r\n        this.props.showProjectContextMenu(e.pageX + \"px\", e.pageY + \"px\", this.props.project);\r\n     \r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        let username = this.props.userName ? this.props.userName : \"No Name\";\r\n        return(\r\n            <div \r\n                className={styles[\"projectContainer\"]} \r\n                onClick={this.handleSelectedProject}\r\n                onContextMenu={this.onRightClick}\r\n               \r\n            >\r\n                <div className={styles[\"imageContainer\"]}>\r\n                  \r\n                    <img\r\n                        src={imageAlts}\r\n                        alt=\"image of alternatives\"\r\n                        style={{\r\n                            width: 390,\r\n                            height: 130,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles[\"textContainer\"]}>\r\n\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <h3 className={styles[\"title\"]}>{this.props.name}</h3>\r\n                    </div>\r\n\r\n                    <div className={styles[\"descriptionContainer\"]}>\r\n                        <p className={styles[\"description\"]}>{this.props.project.get(\"description\")}</p>\r\n                        <div className={styles[\"userContainer\"]}>\r\n                            <div className={styles[\"circle\"]}>\r\n                                <p className={styles[\"initials\"]}>{username.charAt(0).toUpperCase()}</p>\r\n                            </div>                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project;","import ProjectContextMenu from './ProjectContextMenu'; \r\n\r\nexport default ProjectContextMenu;\r\n","import React, {PureComponent} from 'react';\r\nimport styles from \"./projectContextMenu.module.scss\";\r\n\r\nclass ProjectContextMenu extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    handleOpenProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldCloseProjectContextMenu();\r\n        this.props.selectProject(this.props.project.toJS());\r\n        this.props.history.push(\"/project\");\r\n    }\r\n\r\n    handleEditProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.openEditProject(this.props.project)\r\n    }\r\n\r\n    handleDeleteProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleDeleteProject(this.props.project.get(\"id\"))\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div\r\n              className={styles[\"contextMenuContainer\"]}\r\n              style={{\r\n                  top: this.props.yPos,\r\n                  left: this.props.xPos,\r\n              }}\r\n            >\r\n                <div\r\n                 onClick={this.handleOpenProject}\r\n                 className={styles[\"openContainer\"]}\r\n                >\r\n                    <p className={styles[\"listItemText\"]}>\r\n                        Open \r\n                    </p>\r\n                </div>\r\n                <div\r\n                    onClick={this.handleEditProject}\r\n                    className={styles[\"editContainer\"]}\r\n                >\r\n                    <p\r\n                     className={styles[\"listItemText\"]}\r\n                    >\r\n                        Edit \r\n                    </p>\r\n                </div>\r\n                <div\r\n                    onClick={this.handleDeleteProject}\r\n                    className={styles[\"deleteContainer\"]}\r\n                >\r\n                    <p className={styles[\"listItemText\"]}>\r\n                        Delete\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectContextMenu;","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\n/**\r\n * @class ProjectBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the projectBox pane, which is a popup window\r\n */\r\nclass ProjectBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true\r\n      }  \r\n\r\n      this.selectedProject = {};  \r\n      this.newProjectName = \"\";\r\n      this.newProjectDescription = \"\";  \r\n  }\r\n\r\n  \r\n  /**\r\n   * @function handleCreate\r\n   * @memberof projectBox\r\n   * @description creating a new project \r\n   */\r\n  handleCreate = () => {\r\n    if (this.newProjectName !== \"\") {\r\n      this.props.createProject(this.newProjectName,this.newProjectDescription);\r\n      this.props.history.push(\"/project\");\r\n    }    \r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.isCreatingProject();\r\n  };\r\n\r\n  onProjectNameChange = (e) =>{\r\n    this.newProjectName = e.target.value;\r\n  }\r\n\r\n  onProjectDescriptionChange = (e) =>{\r\n    this.newProjectDescription = e.target.value;\r\n  }\r\n\r\n  /**\r\n   * @description renders the view for projectBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.props.isCreating}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\"  style={{color: \"black\"}}>{\"Projects\"}</DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText \r\n                    id=\"alert-dialog-description\"\r\n                    style={{color: \"black\"}}\r\n                  >\r\n                    Enter a name and description for the new project.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-name\"\r\n                    label=\"project name\"\r\n                    onChange={this.onProjectNameChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-description\"\r\n                    label=\"project description\"\r\n                    onChange={this.onProjectDescriptionChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                <DialogActions>\r\n                  <Button onClick={this.handleCancel} color=\"primary\" >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleCreate} color=\"primary\" autoFocus>\r\n                    create\r\n                  </Button>\r\n                </DialogActions>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default ProjectBox;","import EditProjectBox from './EditProjectBox';\r\n\r\nexport default EditProjectBox;","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\n/**\r\n * @class ProjectBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the projectBox pane, which is a popup window\r\n */\r\nclass EditProjectBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true\r\n      }  \r\n\r\n      this.selectedProject = {};  \r\n      this.newProjectName = \"\";\r\n      this.newProjectDescription = \"\";  \r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setState({\r\n        newProjectName: this.props.project.get(\"name\"),\r\n        newProjectDescription: this.props.project.get(\"description\")\r\n      })\r\n  }\r\n\r\n  \r\n  /**\r\n   * @function handleCUpdate\r\n   * @memberof editProjectBox\r\n   * @description edit a new project \r\n   */\r\n  handleUpdate = () => {\r\n    if (this.state.newProjectName !== \"\") {\r\n        const editElments = {\r\n          projectName: this.state.newProjectName,\r\n          projectDescription: this.state.newProjectDescription,\r\n          projectId: this.props.project.get(\"id\"),\r\n        }\r\n        this.props.editProject(editElments);\r\n    }    \r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.openEditProject(null);\r\n  };\r\n\r\n  /**\r\n   * @function onProjectNameChange\r\n   * @param {Object } e \r\n   * @description handle name change amd updates newProjectName state\r\n   */\r\n  onProjectNameChange = (e) =>{\r\n    this.setState({\r\n        newProjectName: e.target.value\r\n    }) \r\n}\r\n\r\n  /**\r\n   * @function  onProjectDescriptionChange \r\n   * @param {Object} e\r\n   * @description handle description text change and updates newProjectDescription state \r\n   */\r\n  onProjectDescriptionChange = (e) =>{\r\n    this.setState({\r\n        newProjectDescription: e.target.value\r\n    }) \r\n  }\r\n\r\n  /**\r\n   * @description renders the view for projectBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.props.isCreating}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\"  style={{color: \"black\"}}>{\"Projects\"}</DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText \r\n                    id=\"alert-dialog-description\"\r\n                    style={{color: \"black\"}}\r\n                  >\r\n                    Enter a name and description for the new project.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-name\"\r\n                    label=\"project name\"\r\n                    value={this.state.newProjectName}\r\n                    onChange={this.onProjectNameChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-description\"\r\n                    label=\"project description\"\r\n                    onChange={this.onProjectDescriptionChange}\r\n                    value={this.state.newProjectDescription}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                <DialogActions>\r\n                  <Button onClick={this.handleCancel} color=\"primary\" >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleUpdate} color=\"primary\" autoFocus>\r\n                    Update\r\n                  </Button>\r\n                </DialogActions>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default EditProjectBox;","import React, { PureComponent } from 'react';\r\nimport Project from './project'\r\nimport styles from './projects.module.scss'; \r\nimport { MdNoteAdd, MdHome,MdContentCopy } from 'react-icons/md';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport ProjectContextMenu from './projectContextMenu';\r\nimport ProjectBox from \"./projectBox/ProjectBox\";\r\nimport EditProjectBox from './editProjectBox';\r\nimport NotificationContainer from \"../../containers/NotificationContainer\";\r\nimport MessageBox from \"../messageBox/MessageBox\";\r\n\r\n\r\nclass Projects extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shouldWarn: false,\r\n            confirmAction: null,\r\n            warningMessage: \"\"\r\n        }\r\n      \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUserProjects();\r\n        \r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if(prevProps.auth.get(\"userLoggedIn\") && !this.props.auth.get(\"userLoggedIn\")) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description log the user out of the system\r\n     */\r\n    handelLogout = () => {\r\n        this.props.logout();\r\n    }\r\n\r\n    /**\r\n     * @function handelOpenEditProject\r\n     * @param {Object} project \r\n     * @description shows EditProjectBox\r\n     */\r\n    handelOpenEditProject(project) {\r\n        this.props.openEditProject(project);\r\n    }\r\n\r\n    /**\r\n     * @function  deleteProject\r\n     * @param {String} id \r\n     * @description handles delete project\r\n     */\r\n    deleteProject(id){\r\n        this.props.deleteProject(id);\r\n        this.setState({\r\n            shouldWarn: false,\r\n            warningMessage: \"\",\r\n            confirmAction: null\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * @function handleDeleteProject\r\n     * @param {String} id \r\n     * @description shows meesageBox component\r\n     */\r\n    handleDeleteProject(id) {\r\n        this.props.shouldCloseProjectContextMenu()\r\n        this.setState({\r\n            shouldWarn: true,\r\n            warningMessage: 'Do you want to delete all selected project views and their underlying alternative?',\r\n            confirmAction: this.deleteProject.bind(this, id),\r\n        })\r\n    }\r\n\r\n    showProjectContextMenu = (xPos, yPos, project) => {\r\n      \r\n        this.props.showProjectMenu(xPos, yPos, project);\r\n    }\r\n\r\n    renderProjects = (projects) => (\r\n        projects.map((project) => {\r\n            return (\r\n                <Project\r\n                  key={project.get(\"id\")}\r\n                  project={project}\r\n                  name={project.get(\"name\")}\r\n                  selectProject={this.props.selectProject}\r\n                  deleteProject={this.handleDeleteProject.bind(this)}\r\n                  openEditProject={this.handelOpenEditProject.bind(this)}\r\n                  history={this.props.history}\r\n                  showProjectContextMenu={this.showProjectContextMenu}\r\n                  userName={this.props.auth.get('user').get('username')}\r\n                />\r\n            )\r\n        })\r\n    )\r\n\r\n    /**\r\n     * @description shows project create popup\r\n     */\r\n    handleCreateProject = () => {\r\n        this.props.isCreatingProject();\r\n    }\r\n\r\n    /**\r\n     * @description resets the state when clicking cancle in delete popup\r\n     */\r\n    handleDeleteCancel = () => {\r\n        this.setState({\r\n            shouldWarn: false,\r\n            warningMessage: \"\",\r\n            confirmAction: null\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.projects.get(\"showProjectContextMenu\")){\r\n            this.props.shouldCloseProjectContextMenu()\r\n        }\r\n    }\r\n\r\n    handleHomeClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    handleAboutClick = (e) => {\r\n        e.preventDefault();\r\n        window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\" , '_blank', \"docs\");      \r\n    }\r\n\r\n\r\n    render(){\r\n        let username = this.props.auth.get('user') && this.props.auth.get('user').get('username') ? this.props.auth.get('user').get('username') : \"No Name\"\r\n        return(\r\n            <div \r\n                className={styles[\"mainsContainer\"]}   \r\n                onClick={this.handleClick}  \r\n            >\r\n                <NotificationContainer />\r\n                <div className={styles[\"controlsContainer\"]}>\r\n                   <div className={styles[\"controlsContent\"]}>\r\n                        <div className={styles[\"userContainer\"]}>\r\n                                <div className={styles[\"circle\"]}>\r\n                                    <p className={styles[\"initials\"]}>{username.charAt(0).toUpperCase()}</p>\r\n                                </div>\r\n                                <p className={styles[\"userName\"]}>{username}</p>\r\n                        </div>\r\n                        <div className={styles[\"homeContainer\"]} onClick={this.handleHomeClick}>\r\n                                <MdHome\r\n                                 style={{\r\n                                     width: 30,\r\n                                     height: 30, \r\n                                     marginLeft: 10\r\n                                 }} \r\n                                />\r\n                                <p className={styles[\"homeText\"]}>Home </p> \r\n                            </div>\r\n                            <div className={styles[\"homeContainer\"]} onClick={this.handleAboutClick}>\r\n                                <MdContentCopy\r\n                                 style={{\r\n                                     width: 30,\r\n                                     height: 30, \r\n                                     marginLeft: 10\r\n                                 }} \r\n                                />\r\n                                <p className={styles[\"homeText\"]}>About Us </p> \r\n                            </div>\r\n                            <div className={styles[\"addProjectContainer\"]} onClick={this.handleCreateProject}>\r\n                                <MdNoteAdd\r\n                                  style={{\r\n                                      width: 30,\r\n                                      height: 30,\r\n                                      marginLeft: 10,\r\n                                      \r\n                                  }}\r\n                                />                                \r\n                                <p className={styles[\"addProjectText\"]}>Add Project</p>\r\n                            </div>\r\n                            <div className={styles[\"logoutContainer\"]} onClick={this.handelLogout}>\r\n                                <ExitToAppOutlinedIcon\r\n                                 style={{\r\n                                    width: 30,\r\n                                    height: 30,\r\n                                    marginLeft: 10,\r\n                                 }} \r\n                                />\r\n                                <p className={styles[\"logoutText\"]}>logout</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                   </div>\r\n                <div className={styles[\"projectsContainer\"]}>\r\n                {\r\n                    !this.props.projects.get(\"projectFetched\") &&\r\n                    !this.props.projects.get(\"projectLoaded\") ?\r\n                    <h3>\r\n                        Loading...\r\n                    </h3>\r\n                    :\r\n                    <div className={styles[\"projectsRow\"]}>\r\n                        {\r\n                         this.renderProjects(this.props.projects.get(\"projects\"))\r\n                        } \r\n                        {\r\n                            this.props.projects.get(\"isCreating\") ?\r\n                                <ProjectBox\r\n                                    isCreatingProject={this.props.isCreatingProject}\r\n                                    isCreating={this.props.projects.get(\"isCreating\")}\r\n                                    createProject={this.props.createProject}\r\n                                    history={this.props.history}\r\n                                    \r\n                                 \r\n                                />\r\n                                :\r\n                                null\r\n                        }\r\n                        {\r\n                            this.props.projects.get(\"showEditBox\")?\r\n                            <EditProjectBox\r\n                                isCreatingProject={this.props.isCreatingProject}\r\n                                isCreating={this.props.projects.get(\"showEditBox\")}\r\n                                project={this.props.projects.get(\"editProject\")}\r\n                                editProject={this.props.editProject}\r\n                                openEditProject={this.props.openEditProject}\r\n                                history={this.props.history} \r\n                            />\r\n                            :\r\n                            null\r\n                        }\r\n                        {\r\n                            this.props.projects.get(\"showProjectContextMenu\")?\r\n                            <ProjectContextMenu \r\n                                xPos={this.props.projects.get(\"contextMenuPosX\")}\r\n                                yPos={this.props.projects.get(\"contextMenuPosY\")}\r\n                                project={this.props.projects.get(\"contextMenuSelectedProject\")}\r\n                                handleDeleteProject={this.handleDeleteProject.bind(this)}\r\n                                openEditProject={this.props.openEditProject}\r\n                                history={this.props.history}\r\n                                shouldCloseProjectContextMenu={this.props.shouldCloseProjectContextMenu}\r\n                                selectProject={this.props.selectProject}\r\n                                />\r\n                            :\r\n                            null \r\n                        }\r\n                    </div>\r\n                }\r\n                </div> \r\n                {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage}/> : null} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import Projects from \"../components/projects/Projects\";\r\n\r\nexport const doesProjectExists = (projects, name) => {\r\n    let exists = false;\r\n    let filterProject  = projects.filter((pro) => pro.get(\"name\") === name);\r\n    if(filterProject.size > 0){\r\n        exists = true\r\n    }else{\r\n        exists = false\r\n    }\r\n    // console.log(exists)\r\n    return exists;    \r\n}","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace fetchActions\r\n */\r\n\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  projectLoaded,\r\n  fetchingProject,\r\n  projectFetch,\r\n  updateDeletedProject,\r\n  updateProjectDetails,\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {fetchLayout} from './fetchActions'\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux';\r\nimport {\r\n  isCreatingProject\r\n} from \"../actions/updateActions\";\r\n\r\nimport {\r\n  doesProjectExists\r\n} from '../util/projects';\r\nimport appConstants from '../constants/appConstants';\r\n\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function selectProject\r\n * @description select a project\r\n * @memberof projectActions\r\n * @returns {Promise}\r\n */\r\nexport const selectProject = (project) => (dispatch) => {\r\n  dispatch(fetchingProject());  \r\n  fetch(urls.get('project_select'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id: project.id\r\n    })\r\n  }).then((response)=> response.json())\r\n  .then((response) => {\r\n    if (response.success) {\r\n      if (response.currentProject && response.currentProject.id) {\r\n        sessionStorage.setItem(appConstants.get(\"PROJECT_ID\"),response.currentProject.id);\r\n      } \r\n      batch(() => {\r\n        dispatch(projectLoaded(project));\r\n        dispatch(fetchLayout()); \r\n      });   \r\n    }      \r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Project not selected'), 'project not fetched ' + time));\r\n  })\r\n};\r\n\r\n/**\r\n * @function createProject\r\n * @description creates a project\r\n * @memberof projectActions\r\n * @returns {Promise}\r\n */\r\nexport const createProject = (name,description) => (dispatch, getState) => {\r\n  if(!doesProjectExists(getState().projects.get(\"projects\"), name)){\r\n    dispatch(fetchingProject());\r\n    fetch(urls.get('project_create'), {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        name: name,\r\n        description: description\r\n      })\r\n    }).then((response)=> response.json())\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        if (response.currentProject && response.currentProject.id) {\r\n          sessionStorage.setItem(appConstants.get(\"PROJECT_ID\"), response.currentProject.id);\r\n        }      \r\n        batch(() => {\r\n          dispatch(isCreatingProject());\r\n          // dispatch(projectLoaded());\r\n          dispatch(projectFetch(response));\r\n          dispatch(fetchLayout()); \r\n          dispatch(successMessage(toast.success(\"Created project successfully\"), \"Created project successfully \" + time));\r\n        });   \r\n      }      \r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Could not create project'), 'Could not create project ' + time));\r\n    })\r\n  }else{\r\n    // dispatch(isCreatingProject());\r\n    dispatch(errorMessage(toast.error('Project already exists'), 'Project already exists ' + time));\r\n  }\r\n \r\n};\r\n\r\n/**\r\n * @function deleteProject\r\n * @description deleted project\r\n * @param {String} projectId\r\n * @returns {Promise}\r\n */\r\nexport const deleteProject = (projectId) => dispatch => {\r\n  return fetch(urls.get(\"delete_project\"), {\r\n    method: \"delete\",\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify([projectId]),\r\n  }) .then((response) => response.json())\r\n  .then((response) => {\r\n    if(response){\r\n      // const projects = getState().collections.get('collections');\r\n      batch(() => {\r\n        dispatch(updateDeletedProject(projectId));\r\n        dispatch(successMessage(toast.success(\"Deleted project successfully\"), \"Deleted project successfully \" + time));\r\n      }) \r\n    }\r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Could not delete project'), 'Could not delete project ' + time));\r\n  })\r\n\r\n}\r\n\r\n/**\r\n * @function editProject\r\n * @description edits project\r\n * @param {Object} editElements \r\n * @returns {Promise}\r\n */\r\nexport const editProject = (editElements) => (dispatch, getState) => {\r\n  if(!doesProjectExists(getState().projects.get(\"projects\"), editElements.projectName)){\r\n    return fetch(urls.get('update_project'), {\r\n      method: \"put\",\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify([editElements])\r\n    }).then((response) => response.json())\r\n    .then((response) => {\r\n      if(response){\r\n        batch(() => {\r\n          dispatch(updateProjectDetails(editElements));\r\n          dispatch(successMessage(toast.success(\"Updated project successfully\"), \"Updated project successfully \" + time));\r\n        })\r\n      }\r\n    }).catch((err)=> {\r\n      dispatch(errorMessage(toast.error('Could not update project'), 'Could not update project ' + time));\r\n    })\r\n  }else{\r\n    dispatch(errorMessage(toast.error('Project already exists'), 'Project already exists ' + time));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import {urls} from '../constants/urls';\r\nimport {\r\n    setCollisionPrevention,\r\n    setCompactionType,\r\n    setAlternativeSize,\r\n} from './updateActions';\r\n\r\n// const time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n// TODO: add notifications/toasts below\r\n\r\nexport const updateCollisionPrevention = (payload) => (dispatch) => {\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"preventCollision\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setCollisionPrevention(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateCompactionType = (payload) => (dispatch) => {\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"collectionCompactionType\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setCompactionType(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateAlternativeSize = (payload) => (dispatch) => {\r\n    console.log(payload);\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"alternativeImageSize\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setAlternativeSize(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Collections from '../components/collections';\r\nimport {\r\n  updateMaxColumns,\r\n  layoutFetch,\r\n  selectCollection,\r\n  deselectCollection,\r\n  deselectAlternative,\r\n  dehoverAlternative,\r\n  clipAlternatives,\r\n  clipCollection,\r\n  clearAltsClipboard,\r\n  clearColsClipboard,\r\n  editNameForCollection,\r\n  isEditingCollectionsName,\r\n  removeFocus,\r\n  showHeader,\r\n  hideHeader,\r\n  saveLayoutObject,\r\n  hideSinkList,\r\n  deselectAllAlternatives,\r\n  deselectAllCollections,\r\n  toggleViewMode,\r\n  toggleAltView,\r\n  alterAlternative,\r\n  toggleSettings,\r\n  toggleSearch,\r\n  searchedCollectionSuccess,\r\n  searchedCollectionFailed,\r\n  emptyMissMatchArray,\r\n  setCollectionDestination,\r\n  setCollectionMode,\r\n  updateCollectionTags,\r\n  hoverAlternative,\r\n  selectAlternative,\r\n  updateLayoutForCollection,\r\n  editCollectionName,\r\n} from '../actions/updateActions';\r\nimport {\r\n  refAlternativesToCollection,\r\n  cloneAlternativesToCollection,  \r\n  cloneEditAlternativesToCollection,\r\n  cutAlternativesFromCollection,\r\n  hoverAlternativeSpecial,\r\n  editAlternatives,\r\n  restoreAlternative,\r\n  removeAlternativesFromCollection,\r\n} from '../actions/alternativeActions';\r\nimport {\r\n  sinkCollection,\r\n  createNewCollection,\r\n  copyWithRefCollection,\r\n  cloneCollection,\r\n  deepCloneCollection,\r\n  cloneAltInNewCollection,\r\n  deleteCollections,\r\n  updateCollection,\r\n} from '../actions/collectionActions';\r\nimport {\r\n  openWebSocketConnection, \r\n  onMessageRecieved,\r\n  sendMessage,\r\n} from '../actions/websocketActions';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from '../actions/notificationActions';\r\nimport {\r\n  selectProject,\r\n  createProject\r\n} from '../actions/projectActions';\r\nimport {\r\n  updateCompactionType,\r\n  updateAlternativeSize,\r\n  updateCollisionPrevention,\r\n} from '../actions/settingActions';\r\nimport {renderIf} from '../util/util';\r\n\r\n/**\r\n * This component connects the Collections component to the state.\r\n */\r\nclass CollectionContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component Collections.\r\n   * The component is only rendered after all details are fetched\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n\r\n    const projectFetched = this.props.projects.get('projectFetched');\r\n    const projectLoaded = this.props.projects.get('projectLoaded')\r\n    const layoutsFetched = this.props.layouts.get('layoutsFetched');\r\n    const alternativesFetched = this.props.alternatives.get('alternativesFetched');\r\n    const collectionsFetched = this.props.collections.get('collectionsFetched');\r\n    return ( \r\n        renderIf(\r\n          projectFetched && layoutsFetched && alternativesFetched && collectionsFetched,\r\n          <Collections {...this.props} />\r\n        )\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * state for the collection container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  alternatives: state.alternatives,\r\n  collections: state.collections,\r\n  user: state.auth,\r\n  layouts: state.layouts,\r\n  projects: state.projects,\r\n  settings: state.settings,\r\n  search: state.search,\r\n  header: state.header,\r\n  websocket: state.websocket,\r\n})\r\n\r\n/**\r\n * interactions for collection container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  /**\r\n   * Dispatches an action to update the store that the websocket is open.\r\n   */\r\n  openWebSocketConnection: () => {\r\n    dispatch(openWebSocketConnection());\r\n  },\r\n\r\n  /**\r\n   * Dispatches an action wheen a message is received.\r\n   * @param {object} ev\r\n   */\r\n  onMessageRecieved: (ev) => {\r\n    dispatch(onMessageRecieved(ev));\r\n  },\r\n\r\n  /**\r\n   * send a message.\r\n   * @param {object} websocket\r\n   * @param {String} data\r\n   */\r\n  sendMessage: (websocket, data) => {\r\n    dispatch(sendMessage(websocket, data));\r\n  },\r\n\r\n  /**\r\n   * selects a project.\r\n   * @param {object} project\r\n   */\r\n  selectProject: (project) =>{\r\n    dispatch(selectProject(project));\r\n  },\r\n\r\n  /**\r\n   * creat a project.\r\n   * @param {string} name\r\n   * @param {string} description\r\n   */\r\n  createProject: (name,description) =>{    \r\n    dispatch(createProject(name,description));\r\n  },\r\n  /**\r\n   * Dispatches an action to increase the maximum number of columns\r\n   * based on the end points of the layouts\r\n   * @param {ImmutableList} layout\r\n   */\r\n  updateMaxColumns: (layouts) => {\r\n    dispatch(updateMaxColumns(layouts));\r\n  },\r\n\r\n  /**\r\n   * dipaches an action to delete an alternative from a collection\r\n   * @param {int} altID: the alternative id to delete\r\n   */\r\n  cutAlternativesFromCollection: (altID) => {\r\n    dispatch(cutAlternativesFromCollection(altID));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy (with reference) an alternative\r\n   * from one collection to another\r\n   * @param {array} alts: alternatives to ref\r\n   * @param {array} cols: destination refs\r\n   */\r\n  refAlternatives: (alts = [], cols = []) => {\r\n    dispatch(refAlternativesToCollection(alts, cols));\r\n  },\r\n  /**\r\n   * dispatches an action to copy (with reference) an alternative\r\n   * from one collection to another\r\n   * @param {string} viewId: the view ID\r\n   * @param {string} refId: the reference ID\r\n   * @param {string} collectionId: the collection ID\r\n   * @param {string} newId: new ID\r\n   */\r\n  cloneAlternatives: (alts = [], cols = []) => {\r\n    dispatch(cloneAlternativesToCollection(alts, cols));\r\n  },\r\n\r\n  cloneEditAlternatives: (alts = [], cols = []) => {\r\n    dispatch(cloneEditAlternativesToCollection(alts, cols))\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to delete a collection\r\n   * @param {string} collectionId: the id of the collection to delete\r\n   */\r\n  deleteCollections: (collectionId) => {\r\n    dispatch(deleteCollections(collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the collection with that ID\r\n   * @param {string} viewId: the view ID\r\n   */\r\n  selectCollection: (viewId) => {\r\n    dispatch(selectCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to deselect the collection with that ID\r\n   * @param {string} viewId: the view ID\r\n   */\r\n  deselectCollection: (viewId) => {\r\n    dispatch(deselectCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy the collection with that ID\r\n   * into the collections clipboard\r\n   * @param {string} viewId\r\n   * @param {string} refId\r\n   * @param {array} altIDs\r\n   * @param {array} layout\r\n   */\r\n  clipCollection: (viewId, refId, altIDs = [], layout = []) => {\r\n    dispatch(clipCollection(viewId, refId, altIDs, layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  selectAlternative: (viewId) => {\r\n    dispatch(selectAlternative(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  deselectAlternative: (viewId) => {\r\n    dispatch(deselectAlternative(viewId));\r\n  },  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  hoverAlternative: (viewId) => {\r\n    dispatch(hoverAlternative(viewId));\r\n  },\r\n\r\n  hoverAlternativeSpecial: (viewId) => {\r\n    dispatch(hoverAlternativeSpecial(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  dehoverAlternative: (viewId) => {\r\n    dispatch(dehoverAlternative(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * to the alternative clipboard\r\n   * @param {string} viewId: the alternative ID\r\n   * @param {string} refId: the alternative ID\r\n   * @param {string} collectionId: the collection ID\r\n   */\r\n  clipAlternatives: (viewId, refId, collectionId) => {\r\n    dispatch(clipAlternatives(viewId, refId, collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to update the grid layout of the collections\r\n   * @param {ImmutableList} layout\r\n   */\r\n  updateCollectionLayout: (layout) => {\r\n    dispatch(layoutFetch(layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to save the layout of the object\r\n   * to the layout clipboard\r\n   * @param {ImmutableList} layout\r\n   */\r\n  saveLayoutObject: (layout) => {\r\n    dispatch(saveLayoutObject(layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} collectionName: name of the collection\r\n   */\r\n  createNewCollection: (x, y, w, h, altids, collectionName) => {\r\n    dispatch(createNewCollection(x, y, w, h, altids, collectionName));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection as a ref\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} refId: ref id for the collection to be created\r\n   * @param {string} viewId: view id for the collection to be created\r\n   */\r\n  copyWithRefCollection: (viewId) => {\r\n    dispatch(copyWithRefCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection and copy the selected alterenatives in it\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} refId: ref id for the collection to be created\r\n   * @param {string} viewIds: view id for the alternatives to be created\r\n   */\r\n  cloneAltInNewCollection: (viewIds) => {\r\n    dispatch(cloneAltInNewCollection(viewIds));\r\n  },\r\n\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {int} x: the x coordinate where the collection should be created\r\n   * @param {int} y: the x coordinate where the collection should be created\r\n   * @param {int} w: width of the collection that should be created\r\n   * @param {int} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {int} refId: ref id for the collection to be created\r\n   * @param {int} viewId: view id for the collection to be created\r\n   */\r\n  cloneCollection: (viewId) => {\r\n    dispatch(cloneCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {int} x: the x coordinate where the collection should be created\r\n   * @param {int} y: the x coordinate where the collection should be created\r\n   * @param {int} w: width of the collection that should be created\r\n   * @param {int} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {int} refId: ref id for the collection to be created\r\n   * @param {int} viewId: view id for the collection to be created\r\n   */\r\n  deepCloneCollection: (viewId) => {\r\n    dispatch(deepCloneCollection(viewId));\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to clear the alternatives clipboard\r\n  */\r\n  clearAltsClipboard: () => {\r\n    dispatch(clearAltsClipboard());\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to clear the collections clipboard\r\n  */\r\n  clearColsClipboard: () => {\r\n    dispatch(clearColsClipboard());\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to edit the name of a collection\r\n   * @param {string} collectionId: the ID of the collection\r\n   * @param {string} collectionName: the new name of the collection\r\n   */\r\n  editNameForCollection: (collectionId, collectionName) => {\r\n    dispatch(editNameForCollection(collectionId, collectionName));\r\n  },\r\n\r\n  isEditingCollectionsName: (refId) => {\r\n    dispatch(isEditingCollectionsName(refId));\r\n  }, \r\n  \r\n  removeFocus: () => {\r\n    dispatch(removeFocus())\r\n  },\r\n\r\n\r\n  editCollectionName: (name) => {\r\n    dispatch(editCollectionName(name))\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to show the header\r\n   * @param {number} headerX: x coordinate\r\n   * @param {number} headerY: y coordinate\r\n   */\r\n  showHeader: (headerX, headerY) => {\r\n    dispatch(showHeader(headerX, headerY));\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to hide the header\r\n   */\r\n  hideHeader: () => {\r\n    dispatch(hideHeader());\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to sink collection with ID\r\n   * @param {string} collectionId: the ID of the collection\r\n   */\r\n  sinkCollection: (collectionId) => {\r\n    dispatch(sinkCollection(collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to hide the sink list\r\n   */\r\n  hideSinkList: () => {\r\n    dispatch(hideSinkList());\r\n  },\r\n\r\n   /**\r\n   * dispaches an action to deselect all alternatives\r\n   */\r\n  deselectAllAlternatives: () => {\r\n    dispatch(deselectAllAlternatives());\r\n  },\r\n\r\n   /**\r\n   * dispaches an action to deselect all collections\r\n   */\r\n  deselectAllCollections: () => {\r\n    dispatch(deselectAllCollections());\r\n  },\r\n\r\n  /**\r\n   * toggles collection view mode\r\n   * @param {string} collectionId\r\n   * @param {number} viewType\r\n   */\r\n  toggleViewMode: (collectionId, viewType) => {\r\n    dispatch(toggleViewMode(collectionId, viewType));\r\n  },\r\n\r\n  /**\r\n   * toggles alternative 3D view\r\n   * @param {string} alternativeID\r\n   */\r\n  toggleAltView: (alternativeID) => {\r\n    dispatch(toggleAltView(alternativeID));\r\n  },\r\n\r\n  alterAlternative: (alternativeID, parameter, newValue) => {\r\n    dispatch(alterAlternative(alternativeID, parameter, newValue));\r\n  },\r\n\r\n   editAlternatives: (editedAlternatives) => {\r\n    dispatch(editAlternatives(editedAlternatives));\r\n  },\r\n\r\n  restoreAlternative: (viewId) => {\r\n    dispatch(restoreAlternative(viewId));\r\n  },\r\n\r\n  updateCollection: (collection) => {\r\n    dispatch(updateCollection(collection));\r\n  },\r\n\r\n  removeAlternativesFromCollection: (alts = [] ) => {\r\n    dispatch(removeAlternativesFromCollection(alts));\r\n  },\r\n\r\n\r\n  setAlternativeSize: (dimensions = []) => {\r\n    dispatch(updateAlternativeSize(dimensions));\r\n  },\r\n\r\n  setCompactionType: (type) => {\r\n    dispatch(updateCompactionType(type));\r\n  },\r\n\r\n  setCollisionPrevention: (payload) => {\r\n    dispatch(updateCollisionPrevention(payload));\r\n  },\r\n\r\n  toggleSettings: () => {\r\n    dispatch(toggleSettings());\r\n  },\r\n\r\n  toggleSearch: () => {\r\n    dispatch(toggleSearch());\r\n  },\r\n\r\n  /**\r\n   * sets validation to false\r\n   * \r\n   */\r\n  searchedCollectionSuccess: () => {\r\n    dispatch(searchedCollectionSuccess());\r\n  },\r\n\r\n  /**\r\n   *  sets validation to true\r\n   */\r\n  searchedCollectionFailed: (namesMissMatch) => {\r\n    dispatch(searchedCollectionFailed(namesMissMatch));\r\n  },\r\n\r\n  emptyMissMatchArray: () => {\r\n    dispatch(emptyMissMatchArray());\r\n  },\r\n\r\n  setCollectionDestination: (collection, destinations) => {\r\n    dispatch(setCollectionDestination(collection, destinations))\r\n  },\r\n\r\n  setCollectionMode: (collection, mode) => {\r\n    dispatch(setCollectionMode(collection, mode))\r\n  },\r\n\r\n  updateCollectionTags: (collectionId, tags) => {\r\n    dispatch(updateCollectionTags(collectionId, tags))\r\n  },\r\n\r\n  updateLayoutForCollection: (layoutID) => {\r\n    dispatch(updateLayoutForCollection(layoutID));\r\n  },\r\n\r\n  successMessage: (id, message) => {\r\n    dispatch(successMessage(id, message));\r\n  },\r\n\r\n  warningMessage: (id, message) => {\r\n    dispatch(warningMessage(id, message));\r\n  },\r\n\r\n  errorMessage: (id, message) => {\r\n    dispatch(errorMessage(id, message));\r\n  },\r\n  \r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CollectionContainer);\r\n","import React, {PureComponent} from 'react';\r\nimport appStyles from './App.module.scss';\r\nimport CollectionContainer from '../../containers/CollectionContainer';\r\nimport appConstants from '../../constants/appConstants';\r\nimport '../../../node_modules/react-grid-layout/css/styles.css';\r\nimport '../../../node_modules/react-resizable/css/styles.css';\r\n\r\n/**\r\n * main app entry point\r\n */\r\nexport default class App extends PureComponent {\r\n\r\n  /**\r\n   * fetch layout when component mounts\r\n   * this triggers a chain reaction and fetches\r\n   * collections and alternatives as well\r\n   */\r\n\r\n  \r\n  componentDidMount() {\r\n    const userLoggedIn = localStorage.getItem(appConstants.get(\"USER_ID\"));\r\n    const projectID = sessionStorage.getItem(appConstants.get(\"PROJECT_ID\"));\r\n    const projectFetched = this.props.projects.get('projectFetched');\r\n\r\n    if (userLoggedIn && projectID && !projectFetched ) {\r\n      this.props.fetchProject();\r\n    }   \r\n  }\r\n\r\n\r\n  /**\r\n   * The component should render collections container, which\r\n   * contains everything else in the app\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={appStyles.App}>\r\n\r\n        <div className={appStyles.canvas}>\r\n          <div className={appStyles.container}>\r\n\r\n            <CollectionContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport App from '../components/App/App';\r\nimport {\r\n  fetchAlternatives,\r\n  fetchCollections,\r\n  fetchLayout,\r\n  fetchProject\r\n} from '../actions/fetchActions';\r\n\r\n/**\r\n * This component connects the App component to the state.\r\n * TODO: It is a temporary component and needs to be deleted after refactoring.\r\n */\r\nclass AppContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component of App.\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <App {...this.props} styles={null} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchAlternatives: () => {\r\n    dispatch(fetchAlternatives());\r\n  },\r\n\r\n  fetchCollections: () => {\r\n    dispatch(fetchCollections());\r\n  },\r\n\r\n  fetchLayout: () => {\r\n    dispatch(fetchLayout());\r\n  },\r\n\r\n  fetchProject: () => {\r\n    dispatch(fetchProject());\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import {urls} from '../constants/urls';\r\nimport appConstants from '../constants/appConstants';\r\nimport { \r\n    userFetch,\r\n    userFetchFailed,\r\n    logoutUser,\r\n} from \"./updateActions\";\r\nimport {\r\n\r\n    errorMessage,\r\n  } from './notificationActions';\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux';\r\nimport { dispatch } from 'd3';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function register\r\n * @description register a new user\r\n * @memberof userActions\r\n * @returns {Promise}\r\n */\r\nexport const register = (username,password,  passwordConfirmation) => (dispatch) => {\r\n    fetch(urls.get('user_register'), {\r\n        method: \"POST\",\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password\r\n        })        \r\n    }).then((response) => response.json())\r\n    .then((response)=> {\r\n        if (response.success) {\r\n            if (response.user && response.user.id) {\r\n                localStorage.setItem(appConstants.get(\"USER_ID\"),response.user.id);\r\n                batch(() => {\r\n                    dispatch(userFetch(response.user));\r\n                });  \r\n            }\r\n        }else{\r\n            batch(() => {\r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Register failed'), response.message + \" \" + time));\r\n            });       \r\n        }\r\n    }).catch((err) => {\r\n        batch(() => {\r\n            dispatch(userFetchFailed());\r\n            dispatch(errorMessage(toast.error('Login failed'), 'Login was not successful ' + time));\r\n        });   \r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} username \r\n * @param {String} password \r\n */\r\nexport const login = (username, password, history) => (dispatch) =>{\r\n    fetch(urls.get('user_login'), {\r\n        method: \"POST\",\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            username:username,\r\n            password:password\r\n        })\r\n    }).then((response) => response.json())\r\n    .then((response) => {\r\n        if (response.success) {\r\n            if (response.user && response.user.id) {\r\n                localStorage.setItem(appConstants.get(\"USER_ID\"),response.user.id);\r\n                batch(() => {\r\n                  dispatch(userFetch(response.user));\r\n                  history.push(\"/projects\");\r\n                }); \r\n              }        \r\n        }else {\r\n            batch(() => {        \r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Login failed'), response.message + \" \" + time));\r\n              }); \r\n        }\r\n    }).catch((err) => {\r\n        batch(() => {\r\n            dispatch(userFetchFailed());\r\n            dispatch(errorMessage(toast.error('Login failed'), 'Login was not successfull ' + time));\r\n          });     \r\n    })\r\n}\r\n\r\n\r\n/**\r\n * @function logout\r\n * @description log out of the account\r\n * @memberof userActions\r\n * \r\n */\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(appConstants.get(\"USER_ID\"));\r\n    sessionStorage.removeItem(appConstants.get(\"PROJECT_ID\"));\r\n    dispatch(logoutUser());\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} id \r\n */\r\nexport const fetchUser = () => (dispatch) => {\r\n    fetch(urls.get('user_fetch'))\r\n    .then((response)=> response.json())\r\n    .then((response) => {\r\n        if (response.success) {\r\n            if (response.user && response.user.id) {\r\n                localStorage.setItem(appConstants.get(\"USER_ID\"),response.user.id);\r\n                batch(() => {\r\n                  dispatch(userFetch(response.user));\r\n                }); \r\n              }        \r\n        }else {\r\n            batch(() => {        \r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Login failed'), response.message + \" \" + time));\r\n              }); \r\n        }\r\n    }).catch((err) => {\r\n        batch(() => {\r\n            dispatch(userFetchFailed());\r\n            dispatch(errorMessage(toast.error('Login failed'), 'Login was not successfull ' + time));\r\n          });     \r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProjects} from '../actions/fetchActions';\r\nimport {logout, fetchUser} from \"../actions/userActions\";\r\nimport Projects from '../components/projects/Projects';\r\nimport { \r\n    selectProject,\r\n    createProject,\r\n    deleteProject,\r\n    editProject,\r\n}  from '../actions/projectActions';\r\nimport { \r\n  isCreatingProject,\r\n  openEditProject,\r\n  showProjectMenu,\r\n  shouldCloseProjectContextMenu,\r\n} from \"../actions/updateActions\";\r\n\r\n/**\r\n * This component connects the Project component to the state\r\n */\r\nclass ProjectContainer extends Component {\r\n/**\r\n * The component renders the presentational component Projects\r\n * @return {ReactComponent}\r\n */\r\n  \r\n  \r\n componentDidMount() {\r\n   // we need to the api call to ftech user data\r\n     this.props.fetchUser();\r\n   \r\n\r\n }\r\n\r\n    \r\n  render() {\r\n      return(\r\n          <div>\r\n              <Projects\r\n                 {...this.props}\r\n              />\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.projects,\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  /**\r\n   * selects a project.\r\n   * @param {object} project\r\n   */\r\n  selectProject: (project) =>{\r\n    dispatch(selectProject(project));\r\n  },\r\n\r\n  /**\r\n   * Dispatch action createProject\r\n   * @param {String} name \r\n   * @param {String} description \r\n   */\r\n  createProject: (name, description) =>{    \r\n    dispatch(createProject(name, description));\r\n  },\r\n\r\n  /**\r\n   * Dispatch action is create a project\r\n   */\r\n  isCreatingProject: () => {\r\n      dispatch(isCreatingProject());\r\n  },\r\n\r\n  logout: () => {\r\n    dispatch(logout())\r\n  },\r\n\r\n  getUserProjects: () => {\r\n    dispatch(getUserProjects());\r\n  },\r\n\r\n  fetchUser: () => {\r\n    dispatch(fetchUser())\r\n  },\r\n\r\n  deleteProject: (projectId) => {\r\n    dispatch(deleteProject(projectId));\r\n  },\r\n\r\n\r\n  openEditProject: (project) => {\r\n    dispatch(openEditProject(project))\r\n  },\r\n\r\n  editProject: (editElements) => {\r\n    dispatch(editProject(editElements));\r\n\r\n  },\r\n\r\n  showProjectMenu: (xPos, yPos, project) => {\r\n    dispatch(showProjectMenu(xPos, yPos, project));\r\n  },\r\n\r\n  shouldCloseProjectContextMenu: () => {\r\n    dispatch(shouldCloseProjectContextMenu());\r\n  }\r\n\r\n\r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectContainer)","import navigationItems from '..'\r\nimport navigationItem from './naigationItem'\r\n\r\nexport default navigationItem;","import React from 'react'; \r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './navigationItem.module.scss'; \r\n\r\n\r\nconst navigationItem = (props) => (\r\n    <li\r\n     className={styles[\"navigationItem\"]}\r\n    >\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact} \r\n            activeClassName={styles['active']}\r\n        >\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n)\r\n\r\n\r\nexport default navigationItem;","import navigationItems from './navigationItems';\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport styles from './navigationItems.module.scss';\r\nimport NavigationItem from './navigationItem';\r\n\r\nconst navigationItems = (props) => {\r\n    return(\r\n        <ul\r\n        className={styles['navigationItems']}\r\n    >\r\n        \r\n         <NavigationItem\r\n            link={\"/\"}\r\n            exact\r\n        >\r\n            Home\r\n        </NavigationItem>\r\n        {\r\n            props.isLoggedIn ?\r\n            <NavigationItem \r\n             link={\"/projects\"}\r\n            >\r\n                Projects\r\n            </NavigationItem>\r\n            :\r\n            null\r\n        }\r\n\r\n        {\r\n            !props.isLoggedIn ?\r\n            <NavigationItem\r\n            link={\"/signup\"}\r\n           >\r\n               Join Us\r\n           </NavigationItem>\r\n           \r\n           :\r\n           null\r\n        }\r\n\r\n        {\r\n            !props.isLoggedIn ?\r\n             <NavigationItem\r\n             link={\"/login\"}\r\n            >\r\n                Login\r\n            </NavigationItem>\r\n            :\r\n            null\r\n        }\r\n        {\r\n            props.user ?\r\n            <li\r\n             className={styles[\"name\"]}\r\n            >\r\n                {props.user}\r\n            </li>\r\n            :\r\n            null\r\n        }\r\n       \r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems;","import Navigation from './navigation';\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport styles from './navigation.module.scss';\r\nimport NavigationItems from './navigationItems';\r\nimport logoSrc from '../../resources/DStaWhite.png'; \r\n\r\nconst Navigation = (props) => (\r\n    <header\r\n     className={styles[\"navigation\"]}\r\n    >\r\n        <div\r\n         className={styles['logo']}\r\n         onClick={props.clicked}    \r\n        >\r\n            <div className={styles.logoContainer}>\r\n                <img\r\n                 src={logoSrc}\r\n                 alt=\"DStar logo\"\r\n                 className={styles.logoStyle}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        <nav\r\n         className={styles['nav']}\r\n        >\r\n            <NavigationItems isLoggedIn={props.isLoggedIn} user={props.user}/>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Navigation;","import React, {PureComponent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Navigation from '../navigation';\r\nimport styles from './landingPage.module.scss';\r\nimport image from '../../resources/collections.png'\r\nimport appConstants from '../../constants/appConstants';\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#176287\",\r\n        width: 208,\r\n        height: 89,\r\n        color: \"#fff\",\r\n        fontFamily: \"Poppins\",\r\n        fontSize: 20,\r\n      '&:hover': {\r\n        backgroundColor: '#0c3c46',\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n\r\n/**\r\n * @class LandingPage \r\n * @extends React.PureComponent\r\n * @description Static landingPage\r\n */\r\n class LandingPage extends PureComponent {\r\n\r\n     /**\r\n      *  @constructor\r\n      *  @param {object} props - component props\r\n      */\r\n      constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n            isLoggedIn: false,\r\n          } \r\n      }\r\n\r\n      componentDidMount() {\r\n        const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n        if (userId && userId != null) {\r\n          this.setState({\r\n            isLoggedIn: true,\r\n          });\r\n        }    \r\n      }\r\n\r\n      handleJoinButtonClick = () => {\r\n          if (this.state.isLoggedIn) {        \r\n              this.props.history.push(\"/projects\")\r\n          } else {\r\n              this.props.history.push(\"/signup\")    \r\n          }\r\n      }\r\n\r\n      handleLoginClick = () => {\r\n\r\n        if (this.state.isLoggedIn){\r\n            window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\" , '_blank', \"docs\");      \r\n        } else {\r\n            this.props.history.push(\"/login\");    \r\n        }\r\n\r\n      }\r\n\r\n      handleLogoClicked = () => {\r\n        this.props.history.push(\"/\")\r\n\r\n      }\r\n\r\n      render() {\r\n          let buttonStyle;\r\n\r\n          if (window.innerWidth >= 1400){\r\n              buttonStyle = {\r\n              width: 208,\r\n              height: 89,\r\n              }\r\n           } else if (window.innerWidth < 1400) {\r\n               buttonStyle = {\r\n                width: 180,\r\n                height: 89,\r\n               }\r\n           }\r\n\r\n          let joinNow = \"join Now\"\r\n          let projects = \"Projects\"\r\n          let about =\"About\"\r\n          let login = \"login\"\r\n\r\n          return(\r\n              <div className={styles[\"mainContainer\"]}>\r\n                  <Navigation\r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                    clicked={this.handleLogoClicked} \r\n                    user={this.props.user.get(\"user\").get(\"username\")}\r\n                  />\r\n                  <main className={styles[\"content\"]}>\r\n                      <div className={styles[\"imageContainer\"]}>\r\n                          <div className={styles[\"image\"]}>\r\n                              <img src={image} alt=\"collections image\" \r\n                                  className={styles[\"image\"]}\r\n                                />\r\n                          </div>\r\n                      </div>\r\n                      <div className={styles[\"titlesContainer\"]}>\r\n                          <div className={styles[\"titles\"]}>\r\n                               <h2 className={styles[\"mainTitle\"]}>\r\n                                Explore Your Design Ideas\r\n                              </h2>\r\n                              <p className={styles[\"subTitle\"]}> \r\n                                Generate & Review Unlimited Alternatives   \r\n                              </p> \r\n                          </div>\r\n                          <div className={styles[\"buttonsContainer\"]}>\r\n                          <Tooltip title=\"Join\" interactive>\r\n                             <ColorButton\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                onClick={this.handleJoinButtonClick} \r\n                                style={buttonStyle}>\r\n                                 {\r\n                                     this.state.isLoggedIn ?\r\n                                     projects\r\n                                     :\r\n                                     joinNow\r\n                                 }\r\n                                </ColorButton>\r\n                            </Tooltip>\r\n                             <ColorButton\r\n                                onClick={this.handleLoginClick}  \r\n                                style={buttonStyle} \r\n                                size=\"large\">\r\n                                    {\r\n                                        this.state.isLoggedIn?\r\n                                        about \r\n                                        :\r\n                                        login\r\n                                    }\r\n                                \r\n                                </ColorButton>\r\n                         </div>\r\n                      </div>\r\n                  </main>\r\n              </div>\r\n          )\r\n      }\r\n\r\n }\r\n\r\n export default LandingPage;","import LandingPage from './LandingPage';\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'; \r\nimport LandingPage from '../components/landingPage';\r\nimport {logout, fetchUser} from \"../actions/userActions\";\r\n\r\nclass LandingPageContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n    render(){\r\n    \r\n        return(\r\n            <LandingPage\r\n             {...this.props} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchUser: () => {\r\n        dispatch(fetchUser())\r\n      },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPageContainer);","import Auth from \"./Auth\";\r\n\r\nexport default Auth;","import React, {PureComponent}  from 'react';\r\nimport styles from './auth.module.scss';\r\nimport Navigation from '../navigation';\r\nimport {toast} from 'react-toastify';\r\nimport NotificationContainer from '../../containers/NotificationContainer';\r\n\r\n\r\n\r\n\r\nclass Auth extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n  \r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            passwordConfirmation: \"\",\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(!prevProps.auth.get(\"userFetched\") && this.props.auth.get(\"userFetched\")){\r\n            this.props.history.push(\"/projects\");\r\n        }   \r\n    }\r\n    \r\n    onUsernameChange = (e) =>{\r\n        this.setState({\r\n            username:  e.target.value,  \r\n        });\r\n      }\r\n    \r\n    onPasswordChange = (e) =>{\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n\r\n    onPasswordConfirmationChange = (e) => {\r\n        this.setState({\r\n            passwordConfirmation: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.username !== \"\" && this.state.password !== \"\" &&  this.state.passwordConfirmation !== \"\" && (this.state.password === this.state.passwordConfirmation)) {\r\n            this.props.register(this.state.username, this.state.password, this.state.passwordConfirmation);\r\n        }else if(this.state.username === null || this.state.username === \"\"){\r\n            this.props.errorMessage(toast.error(\"Name can't be empty\"), \" Name can't be empty \" + 0)\r\n        }else if(this.state.password === null || this.state.password === \"\"){\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        }else if(this.state.passwordConfirmation === null || this.state.passwordConfirmation === \"\"){\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        }else if(this.state.password !== this.state.passwordConfirmation){\r\n            this.props.errorMessage(toast.error(\"Password does not match Password Confirmation\"), \"Password does not match Password Confirmation \" + 0)\r\n        }\r\n    }\r\n\r\n    handleLogoClicked = () => {\r\n        this.props.history.push(\"/\")\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className={styles[\"mainContainer\"]}>\r\n                <Navigation\r\n                    clicked={this.handleLogoClicked} \r\n                />\r\n                <main className={styles[\"content\"]}>\r\n                <NotificationContainer />\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <div className={styles[\"titleBox\"]}>\r\n                            <p className={styles[\"title\"]}>\r\n                                Join Now.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"authContainer\"]}>\r\n                        <div className={styles[\"signupBox\"]}>\r\n                            <form onSubmit={this.handleRegister}>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Name:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.onUsernameChange}\r\n                                        value={this.state.username}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"name\"\r\n                                        \r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password:\r\n                                    </p>\r\n                                    <input\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       onChange={this.onPasswordChange}\r\n                                       value={this.state.password}\r\n                                       className={styles[\"textInput\"]}\r\n                                       autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password Confirmation:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        name=\"password-confirmation\"\r\n                                        onChange={this.onPasswordConfirmationChange}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className={styles[\"buttonContainer\"]}>\r\n                                    <input\r\n                                        type=\"submit\" \r\n                                        value=\"Join Now\"\r\n                                        className={styles[\"submitInput\"]}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n\r\n","import Login from './Login';\r\n\r\nexport default Login;","import React, {PureComponent} from 'react';\r\nimport styles from './login.module.scss';\r\nimport Navigation from '../../navigation';\r\nimport NotificationContainer from '../../../containers/NotificationContainer';\r\nimport {toast} from 'react-toastify';\r\n\r\nclass Login extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password:  \"\",\r\n          }\r\n    }\r\n\r\n    // componentDidMount()\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // console.log(\"update\")\r\n        // if(!prevProps.auth.get(\"userFetched\") && this.props.auth.get(\"userFetched\")) {\r\n        //     this.props.history.push(\"/projects\");\r\n        // }   \r\n    }\r\n\r\n\r\n    onUsernameChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value,  \r\n        });\r\n      }\r\n    \r\n    onPasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n          });\r\n      }\r\n\r\n    handelLogin = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.username !== \"\" && this.state.password !== \"\") {\r\n            this.props.login(this.state.username, this.state.password, this.props.history);\r\n        }else if(this.state.username === null || this.state.username === \"\"){\r\n            this.props.errorMessage(toast.error(\"Name can't be empty\"), \" Name can't be empty \" + 0)\r\n        }else if(this.state.password === null || this.state.password === \"\"){\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        }\r\n      }\r\n\r\n      handleLogoClicked = () => {\r\n        this.props.history.push(\"/\")\r\n      }\r\n\r\n\r\n   \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className={styles[\"mainContainer\"]}>\r\n                <Navigation\r\n                    clicked={this.handleLogoClicked} \r\n \r\n                />\r\n                <main className={styles[\"content\"]}>\r\n                <NotificationContainer />\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <div className={styles[\"titleBox\"]}>\r\n                            <p className={styles[\"title\"]}>\r\n                                Login.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"authContainer\"]}>\r\n                        <div className={styles[\"signupBox\"]}>\r\n                            <form onSubmit={this.handelLogin}>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Name:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.onUsernameChange}\r\n                                        value={this.state.username}\r\n                                        className={styles[\"textInput\"]}\r\n                                        // autofocus=\"true\"\r\n                                        autoComplete=\"name\"\r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        onChange={this.onPasswordChange}\r\n                                        value={this.state.password}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className={styles[\"buttonContainer\"]}>\r\n                                    <input\r\n                                        type=\"submit\" \r\n                                        value=\"Login\"\r\n                                        className={styles[\"submitInput\"]}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {register, logout, login, fetchUser} from '../actions/userActions';\r\nimport Auth from '../components/Auth';\r\nimport Login from '../components/Auth/login';\r\nimport {\r\n    errorMessage,\r\n  } from '../actions/notificationActions';\r\n\r\n\r\nclass AuthContainer extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                {\r\n                    this.props.location.pathname === \"/login\" ?\r\n                    <Login {...this.props} />\r\n                    :\r\n                    <Auth  {...this.props } />\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    register: (username, password, passwordConfirmation) => {\r\n        dispatch(register(username, password, passwordConfirmation));\r\n    },\r\n\r\n    logout: () => {\r\n        dispatch(logout());\r\n    },\r\n\r\n    login: (username, password, history) => {\r\n        dispatch(login(username, password, history));\r\n    },\r\n\r\n    errorMessage: (id, message) => {\r\n        dispatch(errorMessage(id, message))\r\n    },\r\n\r\n    fetchUser: () => {\r\n        dispatch(fetchUser());\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer);","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport AppContainer from '../containers/AppContainer';\r\nimport ProjectContainer from '../containers/ProjectContainer';\r\nimport LandingPageContainer from '../containers/LandingPageContainer';\r\nimport AuthContainer from '../containers/AuthContainer';\r\nimport appConstants from '../constants/appConstants';\r\n\r\n\r\n/**\r\n * This component contains all the routing details.\r\n */\r\nclass AppRouter extends React.PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isLoggedIn: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n\r\n    // TODO: add more checks here\r\n    if (userId && userId !== null) {\r\n\r\n      this.setState({\r\n        isLoggedIn: true,\r\n      })\r\n    }    \r\n  }\r\n  /**\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    // console.log(this.state.isLoggedIn, ' is loggedIn')\r\n    // this.props.history.push for redirecting to another page\r\n    // this.props.history.push('/twitter');\r\n\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/projects\" component={ProjectContainer} />\r\n        <Route path=\"/project\" component={AppContainer} />\r\n        <Route path=\"/signup\" component={AuthContainer} />\r\n        <Route path=\"/login\" component={AuthContainer} />\r\n        <Route exact path=\"/\" component={LandingPageContainer} />\r\n      </Switch>\r\n    )\r\n\r\n    if (this.props.auth.get(\"userFetched\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/projects\" component={ProjectContainer} />\r\n          <Route path=\"/project\" component={AppContainer} />\r\n          <Route exact path=\"/\" component={LandingPageContainer} />\r\n      </Switch>)\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        {routes}\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AppRouter);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './store';\r\nimport AppContainer from './containers/AppContainer';\r\nimport AppRouter from './router/AppRouter'\r\nimport './index.css';\r\nimport appConstants from './constants/appConstants';\r\n\r\n\r\n// Add a custom event keyed as `optimizedResize`. This event lies in stark\r\n// contrast to `resize`. `resize` can happen in some time spanning less than\r\n// one frame 60 frames per second, and may result in resource hog. This new\r\n// event only fires on the next animation frame, and upon a successful resize.\r\n(function() {\r\n  var throttle = function(type, name, obj) {\r\n    obj = obj || window;\r\n    var running = false;\r\n    var func = function() {\r\n      if (running) { return; }\r\n      running = true;\r\n      requestAnimationFrame(function() {\r\n        obj.dispatchEvent(new CustomEvent(name));\r\n        running = false;\r\n      });\r\n    };\r\n    obj.addEventListener(type, func);\r\n  };\r\n\r\n  /* init - you can init any event */\r\n  throttle(\"resize\", \"optimizedResize\");\r\n})();\r\n\r\n\r\n// setting userId and projectId for all the requests \r\nconst oldFetch = fetch;\r\nfetch = (url , data) =>{\r\n\r\n  const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n  const projectId = sessionStorage.getItem(appConstants.get('PROJECT_ID'));\r\n  const defualtData = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  if (!data){\r\n    data = defualtData;\r\n  }\r\n\r\n  data.headers.userid = userId;\r\n  data.headers.projectid = projectId;\r\n  \r\n  return oldFetch(url,data);\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"login_mainContainer__2ftiI\",\"content\":\"login_content__3M0Jt\",\"authContainer\":\"login_authContainer__4MJkX\",\"titleContainer\":\"login_titleContainer__2jWjK\",\"signupBox\":\"login_signupBox__1PVdU\",\"inputContainer\":\"login_inputContainer__G2f8_\",\"buttonContainer\":\"login_buttonContainer__34ri8\",\"inputStyle\":\"login_inputStyle__3lT9w\",\"textInput\":\"login_textInput__U9FHG\",\"submitInput\":\"login_submitInput__2lG_8\",\"titleBox\":\"login_titleBox__1e0sH\",\"title\":\"login_title__1sS8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"history-pane\":\"notBar_history-pane___J1JY\",\"success-pane\":\"notBar_success-pane__3Ex3j\",\"warning-pane\":\"notBar_warning-pane__3W2_p\",\"error-pane\":\"notBar_error-pane__1MhU7\",\"title-bar\":\"notBar_title-bar__2a5j2\",\"closeIcon\":\"notBar_closeIcon__1Nb9e\",\"hr-history-pane\":\"notBar_hr-history-pane__2__r1\",\"each-toast\":\"notBar_each-toast__39f8p\"};"],"sourceRoot":""}