{"version":3,"sources":["components/notBar/notBar.module.scss","components/landingPage/landingPage.module.scss","components/dStarMenu/DStarMenu.module.scss","components/header/header.module.scss","components/alternatives/alternative/alternative.module.scss","components/searchPanel/searchPanel.module.scss","components/projects/projectContextMenu/projectContextMenu.module.scss","components/settingsPanel/settingsPanel.module.scss","components/navigation/navigation.module.scss","components/listView/listView.module.scss","components/infoBar/infoBar.module.scss","components/collectionMenu/collectionMenu.module.scss","components/App/App.module.scss","components/sinkList/sinkList.module.scss","components/navigation/navigationItems/navigationItems.module.scss","components/collections/collection/collection.module.scss","components/tagBar/tagBar.module.scss","components/projects/projectBox/projectBox.module.scss","components/navigation/navigationItems/navigationItem/navigationItem.module.scss","components/collections/collections.module.scss","components/alternatives/alternatives.module.scss","components/loader/loader.module.scss","components/parallel/parallel.module.scss","components/Auth/auth.module.scss","components/projects/projects.module.scss","resources/DStarBlackLogo.png","constants/appConstants.js","constants/collectionObject.js","constants/strings.js","util/collections.js","reducers/collections.js","constants/alternativeObject.js","constants/layout.js","constants/urls.js","util/alternatives.js","util/util.js","reducers/alternatives.js","util/layouts.js","reducers/layout.js","reducers/projects.js","reducers/user.js","reducers/websocket.js","reducers/header.js","reducers/notifications.js","reducers/settings.js","util/queries.js","reducers/queries.js","reducers/scales.js","reducers/search.js","reducers/auth.js","reducers/app.js","store.js","components/scene/Scene.jsx","components/alternatives/alternative/index.js","components/alternatives/alternative/Alternative.jsx","components/alternatives/Alternatives.jsx","containers/AlternativeContainer.jsx","components/messageBox/MessageBox.jsx","components/icons/Deselct.js","components/icons/Help.js","components/icons/Log.js","components/icons/Sink.js","components/icons/Collection.js","components/icons/Brush.js","components/icons/CartesianProduct.js","components/icons/Coords.js","components/icons/DirectEditRef.js","components/icons/EditRef.js","components/icons/EditClone.js","components/icons/ParameterSpectra.js","components/icons/Pareto.js","components/icons/Perturbation.js","components/icons/Settings.js","components/icons/Sketch.js","components/icons/SpectralCartesianProduct.js","components/icons/Tags.js","components/parallel/parallelMenu/ParallelMenu.jsx","util/parallel.js","components/parallel/Parallel.jsx","actions/notificationActions.js","actions/parallelActions.js","actions/updateActions.js","actions/alternativeActions.js","containers/ParallelContainer.jsx","components/listView/ListView.jsx","containers/ListContainer.jsx","components/infoBar/InfoBar.jsx","components/tagBar/TagBar.jsx","components/collections/collection/Collection.jsx","components/collections/collection/index.js","components/settingsPanel/SettingsPanel.jsx","components/searchPanel/SearchPanel.jsx","components/sinkList/SinkList.jsx","components/header/index.js","components/header/Header.jsx","actions/collectionActions.js","containers/HeaderContainer.jsx","components/notBar/index.js","components/notBar/NotBar.jsx","containers/NotificationContainer.jsx","components/dStarMenu/index.js","components/dStarMenu/DStarMenu.jsx","components/collectionMenu/index.js","components/collectionMenu/CollectionMenu.jsx","components/collections/Collections.jsx","components/collections/index.js","actions/websocketActions.js","actions/fetchActions.js","util/projects.js","actions/projectActions.js","actions/userActions.js","actions/settingActions.js","containers/CollectionContainer.jsx","components/App/App.js","containers/AppContainer.jsx","resources/empty.png","components/projectImage/index.js","components/projectImage/ProjectImage.jsx","components/projects/project/index.js","components/projects/project/Project.jsx","components/projects/projectContextMenu/index.js","components/projects/projectContextMenu/ProjectContextMenu.jsx","components/projects/projectBox/ProjectBox.jsx","components/projects/editProjectBox/index.js","components/projects/editProjectBox/EditProjectBox.jsx","components/loader/index.js","components/loader/Loader.jsx","components/projects/Projects.jsx","containers/ProjectContainer.jsx","components/navigation/navigationItems/navigationItem/index.js","components/navigation/navigationItems/navigationItem/naigationItem.jsx","components/navigation/navigationItems/index.js","components/navigation/navigationItems/navigationItems.jsx","resources/DStaWhite.png","components/navigation/index.js","components/navigation/navigation.jsx","resources/collections.png","components/landingPage/index.js","components/landingPage/LandingPage.jsx","containers/LandingPageContainer.jsx","components/Auth/index.js","components/Auth/Auth.jsx","components/Auth/login/index.js","components/Auth/login/Login.jsx","containers/AuthContainer.jsx","router/AppRouter.jsx","index.js","components/parallel/parallelMenu/parallelMenu.module.scss","components/Auth/login/login.module.scss","components/projects/project/project.module.scss","components/projectImage/projectImage.module.scss"],"names":["module","exports","Immutable","Map","FETCH_ALTERNATIVES","FETCH_COLLECTIONS","FETCH_LAYOUT","FETCH_PROJECT","FETCHING_PROJECT","OPEN_WEB_SOCKET_CONNECTION","SET_NEW_WEBSOCKET","ADD_NEW_ALTERNATIVES","CREATE_COLLECTION","UPDATE_ALTERNATIVE","UPDATE_MAX_COLUMNS","ADD_ALTERNATIVE_TO_COLLEECTION","DELETE_COLLECTION","TOGGLE_DRAGGING","SELECT_COLLECTION","DESELECT_COLLECTION","SELECT_ALTERNATIVE","DESELECT_ALTERNATIVE","HOVER_ALTERNATIVE","DEHOVER_ALTERNATIVE","DEHOVER_ALL_ALTERNATIVES","INSERT_LAYOUT","CLIP_ALTERNATIVE","CLIP_COLLECTION","CLEAR_ALTS_CLIPBOARD","CLEAR_COLS_CLIPBOARD","CHANGE_COLLECTION_NAME","SHOW_HEADER","HIDE_HEADER","SHOW_SINK_LIST","HIDE_SINK_LIST","TOGGLE_SINK","SAVE_LAYOUT","HANDLE_SUCCESS","HANDLE_WARNING","HANDLE_ERROR","DESELECT_ALL_ALTERNATIVES","DESELECT_ALL_COLLECTIONS","TOGGLE_HISTORY","TOGGLE_VIEW_MODE","TOGGLE_ALT_VIEW","ALTER_ALTERNATIVE","SELECT_PATH","DESELECT_PATH","ADD_DATA_FIELD","REMOVE_DATA_FIELD","UPDATE_PATH","FETCH_KEY_SETS","FETCH_VALUE_BANDS","FETCH_SETTINGS","ORDER_ALTERNATIVES","ADD_ALTERNATIVE_TO_COLLECTION","ORDER_COLLECTION_DIMENSIONS","SET_LOADING_STATE","REMOVE_ALTERNATIVE","TOGGLE_SETTINGS","SET_ALTERNATIVE_SIZE","SET_COMPACTION_TYPE","GATHER_ALL_COLLECTIONS","SET_COLLISION_PREVENTION","SET_VALUE_BANDS","SHOULD_COMMIT_QUERY","ADD_QUERY","REMOVE_QUERY","CLEAR_ALL_QUERIES","SET_COLLECTION_DESTINATION","SET_COLLECTION_MODE","UPDATE_COLLECTION_TAGS","ADD_BRUSH","REMOVE_BRUSH","CLEAR_ALL_BRUSHES","TOGGLE_SEARCH","SEARCHED_COLLECTION","SEARCH_COLLECTION_FALID","EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH","UPDATE_LAYOUTS","HANDLE_EDIT_NAME_START","EDIT_COLLECTION_NAME","REMOVE_FOCUS","SELECT_PROJECT","CREATING_PROJECT","FETCH_USER","NOT_FETCH_USER","PROJECT_ID","USER_ID","LOGOUT_USER","DELETE_PROJECT","PROJECT_EDIT_BOX","UPDATE_PROJECT","SHOW_PROJECT_CONTEXT_MENU","HIDE_PROJECT_CONTEXT_MENU","RESET_STATE_ON_BACK_ARROW","EDITTING","UPDATE_SHOW_DSTAR_MENU","UPDATE_SHOW_COLLECTION_MENU","SET_SORT_PARAMS","GET_COLLECTION_ALTERNATIVES_LAYOUT","ID","REF","NAME","ALTERNATIVE_IDS","UNTITLED_COLLECTION_NAME","findCollectionsFromName","memoize","collections","collectionName","find","collection","get","collectionObjectConstants","args","values","join","findCollectionsFromID","collectionId","fetchCollectionsNotID","filter","getCollectionName","stringConstants","getAlternativesInCollection","alternatives","alternative","includes","calculateWidth","cols","margin","cellDim","buffer","getCoordinates","rows","rowHeight","x","y","Math","round","removeViewName","length","letterIndex","indexOf","slice","sliceViewFromName","name","initialState","fromJS","collectionsFetched","clippedCollections","showHelp","shouldRemoveFocus","altSize","IMAGE","MARGIN","CELL_DIM","BUFFER","ROW_HEIGHT","DEFAULT_ALT_HEIGHT","DEFAULT_ALT_WIDTH","DEFAULT_MAX_COLUMNS","LAYOUT_UPDATE_MESSAGE_TYPE","webProtocol","host","process","REACT_APP_host","urls","getHost","alternatives_fetch","collections_fetch","layout_fetch","project_fetch","project_select","project_create","delete_project","update_project","user_register","user_login","user_fetch","settings_fetch","cartesian_product","parameter_spectra","sampling","spectral_cartesian_product","sensitivity_analysis","websocketURL","collectionCopyWithRef","newCollection","alternativeCopy","alternativeClone","collectionClone","collectionDeepClone","cloneAltInNewCollection","alternativeEdit","alternativeCloneEdit","alternativesRemove","alternativeRestore","alternative_sketching","deleteCollection","sinkCollection","findAlternativesFromID","alternativeID","findAlternativeRelativesFromID","refId","alt","getAlternativeImageURL","alternativeObjectConstant","fetchAlternativesNotID","altsSelected","altsInCollection","alternativesID","altID","generateLayoutForAlternatives","altIDs","w","layoutConstants","h","index","map","i","layout","getAlternativeIDs","renderIf","condition","Component1","Component2","removeFieldFromDatum","datum","field","addFieldToDatum","source","shapeAlternative","inputs","outputs","parallelData","params","Object","assign","viewId","collectionRefId","collectionViewId","gltf","image","altView","isSelected","isHovered","isLoading","shapeCollection","col","collectionNameView","altsid","isSinked","tags","viewType","dimOrder","keySets","isEditingName","destinations","sortParams","layoutsForAlts","currentMode","isAltering","isEditing","isLiveEditing","isCloning","isToggling","isSampling","isSketching","isBrushing","isCPing","isPSing","isSAing","arrayEquals","a","b","Array","isArray","every","val","alternativesFetched","clippedAlternatives","getLayoutForCollection","layouts","getLayoutForCollectionFromClipboard","deleteLayoutForCollection","compactCollectionLayouts","gridLayout","toJS","j","layoutClipboard","layoutsFetched","maxColumns","projects","projectFetched","projectLoaded","isCreating","showContextMenu","showEditBox","editProject","selectedProject","contextMenuPosX","contextMenuPosY","showProjectContextMenu","contextMenuSelectedProject","editing","user","user_fechted","connected","websocket","headerShow","listShow","headerX","headerY","showDStarMenu","showCollectionList","successes","warnings","errors","showHistory","showSettings","alternativeImageSize","collectionCompactionType","preventCollision","fetchQueriesNotID","queries","queryId","query","fetchBrushesNotID","brushes","brushId","brush","valueBands","showSearch","showValidation","missMatchCollectionNames","userFetched","userLoggedIn","combineReducers","newCollectionsList","state","action","type","appConstants","set","payload","update","push","setIn","findIndex","clear","newAlts","alternativeId","collectionInputs","collectionOutputs","mode","mergeDeepWith","prev","next","key","parameter","newValue","delete","width","db_loaded","project","indexOfListToUpdate","projectId","projectName","projectDescription","xPos","yPos","header","notifications","settings","scales","dim","end","search","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","OrbitControls","require","THREE","Scene","initializeOrbits","controls","rotateSpeed","zoomSpeed","panSpeed","initializeCamera","object","scene","children","boundingBox","setFromObject","size","getSize","maxDim","max","z","fov","camera","PI","cameraZ","abs","tan","position","minZ","min","cameraToFarEdge","far","updateProjectionMatrix","animate","frameId","requestAnimationFrame","renderer","setPixelRatio","devicePixelRatio","gammaOutput","gammaFactor","shadowMap","enabled","render","handleControls","e","stopPropagation","this","background","add","antialias","domElement","setSize","props","height","toneMapping","mount","appendChild","setAttribute","customStyle","loader","GLTFLoader","load","traverse","child","geometry","center","material","color","emissive","shading","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","onresize","innerWidth","innerHeight","aspect","cancelAnimationFrame","removeChild","onMouseDownCapture","className","ref","PureComponent","Alternative","transform","left","top","wasDragged","toggleAltView","preventDefault","handleDoubleClick","restoreAlternative","handleHover","hasEntered","hoverAlternative","dehoverAlternative","handleDeleteClick","removeAlternativesFromCollection","handleDragStart","move","element","document","getElementById","style","topState","replace","leftState","elementTop","elementLeft","parseInt","setState","handleMouseDown","el","target","addEventListener","handleMouseUp","removeEventListener","deselectAlternative","selectAlternative","situation","selectedAlts","selectStyleName","classnames","styles","altWidth","layoutForAlt","altHeight","altDimensionStyle","imgDimensionStyle","id","onDoubleClick","onMouseEnter","debounce","bind","onMouseLeave","onMouseDown","onMouseUp","CircularProgress","marginTop","marginLeft","onDragStart","src","Alternatives","renderAlternatives","alternativesInCollection","data-grid","l","isResizable","onLayoutChange","layoutForCollection","numColumns","floor","alternativesLayout","altsId","handleAltsLayout","prevProps","item","compactType","containerPadding","useCSSTransforms","AlternativeContainer","Component","connect","MessageBox","handleOk","confirmAction","open","handleCancel","handleDeleteCancel","pressedOk","pressedcancel","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","message","DialogActions","Button","onClick","autoFocus","SvgDeselct","xmlns","viewBox","cy","cx","fill","stroke","strokeWidth","strokeMiterlimit","strokeOpacity","r","title","d","SvgHelp","lineHeight","InkscapeFontSpecification","fontVariantLigatures","fontVariantCaps","fontVariantNumeric","fontVariantEastAsian","fontWeight","fontSize","fontFamily","SvgLog","SvgSink","refX","refY","orient","overflow","fillRule","strokeLinejoin","markerEnd","SvgCollection","SvgBrush","strokeLinecap","SvgCartesianProduct","SvgCoords","strokeDasharray","SvgDirectEditRef","SvgEditRef","SvgEditClone","SvgParameterSpectra","SvgPareto","SvgPerturbation","SvgSettings","SvgSketch","SvgSpectralCartesianProduct","SvgTags","colorCurrentCommand","ParallelMenu","handleClick","group","showEdit","showGenerate","showUnlock","handleUnlockclick","lockAspectRatio","handleLockClick","samplingCheckboxChanged","createOnlyInTheRange","checked","searchButtonToggle","editButtonToggle","generateButtonToggle","settingsButtonToggle","searchButtonStyle","backgroundColor","editButtonStyle","generateButtonStyle","isSCPing","settingsButtonStyle","brushButtonStyle","border","borderColor","sketchButtonStyle","alterButtonStyle","sampleButtonStyle","liveEditButtonStyle","cloneButtonStyle","toggleButtonStyle","cpButtonStyle","parameterSpectraButtonStyle","sensitivityAnalysisButtonStyle","spectralCartesiaProductButtonStyle","options","defaultOption","Provider","value","Brush","handleBrushAxisClick","Pareto","handleSampleAxisClick","onChange","placeholder","Sketch","handleSketchAlternativeClick","EditRef","toggleAlterMode","EditClone","handleCloneEditAlternativeClick","DirectEditRef","toggleLiveEditMode","CartesianProduct","handleCartesianProductClick","SpectralCartesianProduct","handleSpectralCartesianProductClick","Perturbation","handleSensitivityAnalysisClick","onSensitivityAnalysisDeltaChange","ParameterSpectra","handleParameterSpectraClick","onParameterSpectraSelect","onParameterSpectraDeltaChange","Coords","selectParameter","create2DArray","arr","countUnique","iterable","Set","groupBy","list","keyGetter","forEach","pairwise","result","func","colorWhite","colorUnselected","colorHovered","colorSelected","colorSelectedRelated","colorSketch","colorHoveredRelated","colorHoveredSelected","colorSketchPath","colorBrush","colorBrushed","colorBrushSelected","colorQuerySelected","colorQueryNotSelected","colorSelectedCoordinate","opacity0","opacityMid1","opacityMid2","opacity1","Parallel","componentDidMount","drawChart","inputParams","outputParams","dimensions","sketchData","componentDidUpdate","queryEngine","advMode","current","memo","temp","total","sketchPoints","brushSelections","selectedDimensions","commitChanges","changeEditingState","submitChanges","findNonEmptyBrushes","findNonEmptyOutputBrushes","findNonEmptyInputBrushes","commitDimensions","commitValueBands","commitBrushSelections","commitSketch","reOrderDefaultOptions","updateBrushes","alreadySelected","toggleAdjustInputBrushes","adjustInputBrushes","samples","dragging","data","idMap","selectedPaths","shiftKeyDown","colName","exec","fullCollectionName","colId","brushEngine","d3","domain","range","nice","yDomain","padding","svg","svgEl","myTextField","select","on","keyCode","isNaN","getAttribute","myTooltip","myPath","selectAll","attr","path","myAxis","entries","enter","append","pageX","pageY","text","each","call","scale","minMax","childNodes","node","focus","parentNode","property","originalColor","originalFont","myBrushTextN","myBrushTextS","myClickAxis","myText","then","dimension","catch","err","console","log","keys","invert","updatePoints","splice","sketchPoint","sketchPath","sPath","exit","remove","p","v","transition","g","duration","brushExtent","noBrush","outputBrushes","brushEngineMultipair","multiPairs","mpairs","mpair","canBeAdded","strRes","split","joinHandles","queryFilter","boundaries","inputBrushes","inputBrush","newExtent","brushIndex","extent","brushStart","sourceEvent","brushOn","currentBrush","selection","toFixed","brushEnd","thisBrush","undefined","tempOrder","br","shiftKey","deleteBrush","polyCount","from","rogueBrush","addNewBrush","count","drawPolygons","stopListening","deletedBrush","nextBrush","brushesOnDimension","obj","lastBrushID","lastBrush","elementBefore","insert","isInput","Promise","resolve","reject","startIndex","queryResult","pathStyle","boundData","resColor","some","ungroupedPairs","uniqueDims","pair","substring","groupedPairs","pairs","selected","unselected","relative","nonEmptyBrushes","pairBrushes","ps","nonEmptyDimensions","grouped","brushesByDimension","nonEmptyDimensionPairs","reduce","array","anotherArr","dims","concat","handles","dataPoints","sort","myStr","dp","toString","raise","drawBrush","prevDimensions","subject","JSON","stringify","dragAxis","scaleCoefficient","original","origin","delta","nodes","liveData","liveIds","idOfNode","parentElement","editedAlts","dragPoints","removeBrush","addBrush","alterAlternative","editAlternatives","infoRef","innerHTML","setValueBands","shouldWarn","warningMessage","sketch","currentDimensions","defaultOptions","label","orderCollectionDimensions","selectPath","deselectAllAlternatives","cloneBases","cloneEditAlternatives","toggleParameter","removedValue","newValueBands","contains","removeDataField","isLocked","addDataField","backupValueBands","toggleSketchMode","toggleCPMode","togglePSMode","toggleSCPMode","toggleSAMode","toggleCloneMode","setCollectionMode","toggleBrushMode","committedQueries","clearAllBrushes","toggleSampleMode","createAlternative","selectedIds","createNewAlternative","cartesianProduct","selectedAltsInCollection","newCartesianProduct","parameterSpectra","newParameterSpectra","paramaterSpectraAltNum","paramaterSpectraDelta","spectralCartesianProduct","newSpectralCartesianProduct","sensitivityAnalysis","newSensitivityAnalysis","sensitivityAnalysisDelta","handleConfirmQuery","operation","createNewCollection","setTimeout","addQuery","toast","info","autoClose","rtl","destination","cloneAlternatives","display","altsInCollectionBefore","altsInCollectionAfter","hoverAlternativeSpecial","handleMouseEnter","handleMouseLeave","handleKeyEvents","eventType","toastId","isActive","success","results","selectedAlt","brushResult","sampleNum","newSampling","handleVisibility","menuHidden","handleOpen","menuOpen","lockRatio","locked","unlockAspectRatio","brushCount","paths","selectedRelatives","opacity","refid","axes","random","clickAxes","points","sketchPaths","brushTextN","brushTextS","inputBoxes","customStyles","container","base","zIndex","isFocused","dropdownIndicator","control","borderWidth","onKeyDown","onKeyUp","tabIndex","defaultValue","isMulti","isClearable","closeMenuOnSelect","newInputs","newOutputs","newDimensions","successMessage","errorMessage","toggleHistory","time","Date","getHours","getMinutes","getSeconds","collectionsFetch","layoutFetch","projectFetch","userFetchFailed","fetchingProject","keySetsFetch","valueBandsFetch","addAlternative","addAlternativeToCollection","createCollection","altIds","deselectCollection","clipCollection","dehoverAllAlternative","addLayoutObject","editNameForCollection","hideHeader","hideSinkList","toggleSink","setLoadingState","gatherAllCollections","toggleSettings","toggleSearch","setCollectionDestination","isCreatingProject","userFetch","resetCollectionState","showDstarMenu","shouldShowCollectionList","cutAlternativesFromCollection","dispatch","getState","otherCollections","oldAlts","filteredAlts","updatedCollection","newCollections","error","alts","refIds","fetch","method","headers","body","response","json","batch","warning","refAlternativesToCollection","toastyVar","closeOnClick","pauseOnHover","progress","cloneAlternativesToCollection","sourceProjectId","cloneEditAlternativesToCollection","ParallelContainer","editedAlternatives","newId","viewIds","ids","alternativeIDs","alt_ids","psnum","psdelta","sadelta","collectionID","collection_id","createInRange","fromCollection","queryString","selections","removeQuery","clearAllQueries","ListView","handleRowClick","selectedRow","columns","sorting","paging","showTitle","maxBodyHeight","headerStyle","rowStyle","rowData","components","Row","onRowClick","detailPanel","icon","tooltip","ListContainer","InfoBar","TagBar","tagOptions","tag","Collection","cmpEl","getBoundingClientRect","loadSortParamsForCollection","collectionSortParamsArray","unshift","sortingOptions","prevState","snapshot","shouldFocus","removeFocus","destinationRef","loadTags","toggleTagging","isTagging","toggleEditViewForCollection","event","isEditingCollectionsName","handleCloseClick","deleteCollections","handleEmptyClick","selectedAlternatives","handleMinimizeClick","toggleViewMode","saveLayoutObject","handleSelect","selectCollection","handleHovsClick","handleRefsClick","handleUnselectClick","handleBlur","nameExists","isMultipleInputs","updateMultipleNames","updateCollection","nameHasTheSameValue","handleTaggingSelect","actionMeta","colToUpdate","updateCollectionTags","handleViewSelect","handleDestinationSelect","handleSelectedSortOptions","setSortParams","handleFocus","handleKeyPress","handleDrag","isDragging","handleDragClick","handleTextChange","changeMultipleName","handleAspectRatio","updateAspectRatio","handleUnlockAspectRatio","updateUnlockAspectRatio","handleSortAlternatives","sortedArray","outputsArray","inputsArray","firstAlt","secondAlt","firstStatment","secondStatment","direction","reArrangeCollectionLayout","updateAlternativeLayoutForCollection","handleArrowClick","copyOfParams","copyOfStateParams","handleItemClick","React","createRef","destinationOptions","collectionHeight","selectedCols","dragStyleName","customStyles2","multiValueLabel","flexDirection","borderRight","valueContainer","overflowY","maxHeight","multiValueRemove","loadOptions","pointer2","onDragEnd","paddingLeft","pointer","onFocus","onBlur","onKeyPress","MultiValueLabel","arrowIconsContainer","arrowIconStyle","variant","sendMessage","tagEdit","menuPosition","SettingsPanel","handleSizeChange","setAlternativeSize","handleTypeChange","colType","setCompactionType","handlePreventionChange","colPrev","setCollisionPrevention","handleSettingsClose","settingsOpen","handleSizeClose","selectBox1Open","handleSizeOpen","handleTypeClose","selectBox2Open","handleTypeOpen","handlePreventionClose","selectBox3Open","handlePreventionOpen","selectProject","handleCreate","newProjectName","createProject","newProjectDescription","onProjectChange","onProjectNameChange","onProjectDescriptionChange","copyToClipboard","textField","execCommand","FormControl","InputLabel","Select","labelId","onOpen","MenuItem","htmlFor","readOnly","SearchPanel","handleSearchClose","searchOpen","handleSearchText","searchText","handleSubmit","handleSearch","searchedCollectionFailed","removeValidation","searchedCollectionSuccess","emptyMissMatchArray","onSubmit","TextField","helperText","SinkList","clientX","clientY","newPoint","collectionLayout","layoutObject","restoreCollection","Header","handleSinkClick","showSinkList","handleHistoryClick","handleUnselectAllClick","deselectAllCollections","handleSettingsClick","handleSearchClick","handleHelpClick","positionOfContextMenu","backgroundColorStyle","default","Deselct","Log","Sink","Settings","Help","dest","status","layoutUpdate","newLayout","HeaderContainer","listX","listY","NotBar","hideHistoryPane","errorMessages","warningMessages","successMessages","NotificationContainer","DStarMenu","shouldShowDstarMenu","handleHomePage","history","handleProjectPage","username","charAt","toUpperCase","CollectionMenu","handleGatherAll","Collections","renderCollection","isDraggable","refWebSocket","altKey","clearAltsClipboard","selectedAlternative","clipAlternatives","selectedAltsIds","localStorage","setItem","sessionStorage","getItem","handleAlternativeDelete","refAlternatives","clipBoardData","parse","ctrlKey","clearColsClipboard","selectedCollection","selectedCollections","handleCollectionDelete","copyCollections","copyWithRefCollection","cloneCollections","cloneCollection","deepCloneCollection","colRelList","selectedCol","findCollectionRelativesFromID","colRel","altRelList","altRel","ev","handleContextMenu","showHeader","getRefId","filterdCollections","cloneAlternativesFromTaggedCollections","tagName","arrayOfStrings","foundAll","namesMissMatch","toLowerCase","updateLayoutForCollection","layoutId","collectionsWithRef","selectedElement","refElement","checkNameExists","unquieCollections","counter","compareNumber","collectionSubname","numberAsString","integer","refIdsCollection","namesExists","collectionItem","filteredCollection","exists","showWarningMessage","handleNameExists","filterCollection","subName","handleNameCounter","newArray","updateMaxColumns","matchNumOfColums","scrollX","editingNames","editName","numberOfAltarnatives","collectionsDivStyle","minWidth","minHeight","mainRef","onContextMenu","onResizeStop","throttle","onDragStop","draggableHandle","url","onMessage","onMessageRecieved","openWebSocketConnection","Websocket","manageNewAlternative","coll","_id","updatedCollections","minW","minH","moved","static","addRefs","editNewAlternative","newAlternative","addNewAlternative","fetchLayout","fetchAlternatives","fetchCollections","alternateIDs","correctedCollections","collectionsWithoutLayout","filterCollectionsFromLayouts","hasViewName","shouldAddNameView","currentName","cnt","dateA","dateB","getNameIndex","addCollectionNameView","modifiedCollections","doesProjectExists","pro","currentProject","description","rhinoFile","grasshopperFile","formData","FormData","getProjectByName","deleteProject","updateDeletedProject","editElements","updateProjectDetails","register","password","passwordConfirmation","login","logout","removeItem","fetchUser","updateCollisionPrevention","updateCompactionType","updateAlternativeSize","CollectionContainer","refResult","ws","readyState","userId","updateCollectionLayout","altids","sortCollection","nameWithoutView","altsToBeCloned","refs","editCollectionName","layoutID","App","projectID","fetchProject","appStyles","canvas","AppContainer","projectIndex","proj","ProjectImage","images","imageStyle","Project","handleSelectedProject","handleDelete","handleEdit","openEditProject","onRightClick","handelShowProjectInformation","userName","imageAlts","ProjectContextMenu","handleOpenProject","shouldCloseProjectContextMenu","handleEditProject","handleDeleteProject","ProjectBox","rhinoSelectedFile","grasshopperSelectedFile","rhinoFileChangeHandler","files","grasshopperFileChangeHandler","fullWidth","InputLabelProps","projStyles","accept","EditProjectBox","handleUpdate","Loader","Projects","handelLogout","showProjectMenu","renderProjects","handelOpenEditProject","handleCreateProject","handleHomeClick","handleAboutClick","getUserProjects","listen","newLocation","pathname","location","ProjectContainer","navigationItem","to","link","exact","activeClassName","navigationItems","isLoggedIn","logoutClicked","Navigation","clicked","logoContainer","logoSrc","logoStyle","LandingPage","handleJoinButtonClick","handleLoginClick","handleLogoClicked","handleUserClick","ColorButton","withStyles","theme","root","LandingPageContainer","Auth","onUsernameChange","onPasswordChange","onPasswordConfirmationChange","handleRegister","autoComplete","Login","handelLogin","AuthContainer","AppRouter","routes","component","draggable","closeButton","running","dispatchEvent","CustomEvent","oldFetch","userid","projectid","ReactDOM","store","createStore","app","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.1da419e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"history-pane\":\"notBar_history-pane___J1JY\",\"success-pane\":\"notBar_success-pane__3Ex3j\",\"warning-pane\":\"notBar_warning-pane__3W2_p\",\"error-pane\":\"notBar_error-pane__1MhU7\",\"title-bar\":\"notBar_title-bar__2a5j2\",\"closeIcon\":\"notBar_closeIcon__1Nb9e\",\"hr-history-pane\":\"notBar_hr-history-pane__2__r1\",\"each-toast\":\"notBar_each-toast__39f8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"landingPage_mainContainer__1-HFz\",\"content\":\"landingPage_content__1hjNX\",\"imageContainer\":\"landingPage_imageContainer__36-WM\",\"titlesContainer\":\"landingPage_titlesContainer__1mvIe\",\"titles\":\"landingPage_titles__3xnE0\",\"subTitle\":\"landingPage_subTitle__33KxK\",\"mainTitle\":\"landingPage_mainTitle__2tEkN\",\"buttonsContainer\":\"landingPage_buttonsContainer__2JAQH\",\"buttonsStyle\":\"landingPage_buttonsStyle__10jNx\",\"image\":\"landingPage_image__3m7te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelContent\":\"DStarMenu_panelContent__2hMGJ\",\"userItem\":\"DStarMenu_userItem__l4kZL\",\"circle\":\"DStarMenu_circle__2CS3r\",\"initials\":\"DStarMenu_initials__3kwCT\",\"projectTitle\":\"DStarMenu_projectTitle__3D99U\",\"projectName\":\"DStarMenu_projectName__2pMc0\",\"homeLink\":\"DStarMenu_homeLink__HW1dR\",\"projectLink\":\"DStarMenu_projectLink__2G-Cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"right-click-menu\":\"header_right-click-menu__2S5co\",\"right-click-icon\":\"header_right-click-icon__37C9J\",\"settingsIcon\":\"header_settingsIcon__2obQn\",\"logoStyle\":\"header_logoStyle__1NLRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"alternative\":\"alternative_alternative__3Zy-8\",\"alternative-selected\":\"alternative_alternative-selected___Q7JJ\",\"alternative-selected-related\":\"alternative_alternative-selected-related__3wbOR\",\"alternative-hovered\":\"alternative_alternative-hovered__oSW0r\",\"alternative-hovered-related\":\"alternative_alternative-hovered-related__2W0bk\",\"alternative-hovered-selected\":\"alternative_alternative-hovered-selected__1aOBB\",\"alternative-image\":\"alternative_alternative-image__3KXF5\",\"alternative-toggle1\":\"alternative_alternative-toggle1__-DgHH\",\"alternative-toggle2\":\"alternative_alternative-toggle2__3c9Qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel-textField\":\"searchPanel_panel-textField__1_qbA\",\"panel-buttons-container\":\"searchPanel_panel-buttons-container__2xQeD\",\"panel-content\":\"searchPanel_panel-content__9j_IE\",\"panel-form\":\"searchPanel_panel-form__3OuE6\",\"action-button\":\"searchPanel_action-button__3SF9F\",\"panel-button\":\"searchPanel_panel-button__1UyXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contextMenuContainer\":\"projectContextMenu_contextMenuContainer___nezp\",\"openContainer\":\"projectContextMenu_openContainer__1o2ck\",\"editContainer\":\"projectContextMenu_editContainer__3McaB\",\"deleteContainer\":\"projectContextMenu_deleteContainer__2xqRS\",\"listItemText\":\"projectContextMenu_listItemText__31Fso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"panel-content\":\"settingsPanel_panel-content__3RBWA\",\"projectLabel\":\"settingsPanel_projectLabel__CNhJT\",\"projectTitle\":\"settingsPanel_projectTitle__3XhgY\",\"inputLabel\":\"settingsPanel_inputLabel__16XdQ\",\"textColor\":\"settingsPanel_textColor__2B2Rk\",\"containerForProjectAndName\":\"settingsPanel_containerForProjectAndName__Aq05i\",\"button\":\"settingsPanel_button__2WW_8\",\"copyInput\":\"settingsPanel_copyInput__3hUU3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__hqASe\",\"logo\":\"navigation_logo__29Y6Y\",\"nav\":\"navigation_nav__hAati\",\"logoContainer\":\"navigation_logoContainer__1ENn0\",\"logoStyle\":\"navigation_logoStyle__3pxZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"list-container\":\"listView_list-container__jCeoU\",\"alternative-image\":\"listView_alternative-image__3mYX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"infobar\":\"infoBar_infobar__3pdfJ\",\"infopar-a\":\"infoBar_infopar-a__1uRfG\",\"infopar-s\":\"infoBar_infopar-s__-eoDB\",\"infopar-r\":\"infoBar_infopar-r__2YaiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelContent\":\"collectionMenu_panelContent__27I8x\",\"reagraneCollection\":\"collectionMenu_reagraneCollection__1qhzs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"App\":\"App_App__uQezi\",\"canvas\":\"App_canvas__Kxp-h\",\"container\":\"App_container__1L_HV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"sink-list-menu\":\"sinkList_sink-list-menu__2RzZT\",\"hr-sinkList\":\"sinkList_hr-sinkList__1AF4p\",\"items-list\":\"sinkList_items-list__274Oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItems\":\"navigationItems_navigationItems__1u2op\",\"name\":\"navigationItems_name__b0lHH\",\"logoutItem\":\"navigationItems_logoutItem__1MMtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"collection\":\"collection_collection__1tUl8\",\"collection-selected\":\"collection_collection-selected__1OrOQ\",\"collection-related\":\"collection_collection-related__1-3Q0\",\"collection-name-div\":\"collection_collection-name-div__3AYzm\",\"collection-title-div\":\"collection_collection-title-div__2oFFN\",\"collection-input-div\":\"collection_collection-input-div__1fQbi\",\"textInputStyle\":\"collection_textInputStyle__3YorQ\",\"collection-titleView-div\":\"collection_collection-titleView-div__1JDFz\",\"collection-name\":\"collection_collection-name__1V28t\",\"collection-name-view\":\"collection_collection-name-view__3b7wU\",\"tagEdit\":\"collection_tagEdit__1Y-kx\",\"arrow\":\"collection_arrow__140E2\",\"down\":\"collection_down__1UOD-\",\"up\":\"collection_up__Up4CA\",\"toggle-button\":\"collection_toggle-button__pwTPt\",\"icon-handle\":\"collection_icon-handle__17Uy-\",\"pointer\":\"collection_pointer__3MDXc\",\"pointer2\":\"collection_pointer2__1bJnG\",\"start-drag\":\"collection_start-drag__1PNHd\",\"dragging\":\"collection_dragging__36Z3L\",\"multiValueLabel\":\"collection_multiValueLabel__1LNPT\",\"arrowIconsContainer\":\"collection_arrowIconsContainer__2VwdR\",\"arrowIconStyle\":\"collection_arrowIconStyle__rB-wG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"tagBar\":\"tagBar_tagBar__1H-mN\",\"tagBar-span\":\"tagBar_tagBar-span__37aJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-input\":\"projectBox_file-input__12dau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationItem\":\"navigationItem_navigationItem__2VEr0\",\"name\":\"navigationItem_name__1nIdw\",\"active\":\"navigationItem_active__2-FdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"gridLayout\":\"collections_gridLayout__3NxWr\",\"container\":\"collections_container__1xvP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alternative-container\":\"alternatives_alternative-container__1QqUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__1NnqQ\",\"load5\":\"loader_load5__YxR7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"button-div\":\"parallel_button-div__ZpGrv\",\"button\":\"parallel_button__32awR\",\"selectStyle\":\"parallel_selectStyle__1sART\",\"inputBox\":\"parallel_inputBox__v5_xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"auth_mainContainer__3b9bM\",\"content\":\"auth_content__16JSt\",\"authContainer\":\"auth_authContainer__3Yq8n\",\"titleContainer\":\"auth_titleContainer__1JVWQ\",\"signupBox\":\"auth_signupBox__f8KWQ\",\"formStyle\":\"auth_formStyle__26AA5\",\"inputContainer\":\"auth_inputContainer__21FZB\",\"buttonContainer\":\"auth_buttonContainer__1F7aB\",\"inputStyle\":\"auth_inputStyle__ycit0\",\"textInput\":\"auth_textInput__2wVm5\",\"submitInput\":\"auth_submitInput__1JQUc\",\"titleBox\":\"auth_titleBox__26H6x\",\"title\":\"auth_title__2Ic2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainsContainer\":\"projects_mainsContainer__1SnSK\",\"controlsContainer\":\"projects_controlsContainer__1D-R2\",\"controlsContent\":\"projects_controlsContent__1ESIx\",\"initials\":\"projects_initials__1tHW1\",\"userContainer\":\"projects_userContainer__2LtrM\",\"userName\":\"projects_userName__3GORV\",\"circle\":\"projects_circle__2Ge2Z\",\"projectsContainer\":\"projects_projectsContainer__1jTl5\",\"projectsRow\":\"projects_projectsRow__3Id5q\",\"addProjectContainer\":\"projects_addProjectContainer__3IT8-\",\"plusIcon\":\"projects_plusIcon__2STRv\",\"logoutContainer\":\"projects_logoutContainer__1bsg7\",\"logoutText\":\"projects_logoutText__1nLNj\",\"addProjectText\":\"projects_addProjectText__2tbx9\",\"homeContainer\":\"projects_homeContainer__gTYkx\",\"homeText\":\"projects_homeText__ZHYU2\"};","export default __webpack_public_path__ + \"static/media/DStarBlackLogo.e06b7ae5.png\";","import Immutable from 'immutable';\r\n\r\n/**\r\n * all the action constants are present in this file.\r\n */\r\nexport default new Immutable.Map({\r\n  FETCH_ALTERNATIVES: 'FETCH_ALTERNATIVES',\r\n  FETCH_COLLECTIONS: 'FETCH_COLLECTIONS',\r\n  FETCH_LAYOUT: 'FETCH_LAYOUT',\r\n  FETCH_PROJECT: 'FETCH_PROJECT',\r\n  FETCHING_PROJECT: 'FETCHING_PROJECT',\r\n  OPEN_WEB_SOCKET_CONNECTION: 'OPEN_WEB_SOCKET_CONNECTION',\r\n  SET_NEW_WEBSOCKET: 'SET_NEW_WEBSOCKET',\r\n  ADD_NEW_ALTERNATIVES: 'ADD_NEW_ALTERNATIVES',\r\n  CREATE_COLLECTION: 'CREATE_COLLECTION',\r\n  UPDATE_ALTERNATIVE: 'UPDATE_ALTERNATIVE',\r\n  UPDATE_MAX_COLUMNS: 'UPDATE_MAX_COLUMNS',\r\n  ADD_ALTERNATIVE_TO_COLLEECTION: 'ADD_ALTERNATIVE_TO_COLLEECTION',\r\n  DELETE_COLLECTION: 'DELETE_COLLECTION',\r\n  TOGGLE_DRAGGING: 'TOGGLE_DRAGGING',\r\n  SELECT_COLLECTION: 'SELECT_COLLECTION',\r\n  DESELECT_COLLECTION: 'DESELECT_COLLECTION',\r\n  SELECT_ALTERNATIVE: 'SELECT_ALTERNATIVE',\r\n  DESELECT_ALTERNATIVE: 'DESELECT_ALTERNATIVE',\r\n  HOVER_ALTERNATIVE: 'HOVER_ALTERNATIVE',\r\n  DEHOVER_ALTERNATIVE: 'DEHOVER_ALTERNATIVE',\r\n  DEHOVER_ALL_ALTERNATIVES: 'DEHOVER_ALL_ALTERNATIVES',\r\n  INSERT_LAYOUT: 'INSERT_LAYOUT',\r\n  CLIP_ALTERNATIVE: 'CLIP_ALTERNATIVE',\r\n  CLIP_COLLECTION: 'CLIP_COLLECTION',\r\n  CLEAR_ALTS_CLIPBOARD: 'CLEAR_ALTS_CLIPBOARD',\r\n  CLEAR_COLS_CLIPBOARD: 'CLEAR_COLS_CLIPBOARD',\r\n  CHANGE_COLLECTION_NAME: 'CHANGE_COLLECTION_NAME',\r\n  SHOW_HEADER: 'SHOW_HEADER',\r\n  HIDE_HEADER: 'HIDE_HEADER',\r\n  SHOW_SINK_LIST: 'SHOW_SINK_LIST',\r\n  HIDE_SINK_LIST: 'HIDE_SINK_LIST',\r\n  TOGGLE_SINK: 'TOGGLE_SINK',\r\n  SAVE_LAYOUT: 'SAVE_LAYOUT',\r\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\r\n  HANDLE_WARNING: 'HANDLE_WARNING',\r\n  HANDLE_ERROR: 'HANDLE_ERROR',\r\n  DESELECT_ALL_ALTERNATIVES: 'DESELECT_ALL_ALTERNATIVES',\r\n  DESELECT_ALL_COLLECTIONS: 'DESELECT_ALL_COLLECTIONS',\r\n  TOGGLE_HISTORY: 'TOGGLE_HISTORY',\r\n  TOGGLE_VIEW_MODE: 'TOGGLE_VIEW_MODE',\r\n  TOGGLE_ALT_VIEW: 'TOGGLE_ALT_VIEW',\r\n  ALTER_ALTERNATIVE: 'ALTER_ALTERNATIVE',\r\n  SELECT_PATH: 'SELECT_PATH',\r\n  DESELECT_PATH: 'DESELECT_PATH',\r\n  ADD_DATA_FIELD: 'ADD_DATA_FIELD',\r\n  REMOVE_DATA_FIELD: 'REMOVE_DATA_FIELD',\r\n  UPDATE_PATH: 'UPDATE_PATH',\r\n  FETCH_KEY_SETS: 'FETCH_KEY_SETS',\r\n  FETCH_VALUE_BANDS: 'FETCH_VALUE_BANDS',\r\n  FETCH_SETTINGS: 'FETCH_SETTINGS',\r\n  ORDER_ALTERNATIVES: 'ORDER_ALTERNATIVES',\r\n  ADD_ALTERNATIVE_TO_COLLECTION: 'ADD_ALTERNATIVE_TO_COLLECTION',\r\n  ORDER_COLLECTION_DIMENSIONS: 'ORDER_COLLECTION_DIMENSIONS',\r\n  SET_LOADING_STATE: 'SET_LOADING_STATE',\r\n  REMOVE_ALTERNATIVE: 'REMOVE_ALTERNATIVE',\r\n  TOGGLE_SETTINGS: 'TOGGLE_SETTINGS',\r\n  SET_ALTERNATIVE_SIZE: 'SET_ALTERNATIVE_SIZE',\r\n  SET_COMPACTION_TYPE: 'SET_COMPACTION_TYPE',\r\n  GATHER_ALL_COLLECTIONS: 'GATHER_ALL_COLLECTIONS',\r\n  SET_COLLISION_PREVENTION: 'SET_COLLISION_PREVENTION',\r\n  SET_VALUE_BANDS: 'SET_VALUE_BANDS',\r\n  SHOULD_COMMIT_QUERY: 'SHOULD_COMMIT_QUERY',\r\n  ADD_QUERY: 'ADD_QUERY',\r\n  REMOVE_QUERY: 'REMOVE_QUERY',\r\n  CLEAR_ALL_QUERIES: 'CLEAR_ALL_QUERIES',\r\n  SET_COLLECTION_DESTINATION: 'SET_COLLECTION_DESTINATION',\r\n  SET_COLLECTION_MODE: 'SET_COLLECTION_MODE',\r\n  UPDATE_COLLECTION_TAGS: 'UPDATE_COLLECTION_TAGS',\r\n  ADD_BRUSH: 'ADD_BRUSH',\r\n  REMOVE_BRUSH: 'REMOVE_BRUSH',\r\n  CLEAR_ALL_BRUSHES: 'CLEAR_ALL_BRUSHES',\r\n  TOGGLE_SEARCH: 'TOGGLE_SEARCH',\r\n  SEARCHED_COLLECTION: \"SEARCHED_COLLECTION\",\r\n  SEARCH_COLLECTION_FALID: \"SEARCH_COLLECTION_FALID\",\r\n  EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH: \"EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH\",\r\n  UPDATE_LAYOUTS:  \"UPDATE_LAYOUTS\",\r\n  HANDLE_EDIT_NAME_START: \"HANDLE_EDIT_NAME_START\",\r\n  EDIT_COLLECTION_NAME: 'EDIT_COLLECTION_NAME',\r\n  REMOVE_FOCUS: \"REMOVE_FOCUS\",\r\n  SELECT_PROJECT: \"SELECT_PROJECT\",\r\n  CREATING_PROJECT: \"CREATING_PROJECT\",\r\n  FETCH_USER: \"FETCH_USER\",\r\n  NOT_FETCH_USER: \"NOT_FETCH_USER\",\r\n  PROJECT_ID: \"PROJECT_ID\",\r\n  USER_ID: \"USER_ID\",\r\n  LOGOUT_USER: \"LOGOUT_USER\",\r\n  DELETE_PROJECT: \"DELETE_PROJECT\",\r\n  PROJECT_EDIT_BOX: \"PROJECT_EDIT_BOX\",\r\n  UPDATE_PROJECT: \"UPDATE_PROJECT\",\r\n  SHOW_PROJECT_CONTEXT_MENU: \"SHOW_PROJECT_CONTEXT_MENU\",\r\n  HIDE_PROJECT_CONTEXT_MENU: \"HIDE_PROJECT_CONTEXT_MENU\",\r\n  RESET_STATE_ON_BACK_ARROW: \"RESET_STATE_ON_BACK_ARROW\",\r\n  EDITTING: \"EDITTING\",\r\n  UPDATE_SHOW_DSTAR_MENU: \"UPDATE_SHOW_DSTAR_MENU\",\r\n  UPDATE_SHOW_COLLECTION_MENU: \"UPDATE_SHOW_COLLECTION_MENU\",\r\n  SET_SORT_PARAMS: 'SET_SORT_PARAMS',\r\n  GET_COLLECTION_ALTERNATIVES_LAYOUT: 'GET_COLLECTION_ALTERNATIVES_LAYOUT',\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the collection object keys.\r\n * At the time of development, these keys are not finalized.\r\n * So, this constants file is used throughout the application.\r\n */\r\nexport default new Immutable.Map({\r\n  ID: 'viewId',\r\n  REF: 'refId',\r\n  NAME: 'collectionName',\r\n  ALTERNATIVE_IDS: 'altsid',\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains all the static strings used in the application.\r\n * It can be easily changed in the future\r\n */\r\nexport default new Immutable.Map({\r\n  /**\r\n   * this property is used when the collection does not contain a name\r\n   */\r\n  UNTITLED_COLLECTION_NAME: 'untitled',\r\n});\r\n","import collectionObjectConstants from '../constants/collectionObject';\r\nimport stringConstants from '../constants/strings';\r\nimport memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * finds the collection with the name passed as a param\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionName\r\n * @return {ImmutableMap} collection\r\n */\r\nexport const findCollectionsFromName = memoize((collections, collectionName) => (\r\n  collections.find((collection) =>\r\n    collection.get(collectionObjectConstants.get('NAME')) === collectionName\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * finds the collection with id passed\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const findCollectionsFromID = memoize((collections, collectionId) => (\r\n  collections.find((collection) => collection.get('viewId') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * find refs of a collection with the given ID (except the ID itself)\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findCollectionRelativesFromID = (collections, collectionID) => {\r\n  const collection = collections.find((collection) => collection.get('viewId') === collectionID);\r\n  const refId = collection.get('refId');\r\n  const colRelatives = collections.filter((col) => col.get('refId') === refId)\r\n    .filter((col) => col.get('viewId') !== collection.get('viewId'))\r\n  return colRelatives;\r\n}\r\n\r\n/**\r\n * remove an element (with id = collectionId) from the collections list\r\n * @param {ImmutableList} collections\r\n * @param {string} collectionId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchCollectionsNotID = memoize((collections, collectionId) => (\r\n  collections.filter((collection) =>\r\n    collection.get(collectionObjectConstants.get('ID')) !== collectionId\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * gets the name of the collection\r\n * @param {ImmutableMap} collection\r\n * @return {string}\r\n */\r\nexport const getCollectionName = (collection) => {\r\n  let collectionName = stringConstants.get('UNTITLED_COLLECTION_NAME');\r\n  if (collection.get(collectionObjectConstants.get('NAME'))) {\r\n    collectionName = collection.get(collectionObjectConstants.get('NAME'));\r\n  }\r\n  return collectionName;\r\n};\r\n\r\n/**\r\n * returns the alternatives present for each collection\r\n * @param {ImmutableMap} collection\r\n * @param {ImmutableList} alternatives\r\n * @returns {ImmutableList} \r\n */\r\nexport const getAlternativesInCollection = memoize((collection, alternatives) =>\r\n  alternatives.filter((alternative) => collection.get('altsid').includes(alternative.get('viewId'))\r\n  ), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * This formula computes the new value for gridlayout width property\r\n * when a collection is dragged beyond the existing boundaries\r\n * @param {int} cols\r\n * @param {int} margin\r\n * @param {int} cellDim\r\n * @param {int} buffer\r\n * @return {int} grid-layout width\r\n */\r\nexport const calculateWidth = memoize((cols, margin, cellDim, buffer) => (\r\n  cellDim * cols + margin * cols + buffer\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * This formula computes the new value for gridlayout height property\r\n * when a collection is dragged beyond the existing boundaries\r\n * @param {int} rows\r\n * @param {int} margin\r\n * @param {int} rowHeight\r\n * @param {int} buffer\r\n * @return {int} grid-layout height\r\n */\r\nexport const calculateHeight = memoize((rows, margin, rowHeight, buffer) => (\r\n  rowHeight * rows + margin * rows + buffer\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * Using React-grid-layout's function to get the new coordinates\r\n * @param {int} x\r\n * @param {int} y\r\n * @param {int} cols\r\n * @return {object} new x and y coordinates\r\n */\r\nexport const getCoordinates = (x, y) => {\r\n\r\n  const newX = Math.round(x / 200);\r\n  const newY = Math.round(y / 60);\r\n\r\n  return { x: newX, y: newY };\r\n};\r\n\r\n/**\r\n * removes the collections which do not have a layout\r\n * @param {ImmutableList} collections\r\n * @param {ImmutableList} layouts\r\n * @return {ImmtableList}\r\n */\r\nexport const filterCollectionsFromLayouts = (collections, layouts) => {\r\n  return collections.map((collection) => {\r\n    const collectionId = collection[collectionObjectConstants.get('ID')];\r\n    const colLayout = layouts.get('gridLayout').find((item) => {\r\n      return item.get('i') === collectionId;\r\n    });\r\n\r\n    if (!colLayout) {\r\n      return collection;\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * add properties to default collections list\r\n * @param {array} collections\r\n * @return {array}\r\n */\r\nexport const addPropertyToCollections = (collections) => (\r\n  collections.map((collection) => {\r\n    collection.isSelected = false;\r\n    collection.destinations = []\r\n    collection.currentMode = {\r\n      isAltering: false,\r\n      isEditing: false,\r\n      isLiveEditing: false,\r\n      isCloning: false,\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n    } // default\r\n\r\n    return collection;\r\n  })\r\n);\r\n\r\n/**\r\n * removes altsIDs which exist in collections\r\n * but don't exist in the alternatives\r\n * @param {Array} collections\r\n * @param {ImmutableList} alternateIDs\r\n * @return {Array}\r\n */\r\nexport const correctAltIDsInCollections = (collections, alternateIDs) => {\r\n  return collections.map((collection) => {\r\n\r\n    const altIDs = collection.altsid.filter((id) => {\r\n\r\n      const exists = alternateIDs.findIndex((altID) => altID === id);\r\n\r\n      return (exists !== -1) ? true : false;\r\n    });\r\n\r\n    collection.altsid = altIDs;\r\n    return collection;\r\n  });\r\n};\r\n\r\nexport const getCollectionsByTag = (collections, tag) => {\r\n  return collections.filter(collection => {\r\n    if (collection.get('tags').contains(tag)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * @param {String}\r\n * @param {ImmutableList} collections\r\n * @param {ImmutableMap} collectionItem\r\n * @description checks if name exists before editing the collectionName\r\n * @return {boolean} exists\r\n */\r\nexport const nameExists = (name, collections, collectionItem) => {\r\n  let filteredCollection = collections.filter((col) => col.get(\"viewId\") !== collectionItem.get(\"viewId\") && col.get(\"refId\") !== collectionItem.get(\"refId\"));\r\n  let exists = false;\r\n\r\n  for (let collection of filteredCollection) {\r\n    if (collection.get(\"collectionName\").toLowerCase() === name.toLowerCase()) {\r\n      exists = true;\r\n    }\r\n  }\r\n  return exists;\r\n}\r\n\r\nexport const handleNameCounter = (collections, name, collection) => {\r\n  let counter = 0;\r\n  let compareNumber = 0;\r\n  let filterCollection = collections.filter((col) => col.get(\"viewId\") !== collection.get(\"viewId\"));\r\n\r\n  for (let collectionItem of filterCollection) {\r\n    let subName = collectionItem.get(\"collectionName\").split(\":\");\r\n\r\n    if (collectionItem.get(\"collectionName\").toLowerCase() === name.toLowerCase()) {\r\n      counter++;\r\n    }\r\n    else if (subName[0].toLowerCase() === name.toLowerCase()) {\r\n      let integer = parseInt(subName[1], 10);\r\n\r\n      if (integer > compareNumber) {\r\n        compareNumber = integer;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (compareNumber >= counter) {\r\n    return compareNumber + 1;\r\n  } else {\r\n    return counter;\r\n  }\r\n\r\n};\r\n\r\n\r\n/**\r\n * @param {ImmutableList} collections\r\n * @return {ImmutableList} collections\r\n * @description  sorts collections and add NameView on fetch\r\n */\r\nexport const addCollectionNameView = (collections) => {\r\n\r\n  if (collections !== null && collections.length > 0) {\r\n\r\n    let current = {\r\n      refId: null\r\n    };\r\n\r\n    let currentName;\r\n\r\n    let cnt = 0;\r\n\r\n    const sortedArray = collections.sort(function (a, b) {\r\n      let dateA = a.refId.toLowerCase();\r\n      let dateB = b.refId.toLowerCase();\r\n\r\n      if (dateA < dateB) {\r\n        return -1;\r\n      } else if (dateA > dateB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    for (var i = 0; i < sortedArray.length; i++) {\r\n      if (sortedArray[i].refId !== current.refId) {\r\n        current = sortedArray[i];\r\n        currentName = current.collectionName\r\n        cnt = 1;\r\n        if (currentName.includes(\"-View(\")) {\r\n          let getNameIndex = sortedArray[i].collectionName.indexOf(\"-View(\")\r\n          currentName = currentName.slice(0, getNameIndex)\r\n        }\r\n        sortedArray[i].collectionNameView = `View(${cnt})`;\r\n        sortedArray[i].collectionName = currentName + `-View(${cnt})`;\r\n      } else {\r\n        if (sortedArray[i].collectionName.includes(\"-View(\")) {\r\n          let getNameIndex = sortedArray[i].collectionName.indexOf(\"-View(\");\r\n          currentName = currentName.slice(0, getNameIndex);\r\n        }\r\n        cnt++;\r\n        sortedArray[i].collectionNameView = `View(${cnt})`;\r\n        sortedArray[i].collectionName = currentName + `-View(${cnt})`;\r\n      }\r\n    }\r\n    return sortedArray;\r\n  } else {\r\n    return collections;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {Array} collections\r\n * @description checks if the  collectionNameView is null or empty\r\n * @returns {Boolean} hasViewName\r\n */\r\nexport const shouldAddNameView = (collections) => {\r\n  let hasViewName = false\r\n  for (let collection of collections) {\r\n    if (typeof (collection.collectionNameView) === \"undefined\" || collection.collectionNameView === null || collection.collectionNameView.length <= 0) {\r\n      hasViewName = true;\r\n    }\r\n  }\r\n\r\n  return hasViewName;\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {collectionName} String\r\n *  @description remove viewName from collection\r\n * @return {String} collectionName\r\n */\r\nexport const removeViewName = (collectionName) => {\r\n  if (collectionName && collectionName.length > 0) {\r\n    if (collectionName.includes(\"View(\")) {\r\n      let letterIndex = collectionName.indexOf(\"-View(\")\r\n      return collectionName.slice(0, letterIndex);\r\n    }\r\n  } else {\r\n    return collectionName;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {name} String\r\n * @description removes collectionNameView from collection name\r\n */\r\nexport const sliceViewFromName = (name) => {\r\n  if (name.includes(\"-View(\")) {\r\n\r\n    let letterIndex = name.indexOf(\"-View(\")\r\n    let newName = name.slice(0, letterIndex)\r\n    return newName;\r\n  }\r\n  else {\r\n    return name;\r\n  }\r\n\r\n}\r\n\r\n\r\n","import appConstants from '../constants/appConstants';\r\nimport collectionObjectConstants from '../constants/collectionObject';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  fetchCollectionsNotID,\r\n  findCollectionsFromID,\r\n} from '../util/collections';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  collections: [],\r\n  collectionsFetched: false,\r\n  clippedCollections: [],\r\n  showHelp: false,\r\n  shouldRemoveFocus: false,\r\n  altSize: 0,\r\n});\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  let collection;\r\n  let collectionsNotID;\r\n  let newCollection;\r\n  let newCollectionsList;\r\n\r\n  switch (action.type) {\r\n    case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"):\r\n      return state\r\n        .set('collectionsFetched', false)\r\n        .set('collections', Immutable.fromJS([]))\r\n        .set('shouldRemoveFocus', false)\r\n        .set('showHelp', false)\r\n        .set('clippedCollections', Immutable.fromJS([]))\r\n\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n      return state\r\n        .set('collectionsFetched', false)\r\n        .set('collections', Immutable.fromJS([]))\r\n        .set('shouldRemoveFocus', false)\r\n        .set('showHelp', false)\r\n        .set('clippedCollections', Immutable.fromJS([]))\r\n\r\n    case appConstants.get('FETCH_COLLECTIONS'):\r\n      return state.set('collections', Immutable.fromJS(action.payload))\r\n        .set('collectionsFetched', true);\r\n\r\n    case appConstants.get('CREATE_COLLECTION'):\r\n      return state.update('collections',\r\n        (collections) => collections.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('DELETE_COLLECTION'):\r\n      return state.set('collections', fetchCollectionsNotID(\r\n        state.get('collections'), action.payload\r\n      ));\r\n\r\n    case appConstants.get('SELECT_COLLECTION'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'isSelected'], true)\r\n      );\r\n\r\n    case appConstants.get('DESELECT_COLLECTION'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'isSelected'], false)\r\n      );\r\n\r\n    case appConstants.get('DESELECT_ALL_COLLECTIONS'):\r\n      return state.update('collections', (collections) => collections.map((collection) =>\r\n        collection.set('isSelected', false)));\r\n\r\n    case appConstants.get('CLIP_COLLECTION'):\r\n      return state.update('clippedCollections',\r\n        (clippedCollections) => clippedCollections.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('CLEAR_COLS_CLIPBOARD'):\r\n      return state.update('clippedCollections', (clippedCollections) => clippedCollections.clear());\r\n\r\n    case appConstants.get('CHANGE_COLLECTION_NAME'):\r\n      collection = findCollectionsFromID(state.get('collections'), action.payload.collectionId);\r\n      newCollection = collection.set(collectionObjectConstants.get('NAME'), action.payload.collectionName).set(\"isEditingName\", false)\r\n\r\n      collectionsNotID = fetchCollectionsNotID(state.get('collections'), action.payload.collectionId);\r\n      newCollectionsList = collectionsNotID.push(newCollection);\r\n      return state.set('collections', newCollectionsList);\r\n\r\n    case appConstants.get(\"HANDLE_EDIT_NAME_START\"):\r\n      return state.update('collections', (collections) => collections.map((\r\n        (collection) => {\r\n          if (collection.get('refId') === action.payload) {\r\n            return collection.set('isEditingName', !collection.get('isEditingName'))\r\n          }\r\n          return collection;\r\n        }\r\n      )));\r\n    case appConstants.get('EDIT_COLLECTION_NAME'):\r\n      return state.update('collections', (collections) => collections.map((\r\n        (collection) => {\r\n\r\n          if (collection.get('isEditingName')) {\r\n\r\n            return collection.set('collectionName', action.payload.name)\r\n          }\r\n          return collection;\r\n        }\r\n      )));\r\n\r\n    case appConstants.get('TOGGLE_SINK'):\r\n      return state.update('collections', (collections) => {\r\n        let index = collections.findIndex((col) => col.get('viewId') === action.payload)\r\n        return collections.setIn([index, 'isSinked'], !collections.get(index).get('isSinked'))\r\n      });\r\n\r\n    case appConstants.get('TOGGLE_VIEW_MODE'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collectionId), 'viewType'], action.payload.viewType)\r\n      );\r\n\r\n    case appConstants.get('ADD_ALTERNATIVE_TO_COLLECTION'):\r\n      return state.update('collections', (collections) => collections.map((\r\n        (collection) => {\r\n          if (collection.get('viewId') === action.payload.collectionId) {\r\n            const oldAlts = collection.get('altsid');\r\n            const newAlts = oldAlts.push(Immutable.fromJS(action.payload.alternativeId));\r\n\r\n            return collection.set('altsid', newAlts)\r\n              .set('dimOrder', Immutable.fromJS(action.payload.dimOrder))\r\n              .set('inputs', Immutable.fromJS(action.payload.collectionInputs))\r\n              .set('outputs', Immutable.fromJS(action.payload.collectionOutputs))\r\n          }\r\n          return collection;\r\n        }\r\n      )));\r\n\r\n    case appConstants.get('ORDER_COLLECTION_DIMENSIONS'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.viewId), 'dimOrder'], Immutable.fromJS(action.payload.dimOrder))\r\n      );\r\n\r\n    case appConstants.get('SET_COLLECTION_DESTINATION'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'destinations'], Immutable.fromJS(action.payload.destinations))\r\n      );\r\n\r\n    case appConstants.get('SET_COLLECTION_MODE'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'currentMode'], Immutable.fromJS(action.payload.mode))\r\n      );\r\n\r\n    case appConstants.get('UPDATE_COLLECTION_TAGS'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collectionId), 'tags'], Immutable.fromJS(action.payload.tags))\r\n      );\r\n    case appConstants.get(\"REMOVE_FOCUS\"):\r\n      return state.set(\"shouldRemoveFocus\", !state.get(\"shouldRemoveFocus\"));\r\n\r\n    case appConstants.get('SET_SORT_PARAMS'):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'sortParams'], Immutable.fromJS(action.payload.sortParams))\r\n      );\r\n\r\n    case appConstants.get(\"GET_COLLECTION_ALTERNATIVES_LAYOUT\"):\r\n      return state.update('collections', (collections) =>\r\n        collections.setIn([collections.findIndex((col) => col.get('viewId') === action.payload.collection), 'layoutsForAlts'], Immutable.fromJS(action.payload.layouts))\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the alternatives object keys.\r\n * At the time of development, these keys are not finalized.\r\n * So, this constants file is used throughout the application.\r\n */\r\nexport default new Immutable.Map({\r\n  ID: 'viewId',\r\n  REF: 'refId',\r\n  IMAGE: 'image',\r\n});\r\n","import Immutable from 'immutable';\r\n\r\n/**\r\n * Contains the react grid constants used in the application\r\n */\r\nexport default new Immutable.Map({\r\n  MARGIN: 10,\r\n  CELL_DIM: 200,\r\n  BUFFER: 10,\r\n  ROW_HEIGHT: 130,\r\n  DEFAULT_ALT_HEIGHT: 1,\r\n  DEFAULT_ALT_WIDTH: 1,\r\n  DEFAULT_MAX_COLUMNS: 81,\r\n  LAYOUT_UPDATE_MESSAGE_TYPE: \"layout\",\r\n});\r\n","import Immutable from 'immutable';\r\n\r\nconst hosts = {\r\n  primary: 'sr-02645.iat.sfu.ca:5050',\r\n  secondary: 'sr-02645.iat.sfu.ca:5051',\r\n  demo: 'sr-02645.iat.sfu.ca:5052',\r\n  local: '127.0.0.1:5050',\r\n  vahidVmware: '192.168.108.160:5050',\r\n}\r\n\r\n/*** for using local db\r\n * demo: '127.0.0.1:5050',\r\n * to use db on server\r\n * demo: sr-02645.iat.sfu.ca:5052\r\n */\r\n\r\nconst webProtocol = 'http://';\r\nconst wsProtocol = 'ws://';\r\nconst host = process.env.REACT_APP_host || hosts.local;\r\n\r\n/**\r\n * contains all the urls being used in this application.\r\n * make this into an export default.\r\n * everything must be put into this immutable object\r\n */\r\nexport const urls = new Immutable.Map({\r\n  getHost: `${webProtocol}${host}/`,\r\n  alternatives_fetch: `${webProtocol}${host}/alternatives`,\r\n  collections_fetch: `${webProtocol}${host}/collections`,\r\n  layout_fetch: `${webProtocol}${host}/layout`,\r\n  project_fetch: `${webProtocol}${host}/project`,\r\n  project_select: `${webProtocol}${host}/project/select`,\r\n  project_create: `${webProtocol}${host}/project`,\r\n  delete_project: `${webProtocol}${host}/project`,\r\n  update_project: `${webProtocol}${host}/project`,\r\n  user_register: `${webProtocol}${host}/user/register`,\r\n  user_login: `${webProtocol}${host}/user/login`,\r\n  user_fetch: `${webProtocol}${host}/user`,\r\n  settings_fetch: `${webProtocol}${host}/settings`,\r\n  cartesian_product: `${webProtocol}${host}/computeCP`,\r\n  parameter_spectra: `${webProtocol}${host}/computePS`,\r\n  sampling: `${webProtocol}${host}/computeSample`,\r\n  spectral_cartesian_product: `${webProtocol}${host}/computeSCP`,\r\n  sensitivity_analysis: `${webProtocol}${host}/computeSA`,\r\n  websocketURL: `${wsProtocol}${host}/delta`,\r\n  collections: `${webProtocol}${host}/collections`,\r\n  collectionCopyWithRef: `${webProtocol}${host}/collections/copy/ref`,\r\n  newCollection: `${webProtocol}${host}/new-collection`,\r\n  alternativeCopy: `${webProtocol}${host}/alternatives/ref/copy`,\r\n  alternativeClone: `${webProtocol}${host}/alternatives/clone`,\r\n  collectionClone: `${webProtocol}${host}/collections/clone`,\r\n  collectionDeepClone: `${webProtocol}${host}/collections/clone/deep`,\r\n  cloneAltInNewCollection: `${webProtocol}${host}/collections/alt/clone`,\r\n  alternativeEdit: `${webProtocol}${host}/alternatives/edit`,\r\n  alternativeCloneEdit: `${webProtocol}${host}/alternatives/edit/clone`,\r\n  alternativesRemove: `${webProtocol}${host}/alternatives`,\r\n  alternativeRestore: `${webProtocol}${host}/alternatives/restore`,\r\n  alternative_sketching: `${webProtocol}${host}/alternatives/sketching`,\r\n  deleteCollection: `${webProtocol}${host}/collections`,\r\n  sinkCollection: `${webProtocol}${host}/collections/sink`,\r\n});","import alternativeObjectConstant from '../constants/alternativeObject';\r\nimport layoutConstants from '../constants/layout';\r\nimport {urls} from '../constants/urls';\r\nimport memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * find alternative object from a list from alternativeID\r\n * @param {ImmutableList} alternatives\r\n * @param {string} alternativeID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findAlternativesFromID = memoize((alternatives, alternativeID) => (\r\n  alternatives.find((alternative) => alternative.get('viewId') === alternativeID)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * find refs of an alternative with the given ID (except the ID itself)\r\n * @param {ImmutableList} alternatives\r\n * @param {string} alternativeID\r\n * @return {ImmutableMap}\r\n */\r\nexport const findAlternativeRelativesFromID = (alternatives, alternativeID) => {\r\n  const alternative = alternatives.find((alternative) =>\r\n    alternative.get('viewId') === alternativeID)\r\n  const refId = alternative.get('refId');\r\n  const altRelatives = alternatives.filter((alt) => alt.get('refId') === refId)\r\n    .filter((alt) => alt.get('viewId') !== alternative.get('viewId'))\r\n  return altRelatives;\r\n}\r\n\r\n/**\r\n * remove an item (with id: alternativeID) from the list of alternatives.\r\n * @param {ImmutableList} alternatives : list of alternatives\r\n * @param {int} alternativeID : Item to remove\r\n * @return {ImmutableList} : list of alternatives, with the removed item\r\n */\r\nexport const filterAlternativesNotID = memoize((alternatives, alternativeID) => (\r\n  alternatives.filter((alternative) =>\r\n    alternative.get(alternativeObjectConstant.get('ID')) !== alternativeID\r\n  )\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * returns the image url of the alternative\r\n * @param {ImmutableMap} alternative\r\n * @return {string} :  image url of the alternative\r\n */\r\nexport const getAlternativeImageURL = memoize((alternative) => (\r\n  urls.get('getHost') + alternative.get(alternativeObjectConstant.get('IMAGE'))\r\n));\r\n\r\n\r\n/**\r\n * this function gets you the parallel data needed for D3.js\r\n * @param {ImmutableList} altsInCollection : list of alternatives\r\n * @return {array} parallelData\r\n */\r\nexport const getParallelDataFromAlternatives = (altsInCollection) => {\r\n  const temp= [];\r\n  const parallelData = [];\r\n  let mergedObject = {};\r\n\r\n  altsInCollection.map((alt) => temp.push({'id': alt.viewId, ...alt.attributes}));\r\n\r\n  temp.map((obj) => {\r\n    Object.values(obj).map((o) => {\r\n      const eachPoint = {[o.key]: o.value};\r\n      mergedObject = Object.assign(mergedObject, {'id': obj.id}, eachPoint);\r\n    });\r\n    parallelData.push(mergedObject);\r\n    mergedObject = {};\r\n  });\r\n\r\n  parallelData.map((obj) => delete obj.undefined);\r\n\r\n  return parallelData;\r\n};\r\n\r\n/**\r\n * this function gets you the parallel data needed for D3.js\r\n * @param {ImmutableMap} altObj : an alternative object\r\n * @return {array} parallelData\r\n */\r\nexport const getParallelDataFromAlternative = (altObj) => {\r\n  const temp = [];\r\n  let mergedObject = {};\r\n\r\n  temp.push({...altObj.params, ...altObj.outputs});\r\n  \r\n  temp.map((obj) => {\r\n    Object.values(obj).map((o) => {\r\n      const eachPoint = {[o.key]: o.value};\r\n      mergedObject = Object.assign(mergedObject, eachPoint);\r\n    });\r\n    return mergedObject;\r\n  });\r\n\r\n  return mergedObject;\r\n};\r\n\r\n/**\r\n * filters a list of selected alternatives from the alternatives in collection\r\n * @param {ImmutableList} altsSelected : list of alternatives selected\r\n * @param {array} altsInCollection : list of alternatives in collection\r\n * @return {array} filtered\r\n */\r\nexport const filterSelectedAlternativesInCollection = memoize((altsSelected, altsInCollection) => (\r\n  altsSelected.filter((alt) => altsInCollection.includes(alt.get('viewId'))\r\n  )), (...args) => values(args).join(\"_\"));\r\n\r\n\r\n/**\r\n * add properties to default collections list\r\n * @param {array} alternatives\r\n * @return {array}\r\n */\r\nexport const addPropertyToAlternatives = (alternatives) => (\r\n  alternatives.map((alternative) => {\r\n    alternative.altView = false;\r\n    alternative.isSelected = false;\r\n    alternative.isHovered = false;\r\n    alternative.isLoading = false;\r\n    alternative.parallelData = [];\r\n    return alternative;\r\n  })\r\n);\r\n\r\n/**\r\n * remove an element (with id = alternatieID) from the altsid list\r\n * @param {ImmutableList} alternativesID\r\n * @param {int} alternativeID\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchAlternativesNotID = memoize((alternativesID, alternativeID) => (\r\n  alternativesID.filter((altID) => altID !== alternativeID)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * Generates a layout object for alternatives in collection\r\n * allots x and y position for every alternative\r\n * @param {array} altIDs list of alternative ids\r\n * @param {int} cols: the number of alternatives placed in a row\r\n * @return {object} defines the x, y, w, h, i for every alternative\r\n */\r\nexport const generateLayoutForAlternatives = (altIDs = [], cols) => {\r\n  let x = 0;\r\n  let y = 0;\r\n  const w = layoutConstants.get('DEFAULT_ALT_WIDTH');\r\n  const h = layoutConstants.get('DEFAULT_ALT_HEIGHT');\r\n\r\n  let index = 0;\r\n\r\n  return altIDs.map((i) => {\r\n    const layout = {\r\n      x, y, w, h, i,\r\n    };\r\n\r\n    index += 1;\r\n    if (index % cols === 0) {\r\n      index = 0;\r\n      y += 1;\r\n      x = 0;\r\n    } else {\r\n      x += 1;\r\n    }\r\n\r\n    return layout;\r\n  });\r\n};\r\n\r\n/**\r\n * get alternative ids from a list of alternatives\r\n * @param {ImmutableList} alternatives\r\n * @return {ImmutableList}\r\n */\r\nexport const getAlternativeIDs = memoize((alternatives) => (\r\n  alternatives.map((alternative) => (\r\n    alternative.get(alternativeObjectConstant.get('ID'))\r\n  ))\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * determines which collection the alternative belogs to\r\n * @param {ImmutableList} collections\r\n * @param {string} alternativeID\r\n * @return {string} collectionName\r\n */\r\nexport const determineAlternativeCollection = (collections, alternativeID) => {\r\n  const sourceCollection = collections.filter((collection) => collection.get('altsid').contains(alternativeID))\r\n  return sourceCollection[0].get('collectionName');\r\n}\r\n","import {\r\n  findAlternativesFromID,\r\n  getParallelDataFromAlternative,\r\n} from './alternatives';\r\n\r\nimport {\r\n  sliceViewFromName,\r\n} from './collections'\r\n\r\n/**\r\n * used to define default functions in PropTypes\r\n * Just an empty function\r\n */\r\nexport const emptyFunction = () => { };\r\n\r\n/**\r\n * Retuns what component to render based on the condition\r\n * @param {boolean} condition: The condition to evaluate\r\n * @param {ReactPureComponent} Component1: return if condition is true.\r\n * @param {ReactPureComponent} Component2=null: return if condition is false.\r\n * @return {ReactPureComponent}\r\n */\r\nexport const renderIf = (condition, Component1, Component2 = null) => (\r\n  condition ? Component1 : Component2\r\n);\r\n\r\n/**\r\n * creates a new id of length at random\r\n * @param {int} length\r\n * @return {string} : the Id of a new collection\r\n */\r\nexport const makeId = (length = 5) => {\r\n  let text = '';\r\n  const ids = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (let i = 0; i < length; i++) {\r\n    text += ids.charAt(Math.floor(Math.random() * ids.length));\r\n  }\r\n  return text;\r\n};\r\n\r\n/**\r\n * remove a certain field from an array of data objects\r\n * @param {array} data : array of data objects\r\n * @param {string} field : name of the field to remove\r\n * @return {array} new array of data objects\r\n */\r\nexport const removeFieldFromData = (data, field) => {\r\n  const newData = [];\r\n\r\n  data.map((d) => {\r\n    const { [field]: foo, ...rest } = d;\r\n    newData.push(rest);\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\n\r\n/**\r\n * remove a certain field from an array of data objects\r\n * @param {object} datum : data object\r\n * @param {string} field : name of the field to remove\r\n * @return {array} new array of data objects\r\n */\r\nexport const removeFieldFromDatum = (datum, field) => {\r\n  const { [field]: foo, ...rest } = datum;\r\n  return rest;\r\n};\r\n\r\n/**\r\n * add a certain field to an array of data objects\r\n * @param {array} data : array of data objects\r\n * @param {string} field : name of the field to remove\r\n * @param {object} source : source object to get field value\r\n * @return {array} new array of data objects\r\n */\r\nexport const addFieldToData = (data, field, source) => {\r\n  const newData = [];\r\n  let parallelData;\r\n  let alternative;\r\n\r\n  data.map((d) => {\r\n    alternative = findAlternativesFromID(source, d.id).toJS();\r\n    parallelData = getParallelDataFromAlternative(alternative);\r\n    d[field] = parallelData[0][field];\r\n    newData.push(d);\r\n  });\r\n\r\n  return newData;\r\n};\r\n\r\n/**\r\n * add a certain field to an array of data objects\r\n * @param {object} datum : data object\r\n * @param {string} field : name of the field to remove\r\n * @param {object} source : source object to get field value\r\n * @return {array} new array of data objects\r\n */\r\nexport const addFieldToDatum = (datum, field, source) => {\r\n  datum[field] = source[field];\r\n  return datum;\r\n};\r\n\r\nexport const objectDifference = (object1, object2) => {\r\n\r\n  let keys1 = Object.keys(object1);\r\n  let keys2 = Object.keys(object2);\r\n  const keyDifference = keys1.filter(x => !keys2.includes(x));\r\n  const difference = {};\r\n\r\n  Object.entries(object1).map(entry => {\r\n    if (keyDifference.includes(entry[0])) {\r\n      difference[entry[0]] = entry[1];\r\n    }\r\n  });\r\n\r\n  return difference;\r\n}\r\n\r\nexport const shapeAlternative = (alt, inputs, outputs) => {\r\n\r\n  var parallelData = {};\r\n  parallelData = alt.params ? Object.assign(parallelData,alt.params) : Object.assign(parallelData,inputs);\r\n  parallelData = alt.outputs ? Object.assign(parallelData,alt.outputs) : Object.assign(parallelData,outputs);\r\n  \r\n  return {\r\n    viewId: alt.viewId,\r\n    refId: alt.refId,\r\n    collectionName: sliceViewFromName(alt.collectionName),\r\n    collectionRefId: alt.collectionRefId,\r\n    collectionViewId: alt.collectionViewId,\r\n    params: alt.params ? alt.params : inputs,\r\n    outputs: alt.outputs ? alt.outputs : outputs,\r\n    parallelData: parallelData,\r\n    gltf: alt.gltf,\r\n    image: alt.image,\r\n    altView: false,\r\n    isSelected: false,\r\n    isHovered: false,\r\n    isLoading: false,\r\n  }\r\n}\r\n\r\nexport const shapeCollection = (col, inputs, outputs) => {\r\n  return {\r\n    viewId: col.viewId,\r\n    refId: col.refId,\r\n    collectionName: sliceViewFromName(col.collectionName),\r\n    collectionNameView: col.collectionNameView,\r\n    altsid: col.altsid,\r\n    isSinked: col.isSinked,\r\n    tags: col.tags,\r\n    viewType: col.viewType,\r\n    dimOrder: col.keySets,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    isSelected: false,\r\n    isEditingName: false,\r\n    destinations: [],\r\n    sortParams: [],\r\n    layoutsForAlts: [],\r\n    currentMode: {\r\n      isAltering: false,\r\n      isEditing: false,\r\n      isLiveEditing: false,\r\n      isCloning: false,\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * checks array equality\r\n * @param {Array} a \r\n * @param {Array} b \r\n * @returns \r\n */\r\nexport const arrayEquals = (a, b) => {\r\n  return Array.isArray(a) &&\r\n    Array.isArray(b) &&\r\n    a.length === b.length &&\r\n    a.every((val, index) => val === b[index]);\r\n}\r\n\r\n\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  fetchAlternativesNotID,\r\n} from '../util/alternatives';\r\nimport {\r\n  addFieldToDatum,\r\n  removeFieldFromDatum,\r\n} from '../util/util';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  alternatives: [],\r\n  alternativesFetched: false,\r\n  clippedAlternatives: [],\r\n});\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  let newAlternativesList;\r\n  let alternative;\r\n  let parallelData;\r\n  let index;\r\n\r\n  switch (action.type) {\r\n    case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"):\r\n      return state\r\n        .set('alternativesFetched', false)\r\n        .set(\"alternatives\", Immutable.fromJS([]))\r\n        .set(\"clippedAlternatives\", Immutable.fromJS([]));\r\n\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n      return state\r\n        .set('alternativesFetched', false)\r\n        .set(\"alternatives\", Immutable.fromJS([]))\r\n        .set(\"clippedAlternatives\", Immutable.fromJS([]));\r\n        \r\n    case appConstants.get('FETCH_ALTERNATIVES'):\r\n      return state\r\n        .set('alternatives', Immutable.fromJS(action.payload))\r\n        .set('alternativesFetched', true);\r\n\r\n    case appConstants.get('ADD_NEW_ALTERNATIVES'):\r\n      return state.update('alternatives',\r\n        (alternatives) => {\r\n          return alternatives.push(Immutable.fromJS(action.payload));\r\n        });\r\n\r\n    case appConstants.get('UPDATE_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.map((alternative) => {\r\n          if (alternative.get('viewId') === action.payload.viewId) {\r\n            return alternative.mergeDeepWith((prev, next, key) => {\r\n              if (key === 'isSelected') {\r\n                return prev;\r\n              }\r\n              return next;\r\n            }, Immutable.fromJS(action.payload.alternative));\r\n          }\r\n          return alternative;\r\n        }));\r\n\r\n    case appConstants.get('SELECT_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isSelected'], true)\r\n      );\r\n\r\n    case appConstants.get('DESELECT_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isSelected'], false)\r\n      );\r\n\r\n    case appConstants.get('HOVER_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.map((alternative) => {\r\n          if (alternative.get('viewId') === action.payload.viewId) {\r\n            return alternative.set('isHovered', true);\r\n          }\r\n          return alternative.set('isHovered', false);\r\n        })\r\n      );\r\n\r\n    case appConstants.get('DEHOVER_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isHovered'], false)\r\n      );\r\n\r\n    case appConstants.get('DEHOVER_ALL_ALTERNATIVES'):\r\n      return state.update('alternatives', (alternatives) => alternatives.map((alternative) =>\r\n        alternative.set('isHovered', false)));\r\n\r\n    case appConstants.get('DESELECT_ALL_ALTERNATIVES'):\r\n      return state.update('alternatives', (alternatives) => alternatives.map((alternative) =>\r\n        alternative.set('isSelected', false)));\r\n\r\n    case appConstants.get('CLIP_ALTERNATIVE'):\r\n      return state.update('clippedAlternatives',\r\n        (clippedAlternatives) => clippedAlternatives.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('REMOVE_ALTERNATIVE'):\r\n      return state.set('alternatives', fetchAlternativesNotID(\r\n        state.get('alternatives'), action.payload\r\n      ));\r\n\r\n    case appConstants.get('CLEAR_ALTS_CLIPBOARD'):\r\n      return state.update('clippedAlternatives', (clippedAlternatives) => clippedAlternatives.clear());\r\n\r\n    case appConstants.get('TOGGLE_ALT_VIEW'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.map((alternative) => {\r\n          if (alternative.get('viewId') === action.payload) {\r\n            return alternative.set('altView', !alternative.get('altView'));\r\n          }\r\n          return alternative;\r\n        }));\r\n\r\n    case appConstants.get('SET_LOADING_STATE'):\r\n      return state.update('alternatives', (alternatives) =>\r\n        alternatives.setIn([alternatives.findIndex((alt) => alt.get('viewId') === action.payload.viewId), 'isLoading'], action.payload.isLoading)\r\n      );\r\n\r\n    case appConstants.get('ALTER_ALTERNATIVE'):\r\n      return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload.alternativeID) {\r\n          return alternative.setIn(['parallelData', action.payload.parameter], action.payload.newValue);\r\n        }\r\n        return alternative;\r\n      }));\r\n\r\n    case appConstants.get('ADD_DATA_FIELD'):\r\n      return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload.alternative.get('viewId')) {\r\n          parallelData = action.payload.alternative.get('parallelData').toJS();\r\n          return alternative.setIn(['parallelData'], Immutable.fromJS(addFieldToDatum(parallelData, action.payload.field,\r\n            Object.assign(alternative.get('params').toJS(), alternative.get('outputs').toJS()))\r\n          ));\r\n        }\r\n        return alternative;\r\n      }));\r\n\r\n    case appConstants.get('REMOVE_DATA_FIELD'):\r\n      return state.update('alternatives', (alternatives) => alternatives.map((alternative) => {\r\n        if (alternative.get('viewId') === action.payload.alternative.get('viewId')) {\r\n          parallelData = action.payload.alternative.get('parallelData').toJS();\r\n          return alternative.setIn(['parallelData'], Immutable.fromJS(removeFieldFromDatum(parallelData, action.payload.field)));\r\n        }\r\n        return alternative;\r\n      }));\r\n\r\n    case appConstants.get('ORDER_ALTERNATIVES'):\r\n      return state.update('alternatives',\r\n        (alternatives) => {\r\n          index = alternatives.findIndex((alt) => alt.get('viewId') === action.payload);\r\n          alternative = alternatives[index];\r\n          newAlternativesList = alternatives.delete(index).push(alternative);\r\n          return newAlternativesList;\r\n        });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import memoize from 'lodash/memoize';\r\nimport values from \"lodash/values\";\r\n\r\n/**\r\n * layout for the collection id is determined\r\n * @param {ImmutableMap} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const getLayoutForCollection = memoize((layouts, collectionId) => (\r\n  layouts.get('gridLayout').find((layout) => layout.get('i') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * layout for the collection id is determined\r\n * @param {ImmutableMap} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableMap}\r\n */\r\nexport const getLayoutForCollectionFromClipboard = memoize((layouts, collectionId) => (\r\n  layouts.get('layoutClipboard').find((layout) => layout.get('i') === collectionId)\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * removes the layout of a collection from the list\r\n * @param {ImmutableList} layouts\r\n * @param {string} collectionId\r\n * @return {ImmutableList}\r\n */\r\nexport const deleteLayoutForCollection = memoize((layouts, collectionId) => (\r\n  layouts.filter((layout) => (\r\n    layout.get('i') !== collectionId\r\n  ))\r\n), (...args) => values(args).join(\"_\"));\r\n\r\n/**\r\n * compacts the layout list\r\n * @param {ImmutableList} layouts\r\n * @return {ImmutableList}\r\n */\r\nexport const compactCollectionLayouts = (gridLayout) => {\r\n  let x = 0;\r\n  let y = 0;\r\n  let layouts = gridLayout.toJS();\r\n\r\n  for(var j=0; j<layouts.length; j++) {\r\n    layouts[j].w = 3;\r\n    layouts[j].h = 5;\r\n\r\n    if (x < 8) {\r\n      layouts[j].x = x;\r\n      layouts[j].y = y;\r\n      x = x + layouts[j].w;\r\n    } else {\r\n      x = 0;\r\n      layouts[j].x = x;\r\n      layouts[j].y = y;\r\n      x = x + layouts[j].w;\r\n      y = y + layouts[j].h;\r\n    }\r\n  }\r\n\r\n  return layouts;\r\n}\r\n\r\nexport const updateLayoutAddMaxHeightAndWidth = (gridLayout, layoutId) => {\r\n  let layouts = gridLayout.toJS();\r\n  for (let i = 0; layouts.length > i; i++) {\r\n    if (layouts[i].i === layoutId) {\r\n      layouts[i].maxH = 14\r\n      layouts[i].maxW = 6 \r\n    }\r\n  }\r\n  return gridLayout;\r\n}\r\n\r\n/**\r\n * rearrange layout position\r\n * @param {Array} layouts \r\n * @param {int} numColumns \r\n * @returns Layoyts\r\n */\r\nexport const reArrangeCollectionLayout = (layouts, numColumns) => {\r\n  let y = 0\r\n  let x = 0\r\n  for(var j=0; j< layouts.length; j++) {\r\n    if( x === (numColumns -1) ){\r\n      layouts[j].x = x;\r\n      layouts[j].y = y;\r\n      y += 1\r\n      x = 0    \r\n      }else {\r\n       layouts[j].x = x;\r\n       layouts[j].y = y;\r\n       x += 1\r\n    }\r\n  }\r\n  return layouts;\r\n}\r\n","import appConstants from '../constants/appConstants';\r\nimport layoutConstants from '../constants/layout';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  deleteLayoutForCollection,\r\n  compactCollectionLayouts\r\n} from '../util/layouts';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  gridLayout: [],\r\n  layoutClipboard: [],\r\n  layoutsFetched: false,\r\n  maxColumns: layoutConstants.get('DEFAULT_MAX_COLUMNS'),\r\n  \r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"): \r\n    return state\r\n        .set(\"layoutsFetched\", false)\r\n        .set('gridLayout', Immutable.fromJS([]))\r\n        .set('layoutClipboard', Immutable.fromJS([]))\r\n        .set('maxColumns', Immutable.fromJS(layoutConstants.get('DEFAULT_MAX_COLUMNS')))\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n        .set(\"layoutsFetched\", false)\r\n        .set('gridLayout', Immutable.fromJS([]))\r\n        .set('layoutClipboard', Immutable.fromJS([]))\r\n        .set('maxColumns', Immutable.fromJS(layoutConstants.get('DEFAULT_MAX_COLUMNS')))\r\n  case appConstants.get('FETCH_LAYOUT'):\r\n    return state.set('gridLayout', Immutable.fromJS(action.payload))\r\n      .set('layoutsFetched', true);\r\n\r\n  case appConstants.get('UPDATE_MAX_COLUMNS'):\r\n    return state.set('gridLayout', Immutable.fromJS(action.layout))\r\n      .set('maxColumns', action.width)\r\n\r\n  case appConstants.get('TOGGLE_DRAGGING'):\r\n    return state.set('dragging', !state.get('dragging'));\r\n\r\n  case appConstants.get('DELETE_COLLECTION'):\r\n    return state.set('gridLayout', deleteLayoutForCollection(state.get('gridLayout'), action.payload));\r\n\r\n  case appConstants.get('INSERT_LAYOUT'):\r\n    return state.update('gridLayout', (gridLayout) =>\r\n      gridLayout.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('SAVE_LAYOUT'):\r\n    return state.update('layoutClipboard', (layoutClipboard) =>\r\n      layoutClipboard.push(Immutable.fromJS(action.payload))\r\n    );\r\n\r\n  case appConstants.get('GATHER_ALL_COLLECTIONS'):\r\n    return state.set('gridLayout', Immutable.fromJS(compactCollectionLayouts(state.get('gridLayout'))));\r\n  case appConstants.get(\"UPDATE_LAYOUTS\"):\r\n      // updateLayoutAddMaxHightAndWIdth(state.get('gridLayout'), action.payload)\r\n      return state;\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\n\r\n\r\nconst initialState = Immutable.fromJS({\r\n  projects: [],\r\n  projectFetched: false,\r\n  projectLoaded: false,\r\n  isCreating: false,\r\n  showContextMenu: false,\r\n  showEditBox: false,\r\n  editProject: null,\r\n  selectedProject: null,\r\n  contextMenuPosX: 0,\r\n  contextMenuPosY: 0,\r\n  showProjectContextMenu: false,\r\n  contextMenuSelectedProject: null,\r\n  editing: false,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n    switch (action.type) {\r\n        case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"):\r\n            return state\r\n            .set('projectLoaded', false)\r\n            .set('selectedProject', null)\r\n        case appConstants.get('FETCH_PROJECT'):\r\n\r\n            return state.set('projects', Immutable.fromJS(action.payload.projects))\r\n                .set('projectLoaded', action.payload.db_loaded)\r\n                .set('projectFetched', true)\r\n        case appConstants.get('SELECT_PROJECT'):\r\n            return state.set('projectLoaded', true).set('selectedProject', action.payload)\r\n\r\n        case appConstants.get(\"CREATING_PROJECT\"):\r\n            return state.set(\"isCreating\", !state.get(\"isCreating\"));\r\n        case appConstants.get(\"DELETE_PROJECT\"):\r\n            return state.set('projects', state.get('projects').filter(project => project.get('id') !== action.payload));\r\n        case appConstants.get(\"PROJECT_EDIT_BOX\"):\r\n            return state.set(\"showEditBox\",  !state.get(\"showEditBox\")).set(\"editProject\", action.payload);\r\n        case appConstants.get(\"UPDATE_PROJECT\"):\r\n             const indexOfListToUpdate  = state.get(\"projects\").findIndex(project => {\r\n                 return project.get(\"id\") === action.payload.projectId\r\n             })\r\n            return state.set(\"showEditBox\", false).setIn([\"projects\", indexOfListToUpdate, \"name\"], action.payload.projectName).setIn([\"projects\", indexOfListToUpdate, \"description\"], action.payload.projectDescription);\r\n        case appConstants.get(\"SHOW_PROJECT_CONTEXT_MENU\"):\r\n            return state.set(\"contextMenuPosX\", action.payload.xPos).set(\"contextMenuPosY\",  action.payload.yPos).set(\"showProjectContextMenu\", true).set(\"contextMenuSelectedProject\", action.payload.project);\r\n        case appConstants.get(\"HIDE_PROJECT_CONTEXT_MENU\"):\r\n            return state.set(\"contextMenuPosX\", 0).set(\"contextMenuPosY\",  0).set(\"showProjectContextMenu\", false).set(\"contextMenuSelectedProject\", null);\r\n        default:\r\n            return state;\r\n  }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  user: {},\r\n  user_fechted : false\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get('FETCH_USER'):\r\n    return state.set('user', Immutable.fromJS(action.payload)) \r\n  case appConstants.get('NOT_FETCH_USER'):\r\n    return state.set('user_fechted',!state.get(\"user_fechted\"));  \r\n  default:\r\n    return state;\r\n  }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  connected: false,\r\n  websocket: null\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  \tswitch (action.type) {\r\n\r\n\t  case appConstants.get('OPEN_WEB_SOCKET_CONNECTION'):\r\n\t    return Immutable.fromJS({\r\n\t      connected: true,\r\n\t\t});\r\n\t\t\r\n\t  case appConstants.get('SET_NEW_WEBSOCKET'):\r\n\t  \treturn Immutable.fromJS({\r\n\t      websocket : action.payload,\r\n\t\t});\r\n\t\t\r\n\t  default:\r\n\t    return state;\r\n  \t}\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  headerShow: false,\r\n  listShow: false,\r\n  headerX: 0,\r\n  headerY: 0,\r\n  showDStarMenu: false,\r\n  showCollectionList: false\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"):\r\n    return state\r\n    .set('headerShow', false)\r\n    .set('headerX', 0)\r\n    .set('headerY', 0);\r\n  case appConstants.get('SHOW_HEADER'):\r\n    return state.set('headerShow', true)\r\n      .set('headerX', action.headerX)\r\n      .set('headerY', action.headerY);\r\n\r\n  case appConstants.get('HIDE_HEADER'):\r\n    return state.set('headerShow', false)\r\n      .set('headerX', 0)\r\n      .set('headerY', 0);\r\n\r\n  case appConstants.get('SHOW_SINK_LIST'):\r\n    return state.set('listShow', true);\r\n\r\n  case appConstants.get('HIDE_SINK_LIST'):\r\n    return state.set('listShow', false);\r\n  case appConstants.get('UPDATE_SHOW_DSTAR_MENU'):\r\n    return state.set(\"showDStarMenu\", !state.get(\"showDStarMenu\"));\r\n  case appConstants.get(\"UPDATE_SHOW_COLLECTION_MENU\"):\r\n    return state.set(\"showCollectionList\", !state.get(\"showCollectionList\"))\r\n  default: \r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  successes: [],\r\n  warnings: [],\r\n  errors: [],\r\n  showHistory: false,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n  case appConstants.get(\"RESET_STATE_ON_BACK_ARROW\"):\r\n    return state\r\n      .set(\"successes\", Immutable.fromJS([]))\r\n      .set(\"warnings\", Immutable.fromJS([]))\r\n      .set(\"errors\", Immutable.fromJS([]))\r\n      .set(\"showHistory\", false)\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n  case appConstants.get('HANDLE_SUCCESS'):\r\n    return state.update('successes',\r\n      (successes) => successes.push(Immutable.fromJS(action.payload)));\r\n\r\n  case appConstants.get('HANDLE_WARNING'):\r\n    return state.update('warnings',\r\n      (warnings) => warnings.push(Immutable.fromJS(action.payload))\r\n        .set('cursorChange', true));\r\n\r\n  case appConstants.get('HANDLE_ERROR'):\r\n    return state.update('errors',\r\n      (errors) => errors.push(Immutable.fromJS(action.payload))\r\n        .set('cursorChange', true)\r\n        .set('freezeApp', true));\r\n\r\n  case appConstants.get('TOGGLE_HISTORY'):\r\n    return state.set('showHistory', !state.get('showHistory'));\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  showSettings: false,\r\n  alternativeImageSize: 180,\r\n  collectionCompactionType: 'none',\r\n  preventCollision: true,\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n      return state\r\n              .set('showSettings', false)\r\n    case appConstants.get('FETCH_SETTINGS'):\r\n      return state\r\n        .set('alternativeImageSize', Immutable.fromJS(action.payload.alternativeImageSize))\r\n        .set('collectionCompactionType', Immutable.fromJS(action.payload.collectionCompactionType))\r\n        .set('preventCollision', Immutable.fromJS(action.payload.preventCollision));\r\n\r\n    case appConstants.get('TOGGLE_SETTINGS'): \r\n      return state.set('showSettings', !state.get('showSettings'));\r\n\r\n    case appConstants.get('SET_ALTERNATIVE_SIZE'):\r\n        return state.set('alternativeImageSize', action.payload);\r\n\r\n    case appConstants.get('SET_COMPACTION_TYPE'):\r\n        return state.set('collectionCompactionType', action.payload);\r\n\r\n    case appConstants.get('SET_COLLISION_PREVENTION'):\r\n        return state.set('preventCollision', action.payload);\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};","/**\r\n * remove an element (with id = queryId) from the queries list\r\n * @param {ImmutableList} queries\r\n * @param {string} queryId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchQueriesNotID = (queries, queryId) => (\r\n    queries.filter((query) => query.get('id') !== queryId)\r\n  );\r\n\r\n/**\r\n * remove an element (with id = brushId) from the brushes list\r\n * @param {ImmutableList} brushes\r\n * @param {string} brushId\r\n * @return {ImmutableList}\r\n */\r\nexport const fetchBrushesNotID = (brushes, brushId) => (\r\n  brushes.filter((brush) => brush.get('id') != brushId)\r\n);","import appConstants from '../constants/appConstants';\r\nimport {\r\n  fetchQueriesNotID,\r\n  fetchBrushesNotID,\r\n} from '../util/queries';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    queries: [],\r\n    brushes: [],\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n  switch (action.type) {\r\n    case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n              .set('queries', Immutable.fromJS([]))\r\n              .set('brushes',  Immutable.fromJS([]))\r\n    case appConstants.get('ADD_QUERY'): \r\n      return state.update('queries', (queries) => queries.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('REMOVE_QUERY'): \r\n      return state.set('queries', fetchQueriesNotID(state.get('queries'), action.payload.queryId));\r\n    \r\n    case appConstants.get('CLEAR_ALL_QUERIES'): \r\n      return state.update('queries', (queries) => queries.clear());\r\n    \r\n    case appConstants.get('ADD_BRUSH'): \r\n      return state.update('brushes', (brushes) => brushes.push(Immutable.fromJS(action.payload)));\r\n\r\n    case appConstants.get('REMOVE_BRUSH'): \r\n      return state.set('brushes', fetchBrushesNotID(state.get('brushes'), action.payload.queryId));\r\n    \r\n    case appConstants.get('CLEAR_ALL_BRUSHES'): \r\n      return state.update('brushes', (brushes) => brushes.clear());\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  keySets: [],\r\n  valueBands: [],\r\n});\r\n\r\nexport default (state = initialState, action={}) => {\r\n\r\n  switch (action.type) {\r\n  case appConstants.get(\"FETCHING_PROJECT\"):\r\n    return state\r\n              .set('keySets', Immutable.fromJS([]))\r\n              .set('valueBands',  Immutable.fromJS([]))\r\n  case appConstants.get('FETCH_KEY_SETS'):\r\n    return state.set('keySets', Immutable.fromJS(action.payload));\r\n\r\n  case appConstants.get('FETCH_VALUE_BANDS'):\r\n    return state.set('valueBands', Immutable.fromJS(action.payload));\r\n\r\n  case appConstants.get('SET_VALUE_BANDS'):\r\n    return state.setIn(['valueBands', action.payload.dim, action.payload.end], Immutable.fromJS(action.payload.val));\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    showSearch: false,\r\n    showValidation: false,\r\n    missMatchCollectionNames: [],\r\n})\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch(action.type){\r\n        case appConstants.get(\"FETCHING_PROJECT\"):\r\n            return state\r\n                    .set('showSearch', false)\r\n                    .set('showValidation', false)\r\n                    .set(' missMatchCollectionNames', Immutable.fromJS([]))\r\n        case appConstants.get('TOGGLE_SEARCH'):\r\n            return state.set(\"showSearch\", !state.get(\"showSearch\")).set(\"showValidation\", false);\r\n\r\n        case appConstants.get(\"SEARCH_COLLECTION_FALID\"):\r\n            return state.set(\"showValidation\", true).set('missMatchCollectionNames', Immutable.fromJS(action.payload));\r\n\r\n        case appConstants.get(\"EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH\"):\r\n            return state.set(\"missMatchCollectionNames\", []);\r\n\r\n        case appConstants.get(\"SEARCHED_COLLECTION\"):\r\n            return state.set(\"showValidation\", false);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n    user: {},\r\n    userFetched: false,\r\n    userLoggedIn: false,\r\n})\r\n\r\n\r\nexport default (state = initialState, action={}) => {\r\n    switch(action.type) {\r\n        \r\n        case appConstants.get('FETCH_USER'):\r\n            return state.set('user', Immutable.fromJS(action.payload)).set(\"userFetched\", true).set(\"userLoggedIn\", true);\r\n\r\n        case appConstants.get('NOT_FETCH_USER'):\r\n            return state.set('userFetched', false);\r\n\r\n        case appConstants.get(\"LOGOUT_USER\"):\r\n            return state.set(\"userLoggedIn\", false).set('user', Immutable.fromJS({})).set(\"userFetched\", false)\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n} ","import {combineReducers} from 'redux';\r\nimport collections from './collections';\r\nimport alternatives from './alternatives';\r\nimport layouts from './layout';\r\nimport projects from './projects';\r\nimport user from './user'\r\nimport websocket from './websocket';\r\nimport header from './header';\r\nimport notifications from './notifications';\r\nimport settings from './settings';\r\nimport queries from './queries';\r\nimport scales from './scales';\r\nimport search from './search';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  collections,\r\n  alternatives,\r\n  layouts,\r\n  projects,\r\n  user,\r\n  websocket,\r\n  header,\r\n  notifications,\r\n  settings,\r\n  queries,\r\n  scales,\r\n  search,\r\n  auth,\r\n});\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport app from './reducers/app';\r\n\r\n// const composeEnhancers = compose;\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n\treturn createStore(\r\n\t\tapp, /* preloadedState, */ \r\n\t\tcomposeEnhancers(\r\n\t\t\tapplyMiddleware(thunk)\t\t\r\n\t\t)\r\n\t);\r\n}","import React, {PureComponent} from 'react';\r\nimport * as THREE from 'three';\r\nimport * as GLTFLoader from 'three-gltf-loader';\r\nimport {urls} from '../../constants/urls';\r\n\r\nconst OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\n/**\r\n * @class Scene\r\n * @extends React.Component\r\n * @description scene component renders a 3d view of the alternative using three.js library\r\n */\r\nclass Scene extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color(0xededed);\r\n\r\n    this.camera = new THREE.PerspectiveCamera(80, 1, 0.001, 1000);\r\n    this.scene.add(this.camera);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\r\n    this.renderer.setSize(this.props.width, this.props.height);\r\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\r\n\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.renderer.domElement.setAttribute('style', this.props.customStyle);\r\n    this.initializeOrbits();\r\n\r\n    this.loader = new GLTFLoader();\r\n    this.loader.load(urls.get('getHost') + this.props.gltf, (gltf) => {\r\n      this.scene.add(gltf.scene);\r\n      this.scene.add(new THREE.AmbientLight( 0xd60000));\r\n      this.scene.traverse((child) => {\r\n        if (child instanceof THREE.Mesh) {\r\n          child.geometry.center();\r\n          child.material = new THREE.MeshPhongMaterial({\r\n            color: 0x4f0303,\r\n            emissive: 0x000000,\r\n            shading: THREE.FlatShading,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n            polygonOffsetUnits: 1,\r\n          });\r\n        }\r\n        this.initializeCamera();\r\n      });\r\n    });\r\n\r\n    this.animate();\r\n\r\n    window.onresize = () => {\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n      this.renderer.setSize(width, height);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.frameId);\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  initializeOrbits = () => {\r\n    this.controls.rotateSpeed = 1.0;\r\n    this.controls.zoomSpeed = 1.2;\r\n    this.controls.panSpeed = 0.8;\r\n  }\r\n\r\n  initializeCamera = () => {\r\n    const object = this.scene.children[1].children[0];\r\n    const offset = 20;\r\n    const boundingBox = new THREE.Box3();\r\n\r\n    // set bounding box of object\r\n    // this will be used to setup controls and camera\r\n    boundingBox.setFromObject( object ); \r\n\r\n    // const center = boundingBox.getCenter();\r\n    const size = boundingBox.getSize();\r\n\r\n    // get the max side of the bounding box (fits to width OR height as needed )\r\n    const maxDim = Math.max( size.x, size.y, size.z );\r\n    const fov = this.camera.fov * ( Math.PI / 180 );\r\n\r\n    let cameraZ = Math.abs( maxDim / 4 * Math.tan( fov * 2 ) );\r\n    cameraZ *= offset; // zoom out a little so that objects don't fill the screen\r\n    this.camera.position.z = cameraZ;\r\n\r\n    const minZ = boundingBox.min.z;\r\n    const cameraToFarEdge = ( minZ < 0 ) ? -minZ + cameraZ : cameraZ - minZ;\r\n\r\n    this.camera.far = cameraToFarEdge * 3;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  animate = () => {\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n    this.renderer.setPixelRatio( window.devicePixelRatio );\r\n    this.renderer.gammaOutput = true;\r\n    this.renderer.gammaFactor = 2.2;\r\n\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  handleControls = (e) => {\r\n    e.stopPropagation();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseDownCapture={this.handleControls}\r\n        className = \"boardCanvas\"\r\n        ref={(mount) => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","import Alternative from './Alternative';\r\n\r\nexport default Alternative;\r\n","import React, {PureComponent} from 'react';\r\nimport styles from './alternative.module.scss';\r\nimport classnames from 'classnames';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport {getAlternativeImageURL} from '../../../util/alternatives';\r\nimport Scene from '../../scene/Scene';\r\nimport {\r\n  MdRemoveRedEye,\r\n  MdClear,\r\n} from 'react-icons/md';\r\nimport debounce from 'lodash/debounce';\r\nimport { fromJS } from 'immutable';\r\n\r\n// TODO: test: functional component\r\n\r\n/**\r\n * @class Alternative\r\n * @extends React.PureComponent\r\n * @description presentational component for a single alternative in a collection\r\n */\r\nclass Alternative extends PureComponent {\r\n\r\n  state = {\r\n    transform: null,\r\n    left: 0,\r\n    top: 0,\r\n    wasDragged: false,\r\n  }\r\n  /**\r\n   * @function toggleAltView\r\n   * @description switches the 3d-view for the alternative with the viewID\r\n   * @memberof Alternative\r\n   * @param {event} e\r\n   */\r\n  toggleAltView = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.props.toggleAltView(this.props.alternative.get('viewId'));\r\n  }\r\n\r\n\r\n  \r\n /**\r\n  * @function handleDoubleClick\r\n  * @description restores the alternative (i.e. round-trip)\r\n  * @memberof Alternative\r\n  * @param {event} e\r\n  */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.restoreAlternative(this.props.alternative.get('viewId'));\r\n\r\n  }\r\n\r\n  handleHover = (hasEntered, e) => {\r\n      if (hasEntered) {\r\n        this.props.hoverAlternative(this.props.alternative.get('viewId'), this.props.alternative.get('refId'));\r\n      } else {\r\n        this.props.dehoverAlternative(this.props.alternative.get('viewId'), this.props.alternative.get('refId'));\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @function handleDeleteClick\r\n   * @description deletes **this** alternative\r\n   * @memberof Alternative\r\n   * @param {event} e - triggering event\r\n   */\r\n  handleDeleteClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.props.removeAlternativesFromCollection(fromJS([this.props.alternative.toJS()]));\r\n  }\r\n\r\n  /**\r\n   * @function handleDragStart\r\n   * @description prevents the ghost image during dragging\r\n   * @memberof Alternative\r\n   * @param {event} e - drag event\r\n   */\r\n  handleDragStart = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  move = (e) => {\r\n    const element = document.getElementById(this.props.alternative.get(\"viewId\"))\r\n    if (element != null && this.state.top && this.state.left) {\r\n      if (this.state.left !== element.style.left || this.state.top !== element.style.top) {\r\n        let topState    = this.state.top.replace(\"px\", \"\");\r\n        let leftState   = this.state.left.replace(\"px\", \"\");\r\n        let elementTop  = element.style.top.replace(\"px\", \"\");\r\n        let elementLeft = element.style.left.replace(\"px\", \"\");\r\n        \r\n        topState     = parseInt(topState);\r\n        leftState    = parseInt(leftState);\r\n        elementTop   = parseInt(elementTop);\r\n        elementLeft  = parseInt(elementLeft);\r\n        let topDiff  =  topState  >=  elementTop  ?   topState  -  elementTop  : elementTop  - topState;\r\n        let leftDiff =  leftState >= elementLeft  ?   leftState  -  elementLeft : elementLeft - leftState;  \r\n\r\n        if (topDiff >= 6 || leftDiff >= 6) {\r\n          if (!this.state.wasDragged) {\r\n            this.setState({\r\n              wasDragged:  true,\r\n            });\r\n          }\r\n        }   \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {Object} e\r\n   *  \r\n   */\r\n  handleMouseDown = (e) => {\r\n    const el=e.target\r\n    const element = document.getElementById(this.props.alternative.get(\"viewId\"))\r\n\r\n    this.setState({\r\n      transform: element.style.transform,\r\n      left:  element.style.left,\r\n      top: element.style.top\r\n    })\r\n    el.addEventListener('mousemove',this.move, true)\r\n  }\r\n\r\n \r\n/**\r\n * \r\n * @param {object} e\r\n * \r\n */\r\n  handleMouseUp = (e) => {\r\n    e.stopPropagation();\r\n    const el=e.target\r\n    if (this.props.alternative.get('altView') === false  && !this.state.wasDragged) {\r\n      if (!this.props.alternative.get('isSelected')) {\r\n        this.props.selectAlternative(this.props.alternative.get('viewId'));\r\n      } else {\r\n        this.props.deselectAlternative(this.props.alternative.get('viewId'));\r\n      }\r\n    } else {\r\n      this.setState({\r\n        top: 0,\r\n        left: 0,\r\n        wasDragged: false,\r\n      });\r\n      el.removeEventListener('mousemove', this.move, true)\r\n    }  \r\n  }\r\n\r\n  /**\r\n   * @description The component should render the view for a single alternative.\r\n   * @returns {ReactPureComponent} an alternative component\r\n   */\r\n  render() {\r\n    // this is to figure out which style to apply to the current alternative\r\n    // alternative selected has a highlit border, other alternatives with the same (ref) id\r\n    // are highlighted with a more muted border. See _colors.scss in styles folder\r\n    let situation = 'C';\r\n\r\n    if (this.props.alternative.get('isSelected')) {\r\n      situation = 'A'\r\n    } else if (!this.props.alternative.get('isSelected') && this.props.selectedAlts.includes(this.props.alternative.get('refId'))) {\r\n      situation = 'B'\r\n    }\r\n \r\n    const selectStyleName = classnames({\r\n      [styles['alternative']]: situation === 'C',\r\n      [styles['alternative-selected']]: situation === 'A',\r\n      [styles['alternative-selected-related']]: situation === 'B',\r\n    });\r\n\r\n    let altWidth = this.props.layoutForAlt ? this.props.layoutForAlt.w : 1;\r\n    let altHeight = this.props.layoutForAlt ? this.props.layoutForAlt.h : 1;\r\n    \r\n    const altDimensionStyle = {width: (this.props.alternativeImageSize - 12) * altWidth, height: (this.props.alternativeImageSize - 20) * altHeight};\r\n    const imgDimensionStyle = {width: (this.props.alternativeImageSize - 22) * altWidth, height: (this.props.alternativeImageSize - 30) * altHeight};\r\n    const loadingDimensionStyle = {marginTop: '37.5%', marginLeft: '37.5%'};\r\n\r\n    return (\r\n      <div\r\n        id={this.props.alternative.get('viewId')}\r\n        className={\"alt \" + \"alt-ref-\" + this.props.alternative.get(\"refId\") + \" alt-view-\" + this.props.alternative.get('viewId') + \" \" + selectStyleName}\r\n        style={altDimensionStyle}\r\n        onDoubleClick={this.handleDoubleClick}\r\n        onMouseEnter={debounce(this.handleHover.bind(this, true))} \r\n        onMouseLeave={debounce(this.handleHover.bind(this, false))}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        {(situation === 'A' || situation === 'E') && this.props.alternative.get('isLoading') === false ? \r\n          <MdRemoveRedEye className={styles['alternative-toggle1']} onMouseUp={this.toggleAltView} /> : null}\r\n        {(situation === 'A' || situation === 'E') && this.props.alternative.get('isLoading') === false ? \r\n          <MdClear className={styles['alternative-toggle2']}  onMouseUp={this.handleDeleteClick}/> : null}\r\n        <div>\r\n          {this.props.alternative.get('altView') && (situation === 'A' || situation === 'E') ?\r\n            <Scene width={imgDimensionStyle.width} height={imgDimensionStyle.height} customStyle = {'padding: 5px'} \r\n              className={styles['alternative-image']} \r\n              gltf={this.props.alternative.get('gltf')} \r\n              id={this.props.alternative.get('altView')}/> : \r\n              this.props.alternative.get('isLoading') === true ? \r\n              <div><CircularProgress style={loadingDimensionStyle}/></div> : \r\n            <img \r\n              onDragStart={this.handleDragStart} // to prevent dragging ghost image\r\n              src={getAlternativeImageURL(this.props.alternative)}\r\n              style={imgDimensionStyle}\r\n              className={styles['alternative-image']}\r\n              alt={'img-' + this.props.alternative.get('viewId')}\r\n            />\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alternative;\r\n","import React, {PureComponent} from 'react';\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport styles from './alternatives.module.scss';\r\nimport Alternative from './alternative';\r\nimport {generateLayoutForAlternatives} from '../../util/alternatives';\r\nimport {calculateWidth} from '../../util/collections';\r\nimport layoutConstants from '../../constants/layout';\r\n\r\n/**\r\n * @class Alternatives\r\n * @extends React.PureComponent\r\n * @description presentational component of the all the alternatives within the collection. all alternatives are rendered within a react-grid to enable drag & drop\r\n */\r\nclass Alternatives extends PureComponent {\r\n  /**\r\n   * @constructor\r\n   * @param {object} props - component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      layouts: [],\r\n      // wasDragged: false,\r\n    }\r\n  }\r\n  componentDidMount(){\r\n\r\n    const width = calculateWidth(this.props.layoutForCollection.get('w'), 5, layoutConstants.get('CELL_DIM'), 0);\r\n    const numColumns = Math.floor((width - 40) / 170);\r\n    const alternativesLayout = generateLayoutForAlternatives(\r\n      this.props.altsId,\r\n      numColumns\r\n    );\r\n\r\n    this.props.handleAltsLayout(alternativesLayout.toJS())\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.layoutForCollection.get(\"w\") != prevProps.layoutForCollection.get(\"w\")){\r\n      let width = calculateWidth(this.props.layoutForCollection.get('w'), 5, layoutConstants.get('CELL_DIM'), 0);\r\n      let numColumns = Math.floor((width - 40) / 170);\r\n      let alternativesLayout = generateLayoutForAlternatives(\r\n          this.props.altsId,\r\n          numColumns\r\n        );\r\n      this.props.handleAltsLayout(alternativesLayout.toJS())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function renderAlternatives\r\n   * @description Using viewId for key's as key must be unique for each item rendered\r\n   * @memberof Alternatives\r\n   * @param {ImmutableList} alternativesInCollection - a alist of alternative viewIDs in the collection\r\n   * @param {Object} props\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  renderAlternatives = (alternativesInCollection, props={}) => (\r\n    alternativesInCollection.map((alternative) => (\r\n      <div \r\n          key={alternative.get('viewId')}\r\n          data-grid={this.props.layoutsForAlts.toJS().find((l) => {return l.i === alternative.get('viewId')})}>\r\n        <Alternative\r\n          isResizable={true} \r\n          alternative={alternative}\r\n          key={alternative.get('viewId')}\r\n          layoutForAlt={this.props.layoutsForAlts.toJS().find((l) => {return l.i === alternative.get('viewId')})}          \r\n          {...props} />\r\n      </div>\r\n    )));\r\n\r\n  /**\r\n   * @function onLayoutChange\r\n   * @description updates the collection layouts when triggered\r\n   * @memberof Alternatives\r\n   * @param {object} layout - a ReactGridLayout layout object\r\n   */\r\n  onLayoutChange = (layout) => {\r\n    this.setState({layouts: layout});\r\n  }\r\n\r\n  // handleAltDrag = (object) => {\r\n  //   if(!this.state.wasDragged){\r\n  //     this.setState({\r\n  //       wasDragged: true,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // changeWasDragged = () => {\r\n  //   this.setState({\r\n  //     wasDragged: false,\r\n  //   })\r\n  // }\r\n\r\n  /**\r\n   * @description renders the view for all the alternatives within the collections. ReactGridLayout is used to allow for drag within the collections\r\n   * @returns {ReactPureComponent} all alternative components as ReactGridLayout items\r\n   */\r\n  render() {\r\n    // what the width should be\r\n    const width = calculateWidth(this.props.layoutForCollection.get('w'), 5, layoutConstants.get('CELL_DIM'), 0);\r\n    const numColumns = Math.floor((width - 40) / 170);\r\n    \r\n    const alternativesLayout = generateLayoutForAlternatives(\r\n      this.props.altsInCollection.map(alt => alt.get('viewId')),\r\n      numColumns\r\n    );\r\n    \r\n    return (\r\n      <ReactGridLayout\r\n        width={numColumns * this.props.alternativeImageSize}\r\n        rowHeight={(this.props.alternativeImageSize - 20)}\r\n        isResizable\r\n        cols= {numColumns}\r\n        onLayoutChange={this.onLayoutChange}\r\n        className={styles['alternative-container']}\r\n        item={this.props.altsInCollection.size}\r\n        compactType={'horizontal'}\r\n        margin={[10, 10]}\r\n        containerPadding={this.margin}\r\n        layout={this.props.layoutsForAlts.toJS()}\r\n        useCSSTransforms={false}\r\n      >\r\n        {this.renderAlternatives(this.props.altsInCollection, {\r\n          alternativeImageSize: this.props.alternativeImageSize,\r\n          selectAlternative: this.props.selectAlternative,\r\n          deselectAlternative: this.props.deselectAlternative,          \r\n          hoverAlternative: this.props.hoverAlternative,\r\n          dehoverAlternative: this.props.dehoverAlternative,\r\n          removeAlternativesFromCollection: this.props.removeAlternativesFromCollection,\r\n          toggleAltView: this.props.toggleAltView,\r\n          restoreAlternative: this.props.restoreAlternative,\r\n          selectedAlts: this.props.selectedAlts,\r\n        })}\r\n      </ReactGridLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alternatives;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Alternatives from '../components/alternatives/Alternatives';\r\nimport { renderIf } from '../util/util';\r\n\r\nclass AlternativeContainer extends Component {\r\n    render() {\r\n        return (\r\n            renderIf(\r\n                this.props.alternativeImageSize,\r\n                <Alternatives {...this.props} />\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alternativeImageSize: state.settings.get('alternativeImageSize'),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AlternativeContainer);","import React, { PureComponent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n/**\r\n * @class MessageBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the messageBox pane, which is a popup window\r\n */\r\nclass MessageBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true,\r\n          pressedOk: false, \r\n          pressedcancel: false,\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @function handleOk\r\n   * @memberof messageBox\r\n   * @description confirming or cancelling the popup window content\r\n   */\r\n  handleOk = () => {\r\n    if (this.props.confirmAction != null) {\r\n      this.props.confirmAction();\r\n    }\r\n    \r\n    this.setState({open: false});\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({open: false});\r\n    if(this.props.confirmAction != null) {\r\n      this.props.handleDeleteCancel();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @description renders the view for messageBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Warning\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.props.message}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleCancel} color=\"primary\" >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleOk} color=\"primary\" autoFocus>\r\n                  OK\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default MessageBox;","import * as React from \"react\";\r\n\r\nfunction SvgDeselct(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"2em\"\r\n      height=\"2em\"\r\n      viewBox=\"0 0 22 22\"\r\n      {...props}\r\n    >\r\n      <g transform=\"translate(-27.925 -195.133)\">\r\n        <circle\r\n          cy={206.133}\r\n          cx={38.925}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n        <title id=\"title\">{props.title}</title>\r\n        <path d=\"M33.685 201.132v2.023h1.12v-.97h1.141v-1.053zm4.262 0v1.053h1.955v-1.053zm3.956 0v1.053h1.202v.97h1.06v-2.023zm-8.218 4.023v1.956h1.12v-1.956zm9.42 0v1.956h1.06v-1.956zm-9.42 3.956v2.023h2.261v-.888h-1.142v-1.135zm9.42 0v1.135h-1.202v.888h2.261v-2.023zm-5.158 1.135v.888h1.955v-.888zM37.31 203.251l4.497 4.497-1.267 1.266-4.496-4.496z\" />\r\n        <path d=\"M41.807 204.518l-4.497 4.496-1.266-1.266 4.496-4.497z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDeselct;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgHelp(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"2em\"\r\n      height=\"2em\"\r\n      viewBox=\"0 0 22 22\"\r\n      {...props}\r\n    >\r\n      <g transform=\"translate(-215.4 -82.496)\">\r\n      <title id=\"title\">{props.title}</title>\r\n        <circle\r\n          cx={226.401}\r\n          cy={93.496}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n        <circle\r\n          cy={93.496}\r\n          cx={226.401}\r\n          r={6.032}\r\n          fill=\"none\"\r\n          stroke=\"#020008\"\r\n          strokeWidth={0.936}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n        />\r\n        <text\r\n          y={97.29}\r\n          x={223.67}\r\n          style={{\r\n            lineHeight: 1.25,\r\n            InkscapeFontSpecification: \"'Avenir Next, Medium'\",\r\n            fontVariantLigatures: \"normal\",\r\n            fontVariantCaps: \"normal\",\r\n            fontVariantNumeric: \"normal\",\r\n            fontVariantEastAsian: \"normal\",\r\n          }}\r\n          fontWeight={500}\r\n          fontSize={10.583}\r\n          fontFamily=\"Avenir Next\"\r\n          strokeWidth={0.265}\r\n        >\r\n          <tspan\r\n            style={{\r\n              InkscapeFontSpecification: \"'Avenir Next, Medium'\",\r\n              fontVariantLigatures: \"normal\",\r\n              fontVariantCaps: \"normal\",\r\n              fontVariantNumeric: \"normal\",\r\n              fontVariantEastAsian: \"normal\",\r\n            }}\r\n            y={97.29}\r\n            x={223.67}\r\n          >\r\n            {\"?\"}\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgHelp;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgLog(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 22 22\"\r\n      height=\"2em\"\r\n      width=\"2em\"\r\n      {...props}\r\n    >\r\n      <g transform=\"translate(-215.4 -82.496)\">\r\n        <circle\r\n          cy={93.496}\r\n          cx={226.401}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n        <g transform=\"matrix(1.18675 0 0 1.21002 -43.534 -19.636)\">\r\n          <path d=\"M223.522 92.396v.014a1.1 1.1 0 01.172-.014zm.176 0a1.1 1.1 0 011.1 1.1 1.1 1.1 0 01-1.096 1.1h8.82v-.002a1.1 1.1 0 00.071.002 1.1 1.1 0 001.1-1.1 1.1 1.1 0 00-1.1-1.1 1.1 1.1 0 00-.071.003v-.003zm-.176 2.186v.014h.176a1.1 1.1 0 01-.176-.014z\" />\r\n          <circle r={1.1} cy={93.496} cx={222.323} />\r\n        </g>\r\n        <g transform=\"matrix(1.18675 0 0 1.21002 -43.534 -23.466)\">\r\n          <path d=\"M223.522 92.396v.014a1.1 1.1 0 01.172-.014zm.176 0a1.1 1.1 0 011.1 1.1 1.1 1.1 0 01-1.096 1.1h8.82v-.002a1.1 1.1 0 00.071.002 1.1 1.1 0 001.1-1.1 1.1 1.1 0 00-1.1-1.1 1.1 1.1 0 00-.071.003v-.003zm-.176 2.186v.014h.176a1.1 1.1 0 01-.176-.014z\" />\r\n          <circle cx={222.323} cy={93.496} r={1.1} />\r\n        </g>\r\n        <g transform=\"matrix(1.18675 0 0 1.21002 -43.534 -15.807)\">\r\n          <path d=\"M223.522 92.396v.014a1.1 1.1 0 01.172-.014zm.176 0a1.1 1.1 0 011.1 1.1 1.1 1.1 0 01-1.096 1.1h8.82v-.002a1.1 1.1 0 00.071.002 1.1 1.1 0 001.1-1.1 1.1 1.1 0 00-1.1-1.1 1.1 1.1 0 00-.071.003v-.003zm-.176 2.186v.014h.176a1.1 1.1 0 01-.176-.014z\" />\r\n          <circle cx={222.323} cy={93.496} r={1.1} />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgLog;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSink(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 22 22\"\r\n      height=\"2em\"\r\n      width=\"2em\"\r\n      {...props}\r\n    >\r\n      <defs>\r\n        <marker\r\n          id=\"sink_svg__a\"\r\n          refX={0}\r\n          refY={0}\r\n          orient=\"auto\"\r\n          overflow=\"visible\"\r\n        >\r\n          <title id=\"title\">{props.title}</title>\r\n          <path\r\n            d=\"M-5.231-2.42L1.324-.01-5.23 2.401c1.047-1.423 1.041-3.37 0-4.821z\"\r\n            fillRule=\"evenodd\"\r\n            stroke=\"#000\"\r\n            strokeWidth={0.375}\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </marker>\r\n      </defs>\r\n      <g transform=\"translate(-95.204 -137.68)\">\r\n        <circle\r\n          cy={148.681}\r\n          cx={106.204}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n        <path d=\"M100.173 153.911h12.062v.898h-12.062z\" />\r\n        <path\r\n          d=\"M105.827 141.12v9.316\"\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth={0.72}\r\n          strokeMiterlimit={3.7}\r\n          markerEnd=\"url(#sink_svg__a)\"\r\n          transform=\"translate(.371 1.431)\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSink;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCollection(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 22 22\"\r\n      height=\"2em\"\r\n      width=\"2em\"\r\n      {...props}\r\n    >\r\n    \r\n      <g transform=\"translate(-138.277 -17.627)\">\r\n        <g stroke=\"#1d1d1b\" strokeWidth={0.2}>\r\n          <title id=\"title\">{props.title}</title>\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M137.583 17.198h2.646v2.646h-2.646zM141.552 17.198h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"#1d1d1b\"\r\n            d=\"M145.521 17.198h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M137.583 21.167h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"#1d1d1b\"\r\n            d=\"M141.552 21.167h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M145.521 21.167h2.646v2.646h-2.646zM137.583 25.135h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"#1d1d1b\"\r\n            d=\"M141.552 25.135h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M145.521 25.135h2.646v2.646h-2.646z\"\r\n            transform=\"matrix(1.11029 0 0 1.18728 -9.356 1.926)\"\r\n          />\r\n        </g>\r\n        <circle\r\n          cx={149.277}\r\n          cy={28.627}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCollection;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgBrush(props) {\r\n  return (\r\n    <svg viewBox=\"1 1 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"brush_svg__cls-15\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={2.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.704 6.757h6.876\"\r\n      />\r\n      <path\r\n        className=\"brush_svg__cls-1\"\r\n        d=\"M12.924 6.754h.688a.69.69 0 01.688.688v1.374a.69.69 0 01-.688.688h-3.313a1.445 1.445 0 00-1.5 1.373v1.378\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.265}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"brush_svg__cls-16\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={1.587}\r\n        strokeLinecap=\"round\"\r\n        strokeMiterlimit={10}\r\n        d=\"M8.799 12.599v2.408\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgBrush;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCartesianProduct(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.825 8.042L7.94 3.928\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-7\"\r\n        d=\"M4.145 7.722l-.251-1.028h-.038l-.629 1.459-.85 1.33 1.33-.85 1.46-.629V7.97zM7.62 4.244l-1.029-.248v-.038l1.46-.629 1.333-.853-.853 1.333-.618 1.46H7.88z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M7.94 8.042L3.825 3.928\"\r\n      />\r\n      <path\r\n        className=\"CartesianProduct_svg__cls-7\"\r\n        d=\"M7.62 7.722l-1.029.252v.034l1.46.633 1.333.85-.853-1.33-.618-1.448H7.88zM4.145 4.248l-.251 1.028H3.86l-.633-1.459-.85-1.333 1.33.853 1.46.629V4z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCartesianProduct;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCoords(props) {\r\n  return (\r\n    <svg viewBox=\"2 0 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.104 4.858v7.885M7.958 4.858v7.885\"\r\n      />\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        strokeDasharray=\"1.6,1.6\"\r\n        d=\"M9.813 4.858v7.885M11.67 4.858v7.885\"\r\n      />\r\n      <path\r\n        className=\"coords_svg__cls-4\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.529}\r\n        strokeMiterlimit={10}\r\n        d=\"M13.525 4.858v7.885\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCoords;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDirectEditRef(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M11.488 5.336h-1.265v-.87h1.265V3.16h.895v1.307h1.265v.869h-1.265v1.306h-.895z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.28575}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.355 1.499H1.734v5.57\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M5.86 1.495l-.644 1.021.035.023 1.68-.667 1.752-.38-1.752-.382L5.25.444l-.035.019z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.28575}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.677 13.649h4.618v-5.57\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-7\"\r\n        d=\"M6.192 13.649l.624-1.029-.034-.023-1.684.667-1.752.381 1.752.381 1.68.667h.035z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.554 11.824V3.233\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={8.554}\r\n        cy={6.673}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M5.868 11.824V3.233\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={5.868}\r\n        cy={9.092}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"directEditRef_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.25 3.233v8.591\"\r\n      />\r\n      <circle\r\n        className=\"directEditRef_svg__cls-9\"\r\n        cx={3.25}\r\n        cy={8.216}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDirectEditRef;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEditRef(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.839 10.432V1.841\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={8.839}\r\n        cy={5.281}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.153 10.432V1.841\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={6.153}\r\n        cy={7.7}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"edirRef_svg__cls-10\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.536 1.841v8.591\"\r\n      />\r\n      <circle\r\n        className=\"edirRef_svg__cls-11\"\r\n        cx={3.536}\r\n        cy={6.824}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.572}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEditRef;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEditClone(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"editClone_svg__cls-7\"\r\n        d=\"M9.474 4.236H8.213v-.873h1.26V2.06h.896v1.303h1.261v.873h-1.26v1.303h-.9z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.54 10.724V2.129\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={6.54}\r\n        cy={5.573}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.858 10.724V2.129\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={3.858}\r\n        cy={7.989}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"editClone_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.237 2.129v8.595\"\r\n      />\r\n      <circle\r\n        className=\"editClone_svg__cls-9\"\r\n        cx={1.237}\r\n        cy={7.116}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEditClone;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgParameterSpectra(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.187 1.471v8.892M5.903 1.398v8.897M8.677 1.471v8.892\"\r\n      />\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.21 7.841l2.712-4.157M8.715 6.031L5.922 3.684M5.907 8.531l2.808-2.5M5.93 6.187l2.785-.156M3.29 7.845l2.61.663M5.93 6.187L3.21 7.841\"\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={5.903}\r\n        cy={6.218}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"parameterSpecturm_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.21 7.841l2.724-5.867M5.903 2.134l2.812 3.897M8.715 6.031L5.903 9.944M3.21 7.841l2.693 2.103\"\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={3.187}\r\n        cy={7.845}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"parameterSpecturm_svg__cls-9\"\r\n        cx={8.677}\r\n        cy={6.012}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgParameterSpectra;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPareto(props) {\r\n  return (\r\n    <svg viewBox=\"1 2 18 18\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n    <g>\r\n      <g transform=\"translate(14.848 10.218)\">\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.265\"\r\n          d=\"M-1.565-2.42h.688a.69.69 0 01.688.687v1.376a.69.69 0 01-.688.688h-3.312a1.447 1.447 0 00-1.5 1.376V3.08\"\r\n          className=\"cls-1\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"1.587\"\r\n          d=\"M-5.689 3.424L-5.689 5.832\"\r\n          className=\"cls-18\"\r\n        ></path>\r\n        <path\r\n          fill=\"#1d1d1b\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.265\"\r\n          d=\"M-5.893-3.524h.45a2.291 2.291 0 010 2.178h-.45z\"\r\n          className=\"cls-21\"\r\n        ></path>\r\n        <path\r\n          fill=\"#fff\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.661\"\r\n          d=\"M-7.433-4.701a2.26 2.26 0 011.852.957.513.513 0 00.415.22h1.453v2.178h-1.453a.513.513 0 00-.415.22 2.265 2.265 0 11-1.852-3.575z\"\r\n          className=\"cls-22\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.529\"\r\n          d=\"M-3.073 -1.256L-3.073 -3.614\"\r\n          className=\"cls-23\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.529\"\r\n          d=\"M-2.528 -1.256L-2.528 -3.614\"\r\n          className=\"cls-23\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.529\"\r\n          d=\"M-1.985 -1.256L-1.985 -3.614\"\r\n          className=\"cls-23\"\r\n        ></path>\r\n        <path\r\n          fill=\"#1d1d1b\"\r\n          stroke=\"#fff\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.198\"\r\n          d=\"M-1.723 -1.166L-1.723 -3.704\"\r\n          className=\"cls-24\"\r\n        ></path>\r\n        <path\r\n          fill=\"#1d1d1b\"\r\n          stroke=\"#1d1d1b\"\r\n          strokeLinecap=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          strokeWidth=\"0.397\"\r\n          d=\"M-1.408-2.889h.044a.455.455 0 110 .908h-.044z\"\r\n          className=\"cls-25\"\r\n        ></path>\r\n      </g>\r\n    </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPareto;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPerturbation(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"perturbation_svg__cls-3\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.413 1.431v8.897M4.13 1.363v8.892M10.451 1.431v8.897M7.121 1.229v8.897M4.168 6.194l2.953-.145M1.413 5.439l2.743.682M7.185 6.022l3.266.347\"\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={1.413}\r\n        cy={5.439}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={10.451}\r\n        cy={6.369}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={4.13}\r\n        cy={6.182}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"perturbation_svg__cls-15\"\r\n        cx={7.121}\r\n        cy={6.049}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.286}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"perturbation_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M4.084 3.569l2.953-.149M1.329 2.81l2.74.682M7.102 3.393l3.265.347M4.084 8.967l2.953-.144M1.329 8.213l2.74.682M7.102 8.796l3.265.347\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPerturbation;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSettings(props) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 22 22\"\r\n      height=\"2em\"\r\n      width=\"2em\"\r\n      {...props}\r\n    >\r\n      <g transform=\"translate(-103.852 -146.283)\">\r\n        <g\r\n          transform=\"matrix(1.20813 0 0 1.2049 114.852 157.283)\"\r\n          strokeWidth={0.497}\r\n          strokeMiterlimit={0.1}\r\n          stroke=\"#000\"\r\n        >\r\n          <path d=\"M2.884-.798l1.266-.35.185-.014 1.634.73v.864l-1.634.73-.185-.014-1.266-.35-.751 1.3.936.922.105.154.185 1.779-.75.432-1.447-1.05-.081-.167-.33-1.272H-.751l-.33 1.272-.08.167-1.449 1.05-.749-.432.185-1.78.105-.153.936-.921-.75-1.301-1.267.35-.185.014-1.634-.73v-.864l1.634-.73.185.014 1.266.35.751-1.3-.936-.922-.105-.154-.185-1.779.75-.432 1.447 1.05.081.167.33 1.272H.751l.33-1.272.08-.167 1.449-1.05.749.432-.185 1.78-.105.153-.936.921z\" />\r\n          <circle r={2.1} />\r\n        </g>\r\n        <circle\r\n          cx={114.852}\r\n          cy={157.283}\r\n          fill=\"none\"\r\n          stroke=\"#a0a0a0\"\r\n          strokeWidth={0.521}\r\n          strokeMiterlimit={0.1}\r\n          strokeOpacity={0.99}\r\n          r={10.74}\r\n        />\r\n        <circle r={2.5} cy={157.283} cx={114.852} fill=\"#fffffe\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSettings;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSketch(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M9.203 10.33V1.738\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={9.203}\r\n        cy={5.179}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M6.136 10.33V1.738\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={6.136}\r\n        cy={7.598}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-8\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n        d=\"M3.137 1.738v8.592\"\r\n      />\r\n      <circle\r\n        className=\"sketch_svg__cls-9\"\r\n        cx={3.137}\r\n        cy={6.722}\r\n        r={0.663}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.476}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <path\r\n        className=\"sketch_svg__cls-16\"\r\n        d=\"M1.754 4.238a.1.1 0 01.107 0l.076.038.149.072.3.13.576.251a3.429 3.429 0 003.43-.38c.17-.111.342-.226.51-.351.167-.126.316-.282.48-.404a6.096 6.096 0 00.472-.43 1.749 1.749 0 00.248-.275 1.273 1.273 0 01.335-.21 1.989 1.989 0 011.444 0 4.282 4.282 0 01.633.275c.099.053.194.114.29.175l.136.1.065.049.034.026v.08c0 .057-.06.046-.072.038h-.038l-.072-.034-.153-.065-.297-.13a3.147 3.147 0 00-.606-.178 1.375 1.375 0 00-1.337.316.518.518 0 00-.21.206c-.125.171-.251.38-.404.552a3.764 3.764 0 01-.499.488 5.608 5.608 0 01-.548.434 4.012 4.012 0 01-2.728.762 3.383 3.383 0 01-1.353-.465 2.362 2.362 0 01-.556-.43 4.972 4.972 0 01-.225-.27l-.103-.142c-.053-.106-.118-.122-.084-.228z\"\r\n        fill=\"#e30613\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSketch;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSpectralCartesianProduct(props) {\r\n  return (\r\n    <svg viewBox=\"-4 -2 20 16\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M4.175 8.196l4.114-4.119\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-7\"\r\n        d=\"M4.495 7.876l-.252-1.033h-.038L3.576 8.33l-.853 1.334 1.333-.854 1.46-.628v-.035zM7.97 4.397l-1.03-.251v-.038l1.46-.629 1.333-.85-.85 1.33-.628 1.46h-.034z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M8.289 8.192L4.175 4.081\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-7\"\r\n        d=\"M7.97 7.872l-1.03.251v.038l1.46.63 1.33.853-.846-1.315-.629-1.46h-.034zM4.495 4.397l-.252 1.029h-.038l-.629-1.46-.85-1.352 1.33.85 1.46.632v.03z\"\r\n        fill=\"#1d1d1b\"\r\n      />\r\n      <path\r\n        className=\"spectralCartesianProduct_svg__cls-1\"\r\n        fill=\"none\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n        d=\"M1.275 1.688v8.897M10.895 10.585V1.688\"\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={1.275}\r\n        cy={8.062}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={1.275}\r\n        cy={3.247}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={10.895}\r\n        cy={4.21}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n      <circle\r\n        className=\"spectralCartesianProduct_svg__cls-2\"\r\n        cx={10.895}\r\n        cy={9.026}\r\n        r={0.69}\r\n        fill=\"#fff\"\r\n        stroke=\"#1d1d1b\"\r\n        strokeWidth={0.381}\r\n        strokeMiterlimit={10}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSpectralCartesianProduct;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgTags(props) {\r\n  return (\r\n    <svg viewBox=\"0 0 20 20\" height={props.height} width={props.width} {...props}>\r\n      \r\n    <title id=\"title\">{props.title}</title>\r\n      <g fill=\"#1d1d1b\">\r\n        <path d=\"M10.334 6.107l-.153-.001a2.048 2.048 0 00-1.28.528L6.182 9.352a.754.754 0 000 1.058l2.459 2.46a.753.753 0 00.8.166.754.754 0 01-.128-.1l-2.458-2.458a.754.754 0 010-1.058l2.98-2.981c.15-.136.318-.246.498-.332z\" />\r\n        <path d=\"M11.679 6.106a2.048 2.048 0 00-1.281.529l-2.91 2.91a.754.754 0 000 1.059l2.457 2.46a.754.754 0 001.059 0l2.91-2.91a2.074 2.074 0 00.53-1.281l-.025-1.992a.77.77 0 00-.756-.757zm1.227.65a.884.884 0 01.006 0 .884.884 0 01.883.884.884.884 0 01-.883.884.884.884 0 01-.884-.884.884.884 0 01.878-.884z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgTags;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from './parallelMenu.module.scss';\r\nimport classnames from 'classnames';\r\nimport { IconContext } from 'react-icons';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nimport {\r\n    MdCreate,\r\n    MdSettings,\r\n    MdLightbulbOutline,\r\n    MdSearch,\r\n    MdLockOpen,\r\n    MdLockOutline,\r\n} from 'react-icons/md';\r\n\r\nimport {\r\n    Brush,\r\n    Pareto,\r\n    Sketch,\r\n    EditRef,\r\n    EditClone,\r\n    DirectEditRef,\r\n    CartesianProduct,\r\n    SpectralCartesianProduct,\r\n    Perturbation,\r\n    ParameterSpectra,\r\n    Coords,\r\n} from '../../icons'\r\n\r\n\r\nconst colorCurrentCommand = styles.colorCurrentCommand;\r\n\r\nclass ParallelMenu extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showSearch: false,\r\n            showEdit: false,\r\n            showGenerate: false,\r\n            showSettings: false,\r\n            showUnlock: true,\r\n            createOnlyInTheRange : this.props.createOnlyInTheRange\r\n        }\r\n    }\r\n\r\n    handleClick = (group) => {\r\n\r\n        switch (group) {\r\n            case \"search\":\r\n                this.setState({\r\n                    showSearch: !this.state.showSearch,\r\n                    showEdit: false,\r\n                    showGenerate: false,\r\n                    showSettings: false,\r\n                });\r\n                break;\r\n\r\n            case \"edit\":\r\n                this.setState({\r\n                    showEdit: !this.state.showEdit,\r\n                    showSearch: false,\r\n                    showGenerate: false,\r\n                    showSettings: false,\r\n                });\r\n                break;\r\n\r\n            case \"generate\":\r\n                this.setState({\r\n                    showGenerate: !this.state.showGenerate,\r\n                    showSearch: false,\r\n                    showEdit: false,\r\n                    showSettings: false,\r\n                });\r\n                break;\r\n\r\n            case \"settings\":\r\n                this.setState({\r\n                    showSettings: !this.state.showSettings,\r\n                    showSearch: false,\r\n                    showGenerate: false,\r\n                    showEdit: false,\r\n                });\r\n                break;\r\n            case \"unlock\":\r\n                this.setState({\r\n                    showUnlock: false,\r\n                })\r\n                break;\r\n            case \"lock\":\r\n                this.setState({\r\n                    showUnlock: true,\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleUnlockclick = () => {\r\n        this.props.lockAspectRatio(true);\r\n        this.handleClick(\"unlock\")\r\n    }\r\n\r\n    handleLockClick = () => {\r\n        this.props.lockAspectRatio(false);\r\n        this.handleClick(\"lock\")\r\n    }\r\n\r\n    samplingCheckboxChanged = (e) =>{\r\n        this.setState({createOnlyInTheRange:e.target.checked});\r\n        this.props.samplingCheckboxChanged(e);\r\n    }\r\n\r\n    render() {\r\n\r\n        const searchButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showSearch === true,\r\n            [styles['button-hidden']]: this.state.showSearch === false,\r\n        });\r\n\r\n        const editButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showEdit === true,\r\n            [styles['button-hidden']]: this.state.showEdit === false,\r\n        });\r\n\r\n        const generateButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showGenerate === true,\r\n            [styles['button-hidden']]: this.state.showGenerate === false,\r\n        });\r\n\r\n        const settingsButtonToggle = classnames({\r\n            [styles['button-visible']]: this.state.showSettings === true,\r\n            [styles['button-hidden']]: this.state.showSettings === false,\r\n        });\r\n\r\n        const searchButtonStyle = (this.state.showSearch || this.props.isBrushing || this.props.isSampling) ? { backgroundColor: colorCurrentCommand } : {};\r\n        const editButtonStyle = (this.state.showEdit || this.props.isSketching || this.props.isAltering || this.props.isLiveEditing || this.props.isCloning) ? { backgroundColor: colorCurrentCommand } : {};\r\n        const generateButtonStyle = (this.state.showGenerate || this.props.isCPing || this.props.isPSing || this.props.isSAing || this.props.isSCPing) ? { backgroundColor: colorCurrentCommand } : {};\r\n        const settingsButtonStyle = (this.state.showSettings || this.props.isToggling) ? { backgroundColor: colorCurrentCommand } : {};\r\n        const unlockStyle = (this.state.showUnlock) ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const brushButtonStyle = this.props.isBrushing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const sketchButtonStyle = this.props.isSketching ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const alterButtonStyle = this.props.isAltering ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const sampleButtonStyle = this.props.isSampling ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const liveEditButtonStyle = this.props.isLiveEditing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const cloneButtonStyle = this.props.isCloning ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const toggleButtonStyle = this.props.isToggling ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const cpButtonStyle = this.props.isCPing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const parameterSpectraButtonStyle = this.props.isPSing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const sensitivityAnalysisButtonStyle = this.props.isSAing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n        const spectralCartesiaProductButtonStyle = this.props.isSCPing ? { border: \"4px solid\", borderColor: colorCurrentCommand } : {};\r\n\r\n        const options = [\r\n            0, 1, 2, 3, 4, 5, 6\r\n        ];\r\n        const defaultOption = options[0];\r\n\r\n\r\n        return (\r\n            <div className={styles['button-div']}>\r\n                <IconContext.Provider value={{ size: '1.80em' }}>\r\n                    <MdSearch\r\n                        title='search'\r\n                        className={styles['button']}\r\n                        style={searchButtonStyle}\r\n                        onClick={this.handleClick.bind(this, 'search')}\r\n                    />\r\n                </IconContext.Provider>\r\n                <Brush\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='brush axis'\r\n                    className={searchButtonToggle}\r\n                    style={brushButtonStyle}\r\n                    onClick={this.props.handleBrushAxisClick} />\r\n                <Pareto\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='sample axis'\r\n                    className={searchButtonToggle}\r\n                    style={sampleButtonStyle}\r\n                    onClick={this.props.handleSampleAxisClick} />\r\n                {this.props.isSampling ?\r\n                    <label>                        \r\n                        <input type=\"checkbox\" onChange={this.samplingCheckboxChanged} checked={this.state.createOnlyInTheRange} placeholder=\"delta\" />\r\n                        Create in the range\r\n                    </label>\r\n                    : null\r\n                }\r\n                <IconContext.Provider value={{ size: '1.80em' }}>\r\n                    <MdCreate\r\n                        title='edit'\r\n                        className={styles['button']}\r\n                        style={editButtonStyle}\r\n                        onClick={this.handleClick.bind(this, 'edit')}\r\n                    />\r\n                </IconContext.Provider>\r\n                <Sketch\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='sketch alternative'\r\n                    className={editButtonToggle}\r\n                    style={sketchButtonStyle}\r\n                    onClick={this.props.handleSketchAlternativeClick} />\r\n                <EditRef\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='edit alternative'\r\n                    className={editButtonToggle}\r\n                    style={alterButtonStyle}\r\n                    onClick={this.props.toggleAlterMode} />\r\n                <EditClone\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='clone-edit alternative'\r\n                    className={editButtonToggle}\r\n                    style={cloneButtonStyle}\r\n                    onClick={this.props.handleCloneEditAlternativeClick} />\r\n                <DirectEditRef\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='live-edit alternative'\r\n                    className={editButtonToggle}\r\n                    style={liveEditButtonStyle}\r\n                    onClick={this.props.toggleLiveEditMode} />\r\n                <IconContext.Provider value={{ size: '1.80em' }}>\r\n                    <MdLightbulbOutline\r\n                        title='generate'\r\n                        className={styles['button']}\r\n                        style={generateButtonStyle}\r\n                        onClick={this.handleClick.bind(this, 'generate')}\r\n                    />\r\n                </IconContext.Provider>\r\n                <CartesianProduct\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='cartesian product'\r\n                    className={generateButtonToggle}\r\n                    style={cpButtonStyle}\r\n                    onClick={this.props.handleCartesianProductClick} />\r\n                <SpectralCartesianProduct\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='spectral cartesian product'\r\n                    className={generateButtonToggle}\r\n                    style={spectralCartesiaProductButtonStyle}\r\n                    onClick={this.props.handleSpectralCartesianProductClick} />\r\n                <Perturbation\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='perturbation'\r\n                    className={generateButtonToggle}\r\n                    style={sensitivityAnalysisButtonStyle}\r\n                    onClick={this.props.handleSensitivityAnalysisClick} />\r\n                {this.props.isSAing ?\r\n                    <input type=\"text\" onChange={this.props.onSensitivityAnalysisDeltaChange} placeholder=\"delta\" />\r\n                    : null\r\n                }\r\n                <ParameterSpectra\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='parameter spectra/sensitivity analysis'\r\n                    className={generateButtonToggle}\r\n                    style={parameterSpectraButtonStyle}\r\n                    onClick={this.props.handleParameterSpectraClick} />\r\n                {this.props.isPSing ?\r\n                    <div>\r\n                        <Dropdown options={options} onChange={this.props.onParameterSpectraSelect} value={defaultOption} placeholder=\"arity\" />\r\n                        <input type=\"text\" onChange={this.props.onParameterSpectraDeltaChange} placeholder=\"delta\" />\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <IconContext.Provider value={{ size: '1.80em' }}>\r\n                    <MdSettings\r\n                        title='settings'\r\n                        className={styles['button']}\r\n                        style={settingsButtonStyle}\r\n                        onClick={this.handleClick.bind(this, 'settings')}\r\n                    />\r\n                </IconContext.Provider>\r\n                <Coords\r\n                    height={\"12mm\"}\r\n                    width={\"12mm\"}\r\n                    title='toggle dimension'\r\n                    className={settingsButtonToggle}\r\n                    style={toggleButtonStyle}\r\n                    onClick={this.props.selectParameter} />\r\n                <IconContext.Provider value={{ size: '1.80em' }}>\r\n                    {\r\n                        this.state.showUnlock ?\r\n                            <MdLockOpen\r\n                                title='lock aspect ratio'\r\n                                className={styles['button']}\r\n                                onClick={this.handleUnlockclick}\r\n                            />\r\n                            :\r\n                            <MdLockOutline\r\n                                title='lock aspect ratio'\r\n                                className={styles['button']}\r\n                                onClick={this.handleLockClick}\r\n                                style={{\r\n                                    backgroundColor: colorCurrentCommand\r\n                                }}\r\n                            />\r\n                    }\r\n\r\n                </IconContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParallelMenu\r\n","\r\nexport const create2DArray = (rows) => {\r\n  let arr = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    arr[i] = [];\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport const countUnique = (iterable) => {\r\n  return new Set(iterable).size;\r\n}\r\n\r\nexport const groupBy = (list, keyGetter) => {\r\n  const map = new Map();\r\n  list.forEach((item) => {\r\n    const key = keyGetter(item);\r\n    const collection = map.get(key);\r\n    if (!collection) {\r\n      map.set(key, [item]);\r\n    } else {\r\n      collection.push(item);\r\n    }\r\n  });\r\n  return map;\r\n}\r\n\r\nexport const pairwise = (result, func) => {\r\n  for (let i = 0; i < result.length - 1; i += 2) {\r\n    func(result[i], result[i + 1]);\r\n  }\r\n}\r\n\r\nexport const makeName = (str) => {\r\n  var tmpStr = str.split(\"_brush\");\r\n  return tmpStr;\r\n}\r\n\r\nexport const createSimpleQuery = (query) => {\r\n  let simpleQuery = {};\r\n  for (let j = 0; j < query.length; j++) {\r\n    for (let k = 0; k < query[j].length; k++) {\r\n      for (var m = 0; m < query[j][k].length; m++) {\r\n        let rangeName = makeName(query[j][k][m]);\r\n        if (!simpleQuery[rangeName[0]]) {\r\n          simpleQuery[rangeName[0]] = {};\r\n        }\r\n        if (!simpleQuery[rangeName[0]][rangeName[1]]) {\r\n          simpleQuery[rangeName[0]][rangeName[1]] = rangeName[0] + rangeName[1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return simpleQuery;\r\n}\r\n\r\n// expects pairings: joinHandles\r\n// returns query in strings\r\n// joinHandles\r\n\r\nexport function queryStringGenerator(query) {\r\n  let qss = \"\";\r\n\r\n  for (let i = 0; i < query.length; i++) {\r\n    let simpleQuery = createSimpleQuery(query[i]);\r\n\r\n    if (query.length > 1) {\r\n      qss += '(';\r\n    }\r\n\r\n    let dimCount = 0;\r\n\r\n    for (let dim in simpleQuery) {\r\n      dimCount++;\r\n      if (Object.keys(simpleQuery[dim]).length > 1) {\r\n        qss += '(';\r\n        let rangeCount = 0;\r\n        for (let range in simpleQuery[dim]) {\r\n          rangeCount++;\r\n          qss += simpleQuery[dim][range];\r\n          if (rangeCount !== Object.keys(simpleQuery[dim]).length) {\r\n            qss += \" or \"\r\n          }\r\n        }\r\n        qss += ')';\r\n      } else {\r\n        qss += dim;\r\n      }\r\n\r\n      if (dimCount !== Object.keys(simpleQuery).length) {\r\n        qss += \" and \";\r\n      }\r\n    }\r\n\r\n    if (query.length > 1) {\r\n      qss += ' ) ';\r\n      if (i !== query.length - 1) {\r\n        qss += ' OR ';\r\n      }\r\n    }\r\n  }\r\n\r\n  return qss;\r\n}","import React, { PureComponent } from 'react';\r\nimport * as d3 from 'd3';\r\nimport styles from './parallel.module.scss';\r\nimport Select from 'react-select';\r\nimport MessageBox from '../messageBox/MessageBox';\r\nimport ParallelMenu from './parallelMenu/ParallelMenu';\r\nimport {\r\n  removeFieldFromDatum,\r\n  addFieldToDatum,\r\n} from '../../util/util';\r\nimport {\r\n  findAlternativeRelativesFromID,\r\n} from '../../util/alternatives';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  create2DArray,\r\n  countUnique,\r\n  groupBy,\r\n  pairwise,\r\n} from '../../util/parallel.js';\r\n\r\n// TODO: this component needs default props for initialization\r\n\r\n//#region constants\r\n\r\n// setting up some margins for drawing area\r\nconst margin = { top: 20, right: 20, bottom: 145, left: 40 };\r\n\r\n// Primary colours. These need to be made global.\r\nconst colorWhite = styles.colorWhite;\r\nconst colorUnselected = styles.colorUnselected;\r\nconst colorHovered = styles.colorHovered;\r\nconst colorSelected = styles.colorSelected;\r\nconst colorSelectedRelated = styles.colorSelectedRelated;\r\nconst colorHoveredRelated = styles.colorHoveredRelated;\r\nconst colorHoveredSelected = styles.colorHoveredSelected;\r\nconst colorSketch = styles.colorSketch;\r\nconst colorSketchPath = styles.colorSketchPath;\r\nconst colorBrush = styles.colorBrush;\r\nconst colorBrushSelected = styles.colorBrushSelected;\r\nconst colorBrushed = styles.colorBrushed;\r\nconst colorQuerySelected = styles.colorQuerySelected;\r\nconst colorQueryNotSelected = styles.colorQueryNotSelected;\r\nconst colorSelectedCoordinate = styles.colorSelectedCoordinate;\r\nconst colorCurrentCommand = styles.colorCurrentCommand;\r\nconst opacity0 = styles.opacity0;\r\nconst opacityMid1 = styles.opacityMid1;\r\nconst opacityMid2 = styles.opacityMid2;\r\nconst opacity1 = styles.opacity1;\r\n\r\n//#endregion  \r\n\r\n/**\r\n * this component renders the parallel coordinates chart\r\n * it receives props from the collection component it belongs\r\n */\r\nclass Parallel extends PureComponent {\r\n  /**\r\n   * setting the stage\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const dimensions = this.props.collection.get('dimOrder') ? this.props.collection.get('dimOrder').toJS() : [];\r\n\r\n    // options are determined by dimensions\r\n    this.options = [];\r\n    dimensions.map((d) => this.options.push({ value: d, label: d.toString() }));\r\n    this.defaultOptions = this.options\r\n\r\n    this.state = {\r\n      dimensions: dimensions,\r\n      valueBands: this.props.scales.get('valueBands').toJS(),\r\n      backupValueBands: this.props.scales.get('valueBands').toJS(),\r\n      inputParams: this.props.collection.get(\"inputs\").toJS(),\r\n      outputParams: this.props.collection.get(\"outputs\").toJS(),\r\n      brushCount: 0,\r\n      sketchData: {},\r\n      selectedDimensions: [],\r\n      isAltering: false,\r\n      isLiveEditing: false,\r\n      isCloning: this.props.collection.get('currentMode') ? this.props.collection.get('currentMode').get('isCloning') : false, //TODO: revise\r\n      isToggling: false,\r\n      isSampling: false,\r\n      isSketching: false,\r\n      isBrushing: false,\r\n      isCPing: false,\r\n      isPSing: false,\r\n      isSAing: false,\r\n      isLocked: false,\r\n      shouldWarn: false,\r\n      adjustInputBrushes: false,\r\n      confirmAction: null,\r\n      warningMessage: '',\r\n      menuOpen: false,\r\n      menuHidden: false,\r\n      shiftKeyDown: false\r\n    };\r\n\r\n    // some additional variables that will act\r\n    // as mock states but will not trigger re-render\r\n\r\n    this.paramaterSpectraAltNum = 2;\r\n    this.paramaterSpectraDelta = 5;\r\n    this.sensitivityAnalysisDelta = 5;\r\n    this.createOnlyInTheRange = false;\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    };\r\n\r\n    this.samples = {};\r\n    this.brushes = [];\r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.cloneBases = [];\r\n    this.altsInCollectionBefore = [];\r\n    this.altsInCollectionAfter = [];\r\n    this.isEditing = false;\r\n  }\r\n\r\n  /**\r\n   * draw the chart when the component mounts\r\n   */\r\n  componentDidMount = () => {\r\n    this.drawChart(\r\n      this.props.width,\r\n      this.props.height,\r\n      this.state.inputParams,\r\n      this.state.outputParams,\r\n      this.state.dimensions,\r\n      this.state.isBrushing,\r\n      this.state.isSampling,\r\n      this.state.sketchData,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * redraw the chart whenever the component updates\r\n   */\r\n  componentDidUpdate = () => {\r\n    if (this.queryEngine.advMode) {\r\n      this.queryEngine = {\r\n        current: this.queryEngine.memo.current,\r\n        temp: this.queryEngine.memo.temp,\r\n        total: this.queryEngine.memo.total,\r\n        advMode: this.queryEngine.memo.advMode,\r\n        memo: {},\r\n      }\r\n    }\r\n\r\n    this.drawChart(\r\n      this.props.width,\r\n      this.props.height,\r\n      this.state.inputParams,\r\n      this.state.outputParams,\r\n      this.state.dimensions,\r\n      this.state.isBrushing,\r\n      this.state.isSampling,\r\n      this.state.sketchData,\r\n    );\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const newInputs = props.collection.get('inputs').toJS()\r\n    const newOutputs = props.collection.get('outputs').toJS()\r\n    const newDimensions = props.collection.get('dimOrder').toJS()\r\n\r\n    if (JSON.stringify(newInputs) !== JSON.stringify(state.inputParams)) {\r\n      return { \r\n        inputParams: newInputs, \r\n        outputParams: newOutputs,\r\n        dimensions: newDimensions\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * the main method to draw the chart\r\n   * this is where main d3.js action happens\r\n   */\r\n  drawChart = (width, height, inputParams, outputParams, dimensions, isBrushing, isSampling, sketchPoints) => {\r\n    //#region initializing variables\r\n\r\n    const brushes = this.brushes;\r\n    const brushSelections = this.brushSelections;\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions);\r\n    const commitChanges = this.commitChanges;\r\n    const changeEditingState = this.changeEditingState;\r\n    const submitChanges = this.submitChanges;\r\n    const findNonEmptyBrushes = this.findNonEmptyBrushes;\r\n    const findNonEmptyOutputBrushes = this.findNonEmptyOutputBrushes;\r\n    const findNonEmptyInputBrushes = this.findNonEmptyInputBrushes;\r\n    const commitDimensions = this.commitDimensions;\r\n    const commitValueBands = this.commitValueBands;\r\n    const commitBrushSelections = this.commitBrushSelections;\r\n    const commitSketch = this.commitSketch;\r\n    const reOrderDefaultOptions = this.reOrderDefaultOptions;\r\n    const updateBrushes = this.updateBrushes;\r\n    const alreadySelected = this.alreadySelected;\r\n    const toggleAdjustInputBrushes = this.toggleAdjustInputBrushes;\r\n    const adjustInputBrushes = this.state.adjustInputBrushes;\r\n    const samples = this.samples;\r\n    const dragging = {}; // this is for keeping track of axis order after dragging\r\n    const alternatives = this.props.alternatives.get('alternatives');\r\n    const valueBands = this.props.scales.get('valueBands').toJS();\r\n    const altsInCollection = this.props.altsInCollection;\r\n    const data = altsInCollection.map((alt) => alt.get('parallelData')).toJS();\r\n    const idMap = altsInCollection.map((alt) => alt.get('viewId')).toJS();\r\n    const selectedAltsInCollection = altsInCollection.filter((alt) => alt.get('isSelected') === true)\r\n    const selectedPaths = selectedAltsInCollection.map((alt) => alt.get('parallelData')).toJS();\r\n    const shiftKeyDown = this.state.shiftKeyDown;\r\n    const colName = this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1];\r\n    const fullCollectionName = this.props.collection.get('collectionName');\r\n    const colId = this.props.collection.get('viewId');\r\n    const brushEngine = this.brushEngine;\r\n    const queryEngine = this.queryEngine;\r\n    //#endregion\r\n\r\n    //#region setting range and domain\r\n    // for each dimension (Y axis), build a linear scale. store all in a y object\r\n    const y = {};\r\n    dimensions.map((dim) => {\r\n      const name = dim;\r\n\r\n      y[name] = d3.scaleLinear() // create a linear scale\r\n        // domain is the extent of data. + sign ensures that the value is numeric\r\n        // .domain(d3.extent(data, (d) => +d[name]))\r\n        .domain([valueBands[dim].min, valueBands[dim].max])\r\n        // range is the height of drawable area (so d3 will automatically\r\n        // come up with numbers within that height)\r\n        .range([height - 200, 50]).nice();\r\n\r\n      const yDomain = y[name].domain();\r\n      if (yDomain[0] === yDomain[1]) {\r\n        y[name].domain([yDomain[0], yDomain[0] + 10]).nice();\r\n      }\r\n    });\r\n\r\n    // build the X scale. this finds the best position for each Y axis\r\n    const x = d3.scalePoint()\r\n      // range is the width of drawable area\r\n      .range([0, width - 30])\r\n      .padding(2.0)\r\n      .domain(dimensions);\r\n    //#endregion\r\n\r\n    //#region svg element manipulation\r\n    // getting the reference for the SVG element in render()\r\n    const svg = d3.select(this.svgEl);\r\n\r\n    const myTextField = d3.select('body').select('#textField')\r\n      .style('display', 'none')\r\n      .style('z-index', '10')\r\n      .style('position', 'absolute')\r\n      .style('width', '28px')\r\n      .style('background-color', colorWhite)\r\n      .style('border', 'solid')\r\n      .style('border-width', '0.5px')\r\n      .on(\"keypress\", function () {\r\n        if (d3.event.keyCode === 13) {\r\n          if (!isNaN(d3.event.target.value)) {\r\n            if (this.getAttribute('which') === 'min' && d3.event.target.value <= this.getAttribute('bound')) {\r\n              commitValueBands('OK', this.getAttribute('dim'), this.getAttribute('which'), d3.event.target.value);\r\n            } else if (this.getAttribute('which') === 'max' && d3.event.target.value >= this.getAttribute('bound')) {\r\n              commitValueBands('OK', this.getAttribute('dim'), this.getAttribute('which'), d3.event.target.value);\r\n            } else {\r\n              commitValueBands('OoB');\r\n            }\r\n          } else {\r\n            commitValueBands('NaN');\r\n          }\r\n          d3.event.target.value = null;\r\n        }\r\n      })\r\n\r\n    // defining the style properties of tooltip element\r\n    const myTooltip = d3.select('body').select('#myTooltip')\r\n      .style('position', 'absolute')\r\n      .style('z-index', '10')\r\n      .style('background-color', colorWhite)\r\n      .style('border', 'solid')\r\n      .style('border-width', '0.25px')\r\n      .style('border-radius', '6px')\r\n      .style('box-shadow', '1px 1px 2px 1px')\r\n      .style('padding', '5px')\r\n      .style('visibility', 'hidden');\r\n\r\n    // we created path elements in react (render part)\r\n    // here we are only manipulating their properties\r\n    const myPath = svg.selectAll('.myPath')\r\n      .data(data) // binding data to path elements\r\n      .attr('d', path) // path is a function (below)\r\n      .style('fill', 'none')\r\n      .style('stroke-width', () => {\r\n        if (isBrushing || isSampling) {\r\n          return 2.2;\r\n        } else {\r\n          return 3.1;\r\n        }\r\n      })\r\n      .style('pointer-events', () => {\r\n        if (isBrushing) {\r\n          return \"none\";\r\n        } else {\r\n          return \"stroke\";\r\n        }\r\n      });\r\n\r\n    // these are data point handlers for dragging/alteration\r\n    const myPoint = svg.selectAll('.myPoint')\r\n      .data(selectedPaths)\r\n      .selectAll('circle')\r\n      .data((d) => {\r\n        return Object.entries(d);\r\n      })\r\n      .attr('cx', function (d) {\r\n        return x(d[0]);\r\n      })\r\n      .attr('cy', function (d) {\r\n        return y[d[0]](d[1]);\r\n      })\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'data-points-' + colName)\r\n      .attr('id', (d, i) => {\r\n        return 'data-point-' + i + '-on-' + d[0] + '-' + colName;\r\n      })\r\n      .attr('r', 5.5)\r\n      .attr('cx', function (d) {\r\n        return x(d[0]);\r\n      })\r\n      .attr('cy', function (d) {\r\n        return y[d[0]](d[1]);\r\n      })\r\n      .style('fill', colorSelected)\r\n      .style('stroke', colorUnselected)\r\n      .style('stroke-width', 1.9)\r\n      .on('mouseover', (d) => {\r\n        myTooltip\r\n          .style('visibility', 'visible')\r\n          .style('left', (d3.event.pageX) + 'px')\r\n          .style('top', (d3.event.pageY - 28) + 'px')\r\n          .text(Math.round(d[1]));\r\n      }).on('mouseout', (d) => {\r\n        myTooltip\r\n          .style('visibility', 'hidden');\r\n      });\r\n\r\n    const myAxis = svg.selectAll('.myAxis')\r\n      .data(dimensions) // binding data to axis elements\r\n      .attr('transform', (d) => 'translate(' + x(d) + ')') // moving axes\r\n      .style('cursor', () => {\r\n        if (!this.state.isSketching) {\r\n          return 'move';\r\n        } else {\r\n          return 'pointer';\r\n        }\r\n      })\r\n      .style('fill', (d) => {\r\n        if (selectedDimensions.includes(d)) {\r\n          return colorSelectedCoordinate;\r\n        }\r\n      })\r\n      .style('stroke-width', function (d) {\r\n        if (outputParams.includes(d)) {\r\n          return 2.6;\r\n        } else {\r\n          return 1.4;\r\n        }\r\n      })\r\n      .each(function (d) {\r\n        d3.select(this).call(\r\n          // to set the axis tick values explicitly, as the array of ticks\r\n          // generated by the scale PLUS the max and min values from the scale domain\r\n          // concatenated into a single array, add .tickValues(y[d].ticks(10).concat(y[d].domain()))\r\n          d3.axisLeft().scale(y[d])\r\n        );\r\n      });\r\n\r\n    myAxis.each(function (d) {\r\n      if (outputParams.includes(d)) {\r\n        let minMax = data.map((path) => path[d])\r\n        let max = Math.max(...minMax);\r\n        let min = Math.min(...minMax)\r\n\r\n        d3.select(this.childNodes[1].childNodes[1]).on('dblclick', function () {\r\n          myTextField.node().focus();\r\n\r\n          myTextField\r\n            .attr('dim', this.parentNode.parentNode.getAttribute('dim'))\r\n            .attr('which', 'min')\r\n            .attr('value', d3.select(this).text())\r\n            .attr('bound', min)\r\n            .style('display', 'inline-block')\r\n            .style('left', (d3.event.pageX - 40) + 'px')\r\n            .style('top', (d3.event.pageY - 7) + 'px')\r\n            .property('value', d3.select(this).text());\r\n        });\r\n\r\n        d3.select(this.childNodes[this.childNodes.length - 1].childNodes[1]).on('dblclick', function () {\r\n          myTextField.node().focus();\r\n          myTextField\r\n            .attr('dim', this.parentNode.parentNode.getAttribute('dim'))\r\n            .attr('which', 'max')\r\n            .attr('value', d3.select(this).text())\r\n            .attr('bound', max)\r\n            .style('display', 'inline-block')\r\n            .style('left', (d3.event.pageX - 40) + 'px')\r\n            .style('top', (d3.event.pageY - 7) + 'px')\r\n            .property('value', d3.select(this).text());\r\n        });\r\n      }\r\n    });\r\n\r\n    const myBrushTexts = svg.selectAll('.myBrushText')\r\n      .attr(\"font-family\", \"sans-serif\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"fill\", \"black\")\r\n\r\n    const myBrushTextN = svg.select('#myBrushTextN');\r\n    const myBrushTextS = svg.select('#myBrushTextS');\r\n\r\n    const myClickAxis = svg.selectAll('.myClickAxis')\r\n      .data(dimensions) // binding data to axis elements\r\n      .attr('transform', (d) => 'translate(' + x(d) + ')') // moving axes\r\n      .style('cursor', () => {\r\n        if (!this.state.isSketching) {\r\n          return 'move';\r\n        } else {\r\n          return 'pointer';\r\n        }\r\n      })\r\n      .style('opacity', opacity0)\r\n      .each(function (d, i) {\r\n        d3.select(this).call(\r\n          // to set the axis tick values explicitly, as the array of ticks\r\n          // generated by the scale PLUS the max and min values from the scale domain\r\n          // concatenated into a single array, add .tickValues(y[d].ticks(10).concat(y[d].domain()))\r\n          d3.axisLeft().scale(y[d])\r\n        );\r\n      });\r\n\r\n    const myClickAxisPath = myClickAxis.selectAll('path.domain')\r\n      .data(dimensions)\r\n      .style('stroke-width', 20)\r\n      .style('opacity', opacity0);\r\n\r\n    // adding header texts to each dimension/axis\r\n    const myText = myAxis.append('text')\r\n      .attr('class', 'myText')\r\n      .style('text-anchor', 'start')\r\n      .style('text-shadow', '0 1px 0' + colorWhite)\r\n      .style('cursor', 'move')\r\n      .attr('y', 33)\r\n      .attr('x', -20)\r\n      .text((d) => d)\r\n      .style('fill', function (d) {\r\n        if (selectedDimensions.includes(d)) {\r\n          return colorSelected;\r\n        } else {\r\n          return 'black';\r\n        }\r\n      })\r\n      .style('font-weight', function (d) {\r\n        if (outputParams.includes(d)) {\r\n          return 'bold';\r\n        }\r\n        if (selectedDimensions.includes(d)) {\r\n          return 'bold';\r\n        } else {\r\n          return 'normal';\r\n        }\r\n      })\r\n      .attr('transform', 'rotate(-22)');\r\n    //#endregion\r\n\r\n    //#region current mode logic  \r\n\r\n    if (this.state.isSampling) {\r\n      findNonEmptyInputBrushes(brushes)\r\n        .then(result => {\r\n          if (result) {\r\n            result.map((d, i) => {\r\n              d3.select('body').select(\"[name=inputBox-\" + fullCollectionName + \"-\" + d.dimension + \"]\")\r\n                .style('display', 'inline-block')\r\n                .style('z-index', '10')\r\n                .style('position', 'absolute')\r\n                .style('width', '24px')\r\n                .style('background-color', colorWhite)\r\n                .style('border', 'solid')\r\n                .style('border-radius', '4px')\r\n                .style('border-width', '0.5px')\r\n                .on(\"input\", () => {\r\n                  // if (d3.event.keyCode === 13) {\r\n                  if (!isNaN(d3.event.target.value)) {\r\n                    this.samples[d.dimension] = d3.event.target.value;\r\n                  }\r\n                  // d3.event.target.value = null;\r\n                });\r\n            })\r\n          }\r\n        }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    if (this.state.isSketching) {\r\n      myClickAxis.on('click', function (d) {\r\n        if (!Object.keys(sketchPoints).includes(d)) {\r\n          if (inputParams.includes(d)) {\r\n            Object.assign(sketchPoints, { [d]: y[d].invert(d3.mouse(this)[1]) });\r\n            commitSketch(sketchPoints);\r\n          }\r\n        } else {\r\n          sketchPoints[d] = y[d].invert(d3.mouse(this)[1]);\r\n          svg.selectAll('.mySketchPoint').select('#' + d).attr('cy', y[d](y[d].invert(d3.mouse(this)[1])));\r\n        }\r\n        updatePoints(sketchPoints);\r\n      });\r\n    }\r\n\r\n    if (this.state.isCPing || this.state.isAltering || this.state.isLiveEditing ||\r\n      this.state.isCloning || this.state.isPSing || this.state.isSCPing) {\r\n      let originalColor, originalFont;\r\n      myText.style('cursor', 'pointer')\r\n        .on('click', function (d) {\r\n          if (!selectedDimensions.includes(d)) {\r\n            if (inputParams.includes(d)) {\r\n              selectedDimensions.push(d);\r\n            }\r\n          } else {\r\n            const index = selectedDimensions.indexOf(d);\r\n            selectedDimensions.splice(index, 1)\r\n          }\r\n          commitDimensions(selectedDimensions);\r\n        }).on('mouseover', function (d) {\r\n          originalColor = d3.select(this).style('fill');\r\n          originalFont = d3.select(this).style('font-weight');\r\n          d3.select(this)\r\n            .style('fill', colorHovered)\r\n            .style('font-weight', 'bold');\r\n        }).on('mouseout', function (d) {\r\n          d3.select(this)\r\n            .style('fill', originalColor)\r\n            .style('font-weight', originalFont);\r\n        });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    if (this.state.isBrushing || this.state.isSampling) {\r\n      svg.selectAll(\"polygon\").remove();\r\n      drawBrush(brushEngine, queryEngine);\r\n    } else {\r\n      svg.selectAll(\"polygon\").remove();\r\n    }\r\n\r\n    if (!this.state.isSketching) {\r\n      dragAxis();\r\n    }\r\n\r\n    dragPoints();\r\n    updatePoints(sketchPoints);\r\n\r\n    /** main function to draw brushes\r\n    * @param {object} brushEngine\r\n    * @param {object} queryEngine\r\n    */\r\n    function drawBrush(brushEngine, queryEngine) {\r\n      let brushExtent;\r\n      const noBrush = brushes.length < 1;\r\n\r\n      // adjusting input brushes based on the output brushes\r\n      if (adjustInputBrushes) {\r\n        findNonEmptyOutputBrushes(brushes).then((outputBrushes) => {\r\n          const brushEngineMultipair = brushEngine.multiPairs.map((mpairs) => {\r\n            return mpairs.filter((mpair) => {\r\n              let canBeAdded = true;\r\n              for (let i = 0; i < mpair.length; i++) {\r\n                const strRes = mpair[i].split(\"_\");\r\n                if (inputParams.includes(strRes[1])) {\r\n                  canBeAdded = false;\r\n                }\r\n              }\r\n              return canBeAdded;\r\n            })\r\n          });\r\n\r\n          if (outputBrushes.length < 1) {\r\n            toggleAdjustInputBrushes();\r\n            return\r\n          }\r\n\r\n          joinHandles(outputBrushes, brushEngineMultipair).then(result => {\r\n            queryFilter(result).then((boundaries) => {\r\n              findNonEmptyInputBrushes(brushes).then((inputBrushes) => {\r\n                if (inputBrushes.length > 0) {\r\n                  inputBrushes.map((inputBrush) => {\r\n                    let newExtent = [];\r\n                    for (let i = 0; i < boundaries.length; i++) {\r\n                      if (!newExtent[0]) {\r\n                        newExtent[0] = boundaries[i][inputBrush.dimension];\r\n                      } else if (newExtent[0] < boundaries[i][inputBrush.dimension]) {\r\n                        newExtent[0] = boundaries[i][inputBrush.dimension];\r\n                      }\r\n                      if (!newExtent[1]) {\r\n                        newExtent[1] = boundaries[i][inputBrush.dimension];\r\n                      } else if (newExtent[1] > boundaries[i][inputBrush.dimension]) {\r\n                        newExtent[1] = boundaries[i][inputBrush.dimension];\r\n                      }\r\n                    }\r\n\r\n                    if (newExtent[0] === newExtent[1]) {\r\n                      newExtent[0] = newExtent[0] + 5 * (valueBands[inputBrush.dimension].min + valueBands[inputBrush.dimension].max) / 100\r\n                      newExtent[1] = newExtent[1] - 5 * (valueBands[inputBrush.dimension].min + valueBands[inputBrush.dimension].max) / 100\r\n\r\n                      if (newExtent[0] > valueBands[inputBrush.dimension].max) {\r\n                        newExtent[0] = valueBands[inputBrush.dimension].max;\r\n                      }\r\n\r\n                      if (newExtent[1] < valueBands[inputBrush.dimension].min) {\r\n                        newExtent[1] = valueBands[inputBrush.dimension].min;\r\n                      }\r\n                    }\r\n\r\n                    const brushIndex = brushes.findIndex((b) => b.id === inputBrush.id);\r\n                    brushes[brushIndex].extent = newExtent;\r\n                  })\r\n                }\r\n                toggleAdjustInputBrushes();\r\n              }).catch(err => toggleAdjustInputBrushes());\r\n            }).catch(err => toggleAdjustInputBrushes());;\r\n          }).catch(err => toggleAdjustInputBrushes());\r\n        }).catch(err => toggleAdjustInputBrushes());\r\n      }\r\n\r\n      myAxis.append('g')\r\n        .attr('class', 'myBrush')\r\n        .each(function (d) {\r\n          const id = colName + '_' + d + '_brush0';\r\n          d3.select(this)\r\n            .attr('id', id)\r\n            .call(\r\n              y[d].brush = d3.brushY()\r\n                .extent([[-10, 50], [10, height - 200]])\r\n                .on('start', brushStart)\r\n                .on('brush', brushOn)\r\n                .on('end', brushEnd)\r\n            );\r\n          // how to programmatically control the brush: y[d].brush.move(d3.select(this), [55, 95]);\r\n\r\n          if (noBrush) {\r\n            brushes.push({ id: id, count: 0, dimension: d, extent: [0, 0], temp: undefined, query: undefined, isInput: inputParams.includes(d) });\r\n          } else {\r\n            let index = brushes.findIndex(brush => brush.id === id);\r\n            if (index >= 0) {\r\n              if (brushes[index].extent[0] !== 0 || brushes[index].extent[1] !== 0) {\r\n                y[d].brush.move(d3.select(this), [y[d](brushes[index].extent[0]), y[d](brushes[index].extent[1])]);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n      d3.selectAll('.myBrush rect.overlay').attr('x', -25).attr('width', 40);\r\n\r\n      /**\r\n      * prevents event propagation while brushing\r\n      * @param {event} e\r\n      */\r\n      function brushStart(e) {\r\n\r\n        if (d3.event.sourceEvent) {\r\n          if (d3.event.sourceEvent.stopPropagation) {\r\n            d3.event.sourceEvent.stopPropagation();\r\n          }\r\n        }\r\n\r\n        brushExtent = brushes.find((b) => b.id === this.getAttribute('id')).extent;\r\n\r\n        // apply color to dynamically created brush elements\r\n        d3.selectAll('.myBrush rect.selection').attr('fill', colorBrush);\r\n        d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\r\n        d3.selectAll('.myBrush rect.selection').attr('width', 15);\r\n\r\n        // to adjust the centroid of the brush using styles instead of attr \t\t\r\n        d3.selectAll('.myBrush rect.handle').attr('width', 36).attr('height', 22);\r\n\r\n      }\r\n\r\n      /**\r\n       * this is where the brushing action happens\r\n       * @param {event} e\r\n       */\r\n      function brushOn(e) {\r\n        const currentBrush = brushes.find((brush) => brush.id === this.id);\r\n\r\n        // if there's any selection, assign it to this brush\r\n        if (d3.event.selection !== null) {\r\n          currentBrush.extent = d3.event.selection.map(y[e].invert, y[e]);\r\n        }\r\n\r\n        // drawing extents info text while brushing\r\n        d3.select('#' + this.id)\r\n          .selectAll('.handle')\r\n          .each(function (d) {\r\n            if (d.type === 'n') {\r\n              myBrushTextN\r\n                .attr('x', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 5)\r\n                .attr('y', parseInt(this.getAttribute('y')))\r\n                .text((currentBrush.extent[0]).toFixed(3));\r\n            } else {\r\n              myBrushTextS\r\n                .attr('x', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 5)\r\n                .attr('y', parseInt(this.getAttribute('y')) + 14)\r\n                .text((currentBrush.extent[1]).toFixed(3));\r\n            }\r\n          })\r\n\r\n        // apply color to dynamically created brush elements\r\n        d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\r\n        d3.selectAll('.myBrush rect.selection').attr('width', 15);\r\n\r\n        findNonEmptyBrushes(brushes)\r\n          .then(result => {\r\n            joinHandles(result, brushEngine.multiPairs)\r\n              .then(result => {\r\n                queryFilter(result);\r\n              }).catch(err => console.log(err));\r\n          }).catch(err => console.log(err));\r\n      }\r\n\r\n      /**\r\n      * @param {event} e\r\n      * any operations you want to perform when brushing ends\r\n      */\r\n      function brushEnd(e) {\r\n        const thisBrush = brushes.find((b) => b.id === this.id);\r\n\r\n        // determine where to put the next brush\r\n        if (thisBrush.temp === undefined) {\r\n          if (queryEngine.current === 0 || queryEngine.total === 1 || queryEngine.current === queryEngine.total) {\r\n            thisBrush.temp = ++brushEngine.temp;\r\n          } else {\r\n\r\n            for (let x = queryEngine.current - 1; x < brushEngine.tempOrder.length; x++) {\r\n              brushEngine.tempOrder[x] += 1;\r\n            }\r\n\r\n            thisBrush.temp = ++queryEngine.temp;\r\n            ++brushEngine.temp;\r\n\r\n            try {\r\n              brushes.map((br) => {\r\n                if (br.temp !== undefined) {\r\n                  if (br.temp >= queryEngine.temp && br.id !== thisBrush.id) {\r\n                    ++br.temp;\r\n                  }\r\n                }\r\n              });\r\n\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (thisBrush.query === undefined) {\r\n          if (queryEngine.current !== 0) {\r\n            thisBrush.query = queryEngine.current;\r\n          } else {\r\n            thisBrush.query = null;\r\n          }\r\n        }\r\n\r\n        // checks if brush is clicked\r\n        if (d3.brushSelection(this) !== null && brushExtent[0] === d3.brushSelection(this).map(y[e].invert, y[e])[0] && brushExtent[1] === d3.brushSelection(this).map(y[e].invert, y[e])[1]) {\r\n          // shift + click to delete\r\n          if (d3.event.sourceEvent && d3.event.sourceEvent.shiftKey) {\r\n            // check if that's the first brush of a query && check if that's the only brush of a query\r\n            if (thisBrush.temp !== 1 && !brushEngine.tempOrder.includes(brushes.find(b => b.id === this.id).temp) && brushes.filter(br => br.query === thisBrush.query).length > 1) {\r\n              deleteBrush(this);\r\n            }\r\n          }\r\n\r\n          // check if that's the last brush in a query, then select it\r\n          if (brushes.filter(br => br.query === thisBrush.query).length === 1) {\r\n            d3.select(this.childNodes[1]).attr('fill', colorQuerySelected);\r\n            queryEngine.current = thisBrush.query;\r\n            queryEngine.temp = thisBrush.temp;\r\n          }\r\n        }\r\n\r\n        if (queryEngine.advMode) {\r\n          if (!brushEngine.tempOrder.includes(brushEngine.temp)) {\r\n            brushEngine.tempOrder.push(brushEngine.temp);\r\n            brushEngine.multiPairs = create2DArray(brushEngine.tempOrder.length);\r\n\r\n            const polyCount = countUnique(Array.from(svg.selectAll('polygon')[\"_groups\"][0]).map((d) => d.id));\r\n\r\n            queryEngine.current = polyCount + 1;\r\n            queryEngine.total = polyCount + 1;\r\n\r\n            if (queryEngine.current === 1) {\r\n              queryEngine.temp = brushEngine.multiPairs[queryEngine.current - 1].length;\r\n            } else if (queryEngine.current === queryEngine.total) {\r\n              queryEngine.temp = brushEngine.tempOrder.slice(-1)[0];\r\n            } else {\r\n              queryEngine.temp = brushEngine.tempOrder[queryEngine.current - 2];\r\n            }\r\n\r\n            // make sure there are no brushes left\r\n            let rogueBrush = brushes.find(br => br.query === null);\r\n            if (rogueBrush) {\r\n              rogueBrush.query = queryEngine.current;\r\n            }\r\n          }\r\n          queryEngine.advMode = false;\r\n        }\r\n\r\n        addNewBrush(e, thisBrush.count);\r\n\r\n        findNonEmptyBrushes(brushes)\r\n          .then(result => {\r\n            joinHandles(result, brushEngine.multiPairs)\r\n              .then(result => {\r\n                // TODO: queryStringGenerator(brushEngine.multiPairs);\r\n                drawPolygons(result, e);\r\n              }).catch(err => console.log(err));\r\n          }).catch(err => console.log(err));\r\n\r\n        stopListening();\r\n\r\n        d3.selectAll('.myBrush rect.selection').attr('x', -7.5);\r\n        d3.selectAll('.myBrush rect.selection').attr('width', 15);\r\n        d3.selectAll('.myBrush rect.handle').attr('width', 36).attr('height', 22);\r\n\r\n        updateBrushes(thisBrush, colId);\r\n\r\n        d3.select('#' + this.id)\r\n          .selectAll('.selection')\r\n          .each(function (d) {\r\n            // here we are positioning inputBoxes on axes\r\n            d3.select('body').select('#' + thisBrush.id + '_input')\r\n              .style('left', parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)) + 'px')\r\n              .style('top', parseInt(this.getAttribute('y')) + 100 + 'px')\r\n              .attr('value', samples[thisBrush.dimension] ? samples[thisBrush.dimension] : 0);\r\n          });\r\n      }\r\n\r\n      function deleteBrush(brush) {\r\n        const deletedBrush = brushes.find(br => br.id === brush.getAttribute('id'));\r\n        const index = brushes.findIndex(br => br === deletedBrush);\r\n        const nextBrush = brushes.find(br => br.dimension === deletedBrush.dimension && br.count === (deletedBrush.count + 1))\r\n\r\n        try {\r\n          d3.select(brush).call(d3.brushY().move, null);\r\n          d3.select(brush).remove();\r\n          d3.select('#' + nextBrush.id).attr('id', deletedBrush.id);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n\r\n        nextBrush.id = deletedBrush.id;\r\n        nextBrush.count = deletedBrush.count;\r\n        brushes.splice(index, 1);\r\n        updateBrushes(deletedBrush, colId, true)\r\n      }\r\n\r\n      function addNewBrush(e, count) {\r\n\r\n        const brushesOnDimension = brushes.filter((obj) => obj.dimension === e);\r\n        const lastBrushID = brushesOnDimension[brushesOnDimension.length - 1].id;\r\n        const lastBrush = document.getElementById(lastBrushID);\r\n\r\n        let selection;\r\n        if (!lastBrush) {\r\n          selection = [0, 1];\r\n        } else {\r\n          selection = d3.brushSelection(lastBrush);\r\n        }\r\n\r\n        count = count + 1;\r\n\r\n        if (selection && selection[0] !== selection[1]) {\r\n          const elementBefore = '#' + colName + '_' + e + '_brush' + (count - 1);\r\n          d3.select('#' + e + 'on' + colName).insert('g', elementBefore)\r\n            .attr('class', 'myBrush')\r\n            .each(function (d) {\r\n              const id = colName + '_' + e + '_brush' + count;\r\n              d3.select(this)\r\n                .attr('id', id)\r\n                .call(y[d].brush = d3.brushY()\r\n                  .extent([[-10, 50], [10, height - 200]])\r\n                  .on('start', brushStart)\r\n                  .on('brush', brushOn)\r\n                  .on('end', brushEnd)\r\n                );\r\n\r\n              if (noBrush) {\r\n                brushes.push({ id: id, count: count, dimension: e, extent: [0, 0], temp: undefined, query: undefined, isInput: inputParams.includes(d) });\r\n              } else {\r\n                let index = brushes.findIndex(brush => brush.id === id);\r\n                if (index >= 0) {\r\n                  if (brushes[index].extent[0] !== 0 || brushes[index].extent[1] !== 0) {\r\n                    y[d].brush.move(d3.select(this), [y[d](brushes[index].extent[0]), y[d](brushes[index].extent[1])]);\r\n                  }\r\n                } else {\r\n                  brushes.push({ id: id, count: count, dimension: e, extent: [0, 0], temp: undefined, query: undefined, isInput: inputParams.includes(d) });\r\n                }\r\n              }\r\n              d3.selectAll('.myBrush rect.overlay').attr('x', -25).attr('width', 40);\r\n            });\r\n        }\r\n      }\r\n\r\n      // this is where filtering happens\r\n      function queryFilter(multiPairs) {\r\n        return new Promise(async (resolve, reject) => {\r\n          const startIndex = colName.length + 1 // colName + '_'\r\n          let queryResult = [];\r\n          let indexCounting = 0;\r\n          let pathStyle = 'stroke';\r\n          if (shiftKeyDown) {\r\n            pathStyle = 'visibility';\r\n          } else {\r\n            await myPath.style('visibility', \"visible\");\r\n          }\r\n\r\n          await myPath.style(pathStyle, function (boundData) {\r\n            const resColor = multiPairs.some((ungroupedPairs) => {\r\n\r\n              //grouping the pairs by the dimension of their first element\r\n              let uniqueDims = countUnique(ungroupedPairs.map(pair => pair[0].substring(startIndex, pair[0].indexOf('_', startIndex))));\r\n              let groupedPairs = create2DArray(uniqueDims);\r\n\r\n              if (!ungroupedPairs.length) {\r\n                return false;\r\n              } else {\r\n                let temp = ungroupedPairs[0][0].substring(startIndex, ungroupedPairs[0][0].indexOf('_', startIndex))\r\n                let position = 0;\r\n\r\n                for (let i = 0; i < ungroupedPairs.length; i++) {\r\n                  if (temp === ungroupedPairs[i][0].substring(startIndex, ungroupedPairs[i][0].indexOf('_', startIndex))) {\r\n                    groupedPairs[position].push(ungroupedPairs[i])\r\n                  } else {\r\n                    position++;\r\n                    groupedPairs[position].push(ungroupedPairs[i])\r\n                    temp = ungroupedPairs[i][0].substring(startIndex, ungroupedPairs[i][0].indexOf('_', startIndex))\r\n                  }\r\n                }\r\n              }\r\n\r\n              return groupedPairs.every((pairs) => {\r\n                return pairs.some((pair) => {\r\n                  if (pair.length !== 2 || pair[0].substring(startIndex, pair[0].indexOf('_', startIndex)) === pair[1].substring(startIndex, pair[1].indexOf('_', startIndex))) {\r\n                    return pair.some((brush) => {\r\n                      if (boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[0] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[1]) {\r\n                        return false;\r\n                      } else {\r\n\r\n                        return brushes.find(br => br.id === brush).extent[1] <= boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] <= brushes.find(br => br.id === brush).extent[0];\r\n                      }\r\n                    })\r\n                  } else {\r\n                    return pair.every((brush) => {\r\n                      if (boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[0] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] === brushes.find(br => br.id === brush).extent[1]) {\r\n                        return false;\r\n                      } else {\r\n                        return brushes.find(br => br.id === brush).extent[1] <= boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] && boundData[brush.substring(startIndex, brush.indexOf('_', startIndex))] <= brushes.find(br => br.id === brush).extent[0];\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              })\r\n            }) ? selected(this) : unselected(this);\r\n\r\n            if (resColor === colorBrushed) {\r\n              queryResult.push(boundData);\r\n            }\r\n            indexCounting++;\r\n            return resColor;\r\n          })\r\n\r\n          resolve(queryResult);\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n\r\n      function selected(node) {\r\n        if (!brushSelections.includes(node.getAttribute('id'))) {\r\n          brushSelections.push(node.getAttribute('id'));\r\n          commitBrushSelections(brushSelections);\r\n        }\r\n\r\n        // coloring\r\n        const relatives = findAlternativeRelativesFromID(alternatives, node.getAttribute('id'))\r\n          .map((alt) => alt.get('viewId')).toJS();\r\n\r\n        relatives.map((relative) => {\r\n          d3.select(document.getElementById(relative))\r\n            .style('border', '1.5px')\r\n            .style('border-style', 'solid')\r\n            .style('border-color', colorSelectedRelated)\r\n            .style('border-radius', '7px')\r\n            .style('-webkit-box-shadow', '0px 0px 5px ' + colorSelectedRelated);\r\n        })\r\n\r\n        if (shiftKeyDown) {\r\n          return \"visible\";\r\n        } else {\r\n          if (alreadySelected(node.getAttribute('id'))) {\r\n            return colorSelected;\r\n          } else {\r\n            return colorBrushed;\r\n          }\r\n        }\r\n      }\r\n\r\n      function unselected(node) {\r\n        if (brushSelections.includes(node.getAttribute('id'))) {\r\n          brushSelections.splice(brushSelections.indexOf(node.getAttribute('id')), 1);\r\n          commitBrushSelections(brushSelections);\r\n        }\r\n\r\n        // uncoloring\r\n        const relatives = findAlternativeRelativesFromID(alternatives, node.getAttribute('id'))\r\n          .map((alt) => alt.get('viewId')).toJS();\r\n\r\n        relatives.map((relative) => {\r\n          d3.select(document.getElementById(relative))\r\n            .style('border', 'none')\r\n            .style('border-style', 'none')\r\n            .style('border-color', 'none')\r\n            .style('border-radius', 'none')\r\n            .style('-webkit-box-shadow', 'none');\r\n        })\r\n\r\n        if (shiftKeyDown) {\r\n          return \"hidden\";\r\n        } else {\r\n          return colorUnselected;\r\n        }\r\n      }\r\n\r\n      async function joinHandles(nonEmptyBrushes, multiPairs) {\r\n        return new Promise(async (resolve, reject) => {\r\n          if (nonEmptyBrushes.length) {\r\n            if (brushEngine.tempOrder.length === 0) {\r\n              const ps = await pairBrushes(nonEmptyBrushes);\r\n              multiPairs[0] = ps;\r\n            } else {\r\n              for (let i = 0; i <= brushEngine.tempOrder.length; i++) {\r\n                let ps;\r\n                if (brushEngine.tempOrder[i]) {\r\n                  ps = await pairBrushes(nonEmptyBrushes.splice(0, nonEmptyBrushes.findIndex(br => br.temp === brushEngine.tempOrder[i])));\r\n                } else {\r\n                  ps = await pairBrushes(nonEmptyBrushes.splice(0, nonEmptyBrushes.length));\r\n                }\r\n                multiPairs[i] = ps;\r\n              }\r\n            }\r\n            resolve(multiPairs)\r\n          } else {\r\n            reject([[]]); // reject\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * @param {array} brushes: an array of brush objects\r\n       * @return {array} pairs: an array of brush.id pairs\r\n       */\r\n      async function pairBrushes(nonEmptyBrushes) {\r\n        return new Promise(async (resolve, reject) => {\r\n          if (nonEmptyBrushes.length) {\r\n            const nonEmptyDimensions = [];\r\n\r\n            dimensions.map((dim) => {\r\n              if (nonEmptyBrushes.some(br => br.dimension === dim)) {\r\n                nonEmptyDimensions.push(dim)\r\n              }\r\n            });\r\n\r\n            const grouped = groupBy(nonEmptyBrushes, br => br.dimension)\r\n            const brushesByDimension = [];\r\n\r\n            nonEmptyDimensions.map((dim) => {\r\n              brushesByDimension.push(grouped.get(dim));\r\n            });\r\n\r\n            // we need to see in which dimensions there is action\r\n            let nonEmptyDimensionPairs = [];\r\n\r\n            nonEmptyDimensionPairs = nonEmptyDimensions.reduce((result, value, index, array) => {\r\n              if (index % 2 === 0 || index % 2 === 1)\r\n                result.push(array.slice(index, index + 2));\r\n              return result;\r\n            }, []);\r\n\r\n            // from those, we need pairs, not singles\r\n            const anotherArr = [];\r\n\r\n            nonEmptyDimensionPairs.map((dims, i) =>\r\n              brushesByDimension.map((brushes, i) => {\r\n                if (dims.length) {\r\n                  anotherArr.push(brushes.filter((br) => br.dimension === dims[0]).map(b => b.id)\r\n                    .concat(brushes.filter((br) => br.dimension === dims[1]).map(b => b.id)));\r\n                }\r\n              })\r\n            )\r\n\r\n            // the rest, just get nonempty\r\n            const result = anotherArr.filter(e => e.length);\r\n\r\n            if (result.length === 1) {\r\n              resolve(result);\r\n            } else if (result.length > 1) {\r\n              const pairs = []\r\n              // pair them as [brush.id, brush.id]\r\n              pairwise(result, (current, next) => {\r\n                for (let i = 0; i < current.length; i++) {\r\n                  for (let j = 0; j < next.length; j++) {\r\n                    pairs.push([current[i], next[j]]);\r\n                  }\r\n                }\r\n              });\r\n              resolve(pairs);\r\n            }\r\n          } else {\r\n            reject('empty brushes'); // reject\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n\r\n      function drawPolygons(multiPairs, e) {\r\n\r\n        // clean up and start anew\r\n        svg.selectAll(\"polygon\").each(function () {\r\n          this.remove();\r\n        })\r\n\r\n        multiPairs.map((pairs, i) => pairs.map(br => {\r\n          if (br.length > 0) {\r\n            const handles = [[], []];\r\n\r\n            br.map((b) => {\r\n              d3.select('#' + b)\r\n                .selectAll('.handle')\r\n                .each(function (d) {\r\n                  if (d.type === 'n') {\r\n                    handles[0].push({ \"x\": parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)), \"y\": parseInt(this.getAttribute('y')) });\r\n                  } else {\r\n                    handles[1].push({ \"x\": parseInt(this.parentNode.parentNode.getAttribute('transform').slice(10, 14)), \"y\": parseInt(this.getAttribute('y')) });\r\n                  }\r\n                })\r\n            });\r\n\r\n            const dataPoints = handles[0].sort((a, b) => a.x - b.x).concat(handles[1].sort((a, b) => b.x - a.x))\r\n            let myStr = [];\r\n\r\n            dataPoints.map((dp) => {\r\n              myStr.push(dp.x.toString() + \",\" + dp.y.toString() + \" \");\r\n            })\r\n\r\n            svg.append('polygon')\r\n              .attr('id', 'polygon' + (i + 1))\r\n              .attr(\"points\", myStr.join(\"\"))\r\n              .style(\"fill\", function () {\r\n                if (queryEngine.current === parseInt(this.getAttribute('id').slice(-1))) {\r\n                  return colorQuerySelected;\r\n                } else {\r\n                  return colorQueryNotSelected;\r\n                }\r\n              })\r\n              .style(\"strokeWidth\", \"0px\")\r\n              .style('cursor', 'cell')\r\n              .on(\"click\", function () {\r\n                if (queryEngine.current !== parseInt(this.getAttribute('id').slice(-1))) { // selecting query\r\n\r\n                  if (queryEngine.advMode === true) {\r\n                    queryEngine.advMode = false;\r\n                  }\r\n\r\n                  queryEngine.current = parseInt(this.getAttribute('id').slice(-1));\r\n                  queryEngine.total = multiPairs.length;\r\n\r\n                  if (queryEngine.current === 1) {\r\n                    queryEngine.temp = multiPairs[queryEngine.current - 1].length;\r\n                  } else if (queryEngine.current === queryEngine.total) {\r\n                    queryEngine.temp = brushEngine.tempOrder.slice(-1)[0];\r\n                  } else {\r\n                    queryEngine.temp = brushEngine.tempOrder[queryEngine.current - 2];\r\n                  }\r\n\r\n                  d3.selectAll('polygon').style(\"fill\", colorQueryNotSelected);\r\n                  d3.selectAll('#' + this.getAttribute('id')).style(\"fill\", colorQuerySelected);\r\n                } else { // de-selecting query\r\n\r\n                  queryEngine.memo = {\r\n                    current: queryEngine.current,\r\n                    temp: queryEngine.temp,\r\n                    total: queryEngine.total,\r\n                    advMode: queryEngine.advMode\r\n                  };\r\n\r\n                  queryEngine.advMode = true;\r\n                  queryEngine.current = 0;\r\n                  queryEngine.temp = 0;\r\n                  d3.selectAll('#' + this.getAttribute('id')).style(\"fill\", colorQueryNotSelected);\r\n                }\r\n              });\r\n          }\r\n        }));\r\n        d3.select('#drawArea').raise();\r\n      }\r\n\r\n      /**\r\n       * get all brushes on a dimension/axis\r\n       * turn of overlay for all but the most recent\r\n       */\r\n      function stopListening() {\r\n        dimensions.forEach((d) => {\r\n          const brushesOnDimension = brushes.filter((obj) => obj.dimension === d);\r\n          const currentBrush = brushesOnDimension[brushesOnDimension.length - 1];\r\n\r\n          brushesOnDimension.forEach((b, index) => {\r\n            d3.select('#' + colName + '_' + d + '_brush' + index)\r\n              .selectAll('.overlay')\r\n              .style('pointer-events', function () {\r\n                if (index === brushesOnDimension.indexOf(currentBrush)) {\r\n                  return 'all';\r\n                } else {\r\n                  return 'none';\r\n                }\r\n              });\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * updates the graph to render the sketched point\r\n     * @param {object} sketchData: sketch data\r\n     */\r\n    function updatePoints(sketchData) {\r\n      // these are data point handlers for dragging/alteration\r\n      const sketchPoint = svg.selectAll('.mySketchPoint')\r\n        .data([sketchData])\r\n        .selectAll('circle')\r\n        .data((d) => Object.entries(d))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('id', (d) => d[0])\r\n        .attr('r', 3.5)\r\n        .attr('cx', function (d) {\r\n          return x(d[0]);\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y[d[0]](d[1]);\r\n        })\r\n        .style('fill', colorSketch)\r\n        .style('stroke', colorUnselected)\r\n        .style('stroke-width', 0.8);\r\n\r\n      const sketchPath = svg.selectAll('.mySketchPath')\r\n        .data([sketchData]) // binding data to path elements\r\n        .attr('d', sPath)\r\n        .style('fill', 'none')\r\n        .style('stroke-width', 1.7)\r\n        .style('stroke', colorSketchPath)\r\n        .style('opacity', opacity1);\r\n\r\n      sketchPoint.exit().remove();\r\n      sketchPath.exit().remove();\r\n    }\r\n\r\n    /** main function to drag axes\r\n    * @param {object} element\r\n    */\r\n    function dragAxis() {\r\n      const prevDimensions = Object.assign([], dimensions);\r\n\r\n      myAxis.call(d3.drag()\r\n        .subject((d) => {\r\n          return { x: x(d) };\r\n        })\r\n        .on('start', (d) => {\r\n          dragging[d] = x(d);\r\n        })\r\n        .on('drag', (d) => {\r\n          dragging[d] = Math.min(width, Math.max(0, d3.event.x));\r\n          svg.selectAll('.myPath').attr('d', path);\r\n          dimensions.sort((a, b) => {\r\n            return position(a) - position(b);\r\n          });\r\n          x.domain(dimensions);\r\n          svg.selectAll('.myAxis').attr('transform', function (d) {\r\n            return 'translate(' + position(d) + ')';\r\n          });\r\n        })\r\n        .on('end', function (d) {\r\n          delete dragging[d];\r\n          transition(d3.select(this)).attr('transform', 'translate(' + x(d) + ')');\r\n          transition(svg.selectAll('.myPath')).attr('d', path);\r\n          transition(svg.selectAll('.data-points'))\r\n            .attr('cx', function (d) {\r\n              return x(d[0]);\r\n            })\r\n            .attr('cy', function (d) {\r\n              return y[d[0]](d[1]);\r\n            });\r\n\r\n          if (JSON.stringify(prevDimensions) !== JSON.stringify(dimensions)) {\r\n            reOrderDefaultOptions();\r\n          }\r\n\r\n        })\r\n      );\r\n    }\r\n\r\n    /** main function to drag data-points\r\n    * @param {object} element\r\n    */\r\n    function dragPoints() {\r\n      let scaleCoefficient;\r\n      let original;\r\n      let origin;\r\n      let index;\r\n      let delta;\r\n      let id;\r\n      let nodes = [];\r\n      let liveData = {};\r\n      let liveIds = [];\r\n\r\n      svg.selectAll('.data-points-' + colName).call(\r\n        d3.drag()\r\n          .on('start', function (d) {\r\n            changeEditingState(true);\r\n            if (inputParams.includes(d[0])) {\r\n              d3.select(document.getElementById(d[0] + 'on' + colName))\r\n                .style('fill', colorSelectedCoordinate);\r\n\r\n              d3.select(document.getElementById(d[0] + 'on' + colName).children[document.getElementById(d[0] + 'on' + colName).children.length - 1])\r\n                .style('fill', colorSelected)\r\n                .style('font-weight', 'bold');\r\n\r\n              const idOfNode = d3.select(this.parentNode).nodes()[0]['attributes']['id']['nodeValue'];\r\n              index = idMap.indexOf(idOfNode);\r\n              original = data[index][d[0]];\r\n\r\n              d3.selectAll('#' + this.getAttribute('id')).each(function () {\r\n                id = this.parentElement.getAttribute('id')\r\n                index = idMap.indexOf(id)\r\n                origin = data[index][d[0]];\r\n                liveIds.push(id);\r\n                return nodes.push({ id: id, index: index, dim: d[0], origin: origin });\r\n              });\r\n\r\n              if (selectedDimensions.length !== 0) {\r\n                selectedDimensions.map((dim) => {\r\n                  d3.selectAll('#' + 'data-point-' + Object.keys(selectedPaths[0]).indexOf(dim) + '-on-' + dim + '-' + colName).each(function () {\r\n                    id = this.parentElement.getAttribute('id')\r\n                    index = idMap.indexOf(id)\r\n                    origin = data[index][dim];\r\n                    liveIds.push(id);\r\n                    return nodes.push({ id: id, index: index, dim: dim, origin: origin });\r\n                  });\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .on('drag', function (d) {\r\n            d[1] = y[d[0]].invert(d3.event.y);\r\n\r\n            if (inputParams.includes(d[0])) {\r\n              delta = d[1] - original;\r\n\r\n              d3.selectAll('#' + this.getAttribute('id')).each(function () {\r\n                id = this.parentElement.getAttribute('id');\r\n                index = nodes.find((x) => x.id === id && x.dim === d[0]).index;\r\n                origin = nodes.find((x) => x.id === id && x.dim === d[0]).origin;\r\n                if (origin + delta >= y[d[0]].domain()[0] && origin + delta <= y[d[0]].domain()[1]) {\r\n                  d3.select(this).attr('cy', y[d[0]](origin + delta));\r\n                  data[index][d[0]] = origin + delta;\r\n                }\r\n                if (!liveData[id]) {\r\n                  liveData[id] = {};\r\n                }\r\n                liveData[id][d[0]] = data[index][d[0]];\r\n              });\r\n\r\n              if (selectedDimensions.length !== 0) {\r\n                selectedDimensions.map((dim) => {\r\n                  d3.selectAll('#' + 'data-point-' + Object.keys(selectedPaths[0]).indexOf(dim) + '-on-' + dim + '-' + colName).each(function () {\r\n                    id = this.parentElement.getAttribute('id');\r\n                    index = nodes.find((x) => x.id === id && x.dim === dim).index;\r\n                    origin = nodes.find((x) => x.id === id && x.dim === dim).origin;\r\n                    scaleCoefficient = ((y[dim].domain()[1] - y[dim].domain()[0]) / (y[d[0]].domain()[1] - y[d[0]].domain()[0]));\r\n                    if (origin + (delta * scaleCoefficient) >= y[dim].domain()[0] && origin + (delta * scaleCoefficient) <= y[dim].domain()[1]) {\r\n                      d3.select(this).attr('cy', y[dim](origin + (delta * scaleCoefficient)));\r\n                      data[index][dim] = origin + (delta * scaleCoefficient);\r\n                      if (!liveData[id]) {\r\n                        liveData[id] = {};\r\n                      }\r\n                      liveData[id][dim] = data[index][dim];\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n              myPath.attr('d', path);\r\n              myTooltip\r\n                .style('visibility', 'visible')\r\n                .style('left', (d3.event.pageX) + 'px')\r\n                .style('top', (d3.event.pageY - 28) + 'px')\r\n                .text(Math.round(y[d[0]].invert(d3.event.y)));\r\n\r\n              // sendMessage({data:liveData, ids:liveIds , type: parallelConstants.get(\"PARALLEL_EDIT_MESSAGE_TYPE\")});\r\n            }\r\n          })\r\n          .on('end', function (d) {\r\n            if (inputParams.includes(d[0])) {\r\n              let editedAlts = {};\r\n              nodes.map((node) => {\r\n                if (!editedAlts[node.id]) {\r\n                  editedAlts[node.id] = {};\r\n                }\r\n                editedAlts[node.id][node.dim] = data[node.index][node.dim];\r\n                commitChanges(node.id, node.dim, data[node.index][node.dim]);\r\n              });\r\n\r\n              submitChanges(editedAlts);\r\n              nodes = [];\r\n              liveData = {};\r\n            }\r\n            myTooltip.style('visibility', 'hidden');\r\n            changeEditingState(false);\r\n          })\r\n      );\r\n    }\r\n\r\n    /**\r\n     * this function takes in a row of data and draws a line\r\n     * @param {number} d\r\n     * @return {number} x-y pair\r\n     */\r\n    function path(d) {\r\n      if (d) {\r\n        return d3.line()(dimensions.map((p) => {\r\n          return [position(p), y[p](d[p])];\r\n        }));\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n    /**\r\n     * this function takes in a row of data and draws a line\r\n     * @param {number} d\r\n     * @return {number} x-y pair for sketch data\r\n     */\r\n    function sPath(d) {\r\n      return d3.line()(dimensions.filter((p) => Object.keys(sketchPoints).includes(p)).map((p) => {\r\n        return [position(p), y[p](d[p])];\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * this function reorders axes\r\n     * @param {number} d\r\n     * @return {number} position\r\n     */\r\n    function position(d) {\r\n      const v = dragging[d];\r\n      return v == null ? x(d) : v;\r\n    }\r\n\r\n    /**\r\n    * function for transition animations\r\n    * @param {object} g\r\n    * @return {object} operation on object\r\n    */\r\n    function transition(g) {\r\n      return g.transition().duration(500);\r\n    }\r\n  }\r\n\r\n  updateBrushes = (brush, colId, remove) => {\r\n    try {\r\n      if (remove) {\r\n        if (this.props.queries.get('brushes').toJS().filter(b => b.colId = colId).find(b => b.id === brush.id)) {\r\n          this.props.removeBrush(brush.id, colId);\r\n        }\r\n      } else {\r\n        if (!this.props.queries.get('brushes').toJS().filter(b => b.colId = colId).find(b => b.id === brush.id)) {\r\n          this.props.addBrush(brush, colId);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * commits changes to store\r\n   * @param {number} id\r\n   * @param {object} dimension\r\n   * @param {number} newValue\r\n   */\r\n  commitChanges = (id, dimension, newValue) => {\r\n    this.props.alterAlternative(id, dimension, newValue);\r\n  }\r\n\r\n  /**\r\n   * send the changes to the server\r\n   * @param {object} editedAlts\r\n   */\r\n  submitChanges = (editedAlts) => {\r\n    this.props.editAlternatives(editedAlts);\r\n  }\r\n\r\n  alreadySelected = (id) => {\r\n    const altsSelected = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n      .filter((alternative) => (alternative.get('viewId') === id));\r\n\r\n    if (altsSelected.size > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  findNonEmptyBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => (b.extent[0] + b.extent[1]) !== 0).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject([]); // reject\r\n      }\r\n    });\r\n  }\r\n\r\n  findNonEmptyOutputBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => ((b.extent[0] + b.extent[1]) !== 0) && !b.isInput).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject('empty brushes'); // reject\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  findNonEmptyInputBrushes = async (brushes) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (brushes.length) {\r\n        resolve(brushes.filter((b) => ((b.extent[0] + b.extent[1]) !== 0) && b.isInput).sort((a, b) => a.temp - b.temp)); // fulfilled\r\n      } else {\r\n        reject('empty brushes'); // reject\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // flag: cannot be a state\r\n  changeEditingState = (state) => {\r\n    this.isEditing = state;\r\n  }\r\n\r\n  commitBrushSelections = (brushSelections) => {\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = brushSelections.length;\r\n  }\r\n\r\n  /**\r\n  * updates the state with selectedDimensions  data\r\n  * @param {array} selectedDimensions\r\n  */\r\n  commitDimensions = (selectedDimensions) => {\r\n    this.setState({ selectedDimensions: selectedDimensions });\r\n  }\r\n\r\n  toggleAdjustInputBrushes = () => {\r\n    this.setState({ adjustInputBrushes: !this.state.adjustInputBrushes });\r\n  }\r\n\r\n  commitValueBands = (message, dim, end, val) => {\r\n    if (message === 'OK') {\r\n      this.props.setValueBands(dim, end, val);\r\n    } else if (message === 'NaN') {\r\n      this.setState({ shouldWarn: true, warningMessage: 'Please enter a number.' })\r\n    } else if (message === 'OoB') {\r\n      this.setState({ shouldWarn: true, warningMessage: 'Please enter a proper range.' })\r\n    }\r\n  }\r\n\r\n  /**\r\n  * updates the state with sketch data\r\n  * @param {object} sketch\r\n  */\r\n  commitSketch = (sketch) => {\r\n    this.setState({ sketchData: Object.assign(this.state.sketchData, sketch) });\r\n  }\r\n\r\n  reOrderDefaultOptions = () => {\r\n    const currentDimensions = Object.assign([], this.state.dimensions);\r\n\r\n    this.defaultOptions = [];\r\n\r\n    currentDimensions.map((d) => this.defaultOptions.push({ value: d, label: d.toString() }));\r\n    this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n  }\r\n\r\n  /**\r\n   * clicking on a path selects it\r\n   * @param {event} e\r\n   */\r\n  selectPath = (e) => {\r\n    const altsSelected = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n      .filter((alternative) => (alternative.get('viewId') === e.target.getAttribute('id')));\r\n\r\n    // if alternativesSelected.size is equal to zero, that means\r\n    // this alternative is not selected\r\n    if (!this.state.isLiveEditing) {\r\n      if (altsSelected.size === 0) {\r\n        this.props.selectAlternative(e.target.getAttribute('id'));\r\n\r\n        if (this.state.isCloning === true) {\r\n          this.cloneBases.push(e.target.getAttribute('id'));\r\n          this.props.cloneEditAlternatives([e.target.getAttribute('id')], [this.props.collection.get('viewId')])\r\n        }\r\n      } else {\r\n        this.props.deselectAlternative(e.target.getAttribute('id'));\r\n      }\r\n    } else {\r\n      if (altsSelected.size === 0) {\r\n        this.props.deselectAllAlternatives();\r\n        this.props.selectAlternative(e.target.getAttribute('id'));\r\n      } else {\r\n        this.props.deselectAlternative(e.target.getAttribute('id'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * event handler for adding/removing parameters/dimensions to the chart\r\n   * @param {object} options\r\n   * @param {object} action\r\n   */\r\n  toggleParameter = (options, { action, removedValue }) => {\r\n    const newValueBands = Object.assign({}, this.state.valueBands);\r\n    const currentDimensions = Object.assign([], this.state.dimensions)\r\n    let index;\r\n    this.defaultOptions = [];\r\n\r\n    switch (action) {\r\n      case 'remove-value':\r\n        this.props.alternatives.get('alternatives').filter((alt) =>\r\n          this.props.collection.get('altsid').contains(alt.get('viewId'))).map((alt) => {\r\n            this.props.removeDataField(alt, removedValue.value);\r\n          });\r\n\r\n        index = currentDimensions.indexOf(removedValue.value);\r\n        currentDimensions.splice(index, 1);\r\n\r\n        this.setState({ dimensions: currentDimensions, valueBands: removeFieldFromDatum(newValueBands, removedValue.value) });\r\n        currentDimensions.map((d) => this.defaultOptions.push({ value: d, label: d.toString() }));\r\n        this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n        if (this.state.isLocked) {\r\n          this.props.lockAspectRatio(currentDimensions);\r\n        }\r\n        break;\r\n      case 'select-option':\r\n        this.props.alternatives.get('alternatives').filter((alt) =>\r\n          this.props.collection.get('altsid').contains(alt.get('viewId'))).map((alt) => {\r\n            this.props.addDataField(alt, options[options.length - 1]['label']);\r\n          });\r\n\r\n        currentDimensions.push(options[options.length - 1]['label']);\r\n\r\n        this.setState({\r\n          dimensions: currentDimensions,\r\n          valueBands: addFieldToDatum(\r\n            newValueBands, options[options.length - 1]['label'],\r\n            this.state.backupValueBands),\r\n        });\r\n        currentDimensions.map((d) => this.defaultOptions.push({ value: d, label: d.toString() }));\r\n        this.props.orderCollectionDimensions(this.props.collection.get('viewId'), currentDimensions);\r\n        if (this.state.isLocked) {\r\n          this.props.lockAspectRatio(currentDimensions);\r\n        }\r\n        break;\r\n      default:\r\n        console.log('no valid selection');\r\n    }\r\n  }\r\n\r\n\r\n  //#region toggle state for current mode \r\n  /**\r\n   * trigger a state change when selecting a parameter\r\n   */\r\n  selectParameter = () => {\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isToggling: !this.state.isToggling });\r\n  }\r\n\r\n  /**\r\n   * toggles alter mode\r\n   */\r\n  toggleAlterMode = () => {\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isAltering: !this.state.isAltering })\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  toggleLiveEditMode = () => {\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isLiveEditing: !this.state.isLiveEditing });\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  /**\r\n   * toggles sketch mode\r\n   */\r\n  toggleSketchMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isSketching: !this.state.isSketching });\r\n  }\r\n\r\n  /**\r\n   * toggles cartesian product mode\r\n   */\r\n  toggleCPMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isCPing: !this.state.isCPing });\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  /**\r\n   * toggles parameter spectra mode\r\n   */\r\n  togglePSMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isPSing: !this.state.isPSing });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  /**\r\n   * toggles parameter spectra mode\r\n   */\r\n  toggleSCPMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isSCPing: !this.state.isSCPing });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  /**\r\n   * toggles sensitivity analysis mode\r\n   */\r\n  toggleSAMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isBrushing: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isSAing: !this.state.isSAing });\r\n    this.setState({ sketchData: {} });\r\n  }\r\n\r\n  toggleCloneMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isBrushing: false })\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ isCloning: !this.state.isCloning });\r\n    this.props.setCollectionMode(this.props.collection.get('viewId'), { isCloning: !this.state.isCloning });\r\n    this.setState({ selectedDimensions: [] });\r\n  }\r\n\r\n  toggleBrushMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ isSampling: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isBrushing: !this.state.isBrushing })\r\n\r\n    if (this.brushSelections.length > 0) {\r\n      const alternatives = this.props.alternatives.get('alternatives');\r\n\r\n      this.brushSelections.map((alternativeID) => {\r\n        findAlternativeRelativesFromID(alternatives, alternativeID).map((relative) => {\r\n          d3.select(document.getElementById(relative.get('viewId')))\r\n            .style('border', null)\r\n            .style('border-style', null)\r\n            .style('border-color', null)\r\n            .style('border-radius', null)\r\n            .style('-webkit-box-shadow', null);\r\n        })\r\n        this.props.selectAlternative(alternativeID)\r\n      })\r\n    }\r\n\r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.brushes = [];\r\n\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    };\r\n\r\n    this.props.clearAllBrushes();\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = this.brushSelections.length;\r\n  }\r\n\r\n  toggleSampleMode = () => {\r\n    this.setState({ isToggling: false });\r\n    this.setState({ isAltering: false });\r\n    this.setState({ isLiveEditing: false });\r\n    this.setState({ isCloning: false });\r\n    this.setState({ isSketching: false });\r\n    this.setState({ isCPing: false });\r\n    this.setState({ isPSing: false });\r\n    this.setState({ isSAing: false });\r\n    this.setState({ isSCPing: false });\r\n    this.setState({ sketchData: {} });\r\n    this.setState({ isBrushing: false })\r\n    this.setState({ isSampling: !this.state.isSampling })\r\n\r\n    if (this.brushSelections.length > 0) {\r\n      const alternatives = this.props.alternatives.get('alternatives');\r\n\r\n      this.brushSelections.map((alternativeID) => {\r\n        findAlternativeRelativesFromID(alternatives, alternativeID).map((relative) => {\r\n          d3.select(document.getElementById(relative.get('viewId')))\r\n            .style('border', null)\r\n            .style('border-style', null)\r\n            .style('border-color', null)\r\n            .style('border-radius', null)\r\n            .style('-webkit-box-shadow', null);\r\n        })\r\n        this.props.selectAlternative(alternativeID)\r\n      })\r\n    }\r\n\r\n    this.brushSelections = [];\r\n    this.committedQueries = [];\r\n    this.brushes = [];\r\n\r\n    this.brushEngine = {\r\n      temp: 0,\r\n      tempOrder: [],\r\n      multiPairs: [[]],\r\n    };\r\n\r\n    this.queryEngine = {\r\n      current: 1,\r\n      temp: 1,\r\n      total: 1,\r\n      advMode: false,\r\n      memo: {},\r\n    };\r\n\r\n    this.props.clearAllBrushes();\r\n    this.props.infoRef.current.childNodes[0].childNodes[2].innerHTML = this.brushSelections.length;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  // TODO: create mock alternatives\r\n  createAlternative = () => {\r\n    const selectedIds = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true).map((alt) => alt.get('viewId'));\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    this.props.createNewAlternative(selectedIds, this.state.sketchData);\r\n    this.setState({ sketchData: {} })\r\n  }\r\n\r\n  /**\r\n   * handler for Shuffle button (cartesian product)\r\n   */\r\n  cartesianProduct = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true)\r\n\r\n    if (selectedAltsInCollection.size === 2) {\r\n      this.props.newCartesianProduct(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions, this.props.collection.get('destinations').toJS());\r\n      this.setState({ selectedDimensions: [] });\r\n    }\r\n  }\r\n\r\n  parameterSpectra = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true)\r\n\r\n    if (selectedAltsInCollection.size > 0) {\r\n      this.props.newParameterSpectra(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions, this.paramaterSpectraAltNum, this.paramaterSpectraDelta, this.props.collection.get('destinations').toJS());\r\n      this.setState({ selectedDimensions: [] });\r\n    }\r\n  }\r\n\r\n  spectralCartesianProduct = () => {\r\n    const selectedDimensions = Object.assign([], this.state.selectedDimensions)\r\n\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true)\r\n\r\n    if (selectedAltsInCollection.size > 0) {\r\n      this.props.newSpectralCartesianProduct(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), selectedDimensions, this.props.collection.get('viewId'), this.props.collection.get('destinations').toJS());\r\n      this.setState({ selectedDimensions: [] });\r\n    }\r\n  }\r\n\r\n  sensitivityAnalysis = () => {\r\n\r\n    // TODO: use this.props.selectedAlts\r\n    const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true);\r\n\r\n    if (selectedAltsInCollection.size > 0) {\r\n      this.props.newSensitivityAnalysis(selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS(), this.sensitivityAnalysisDelta, this.props.collection.get('destinations').toJS());\r\n    }\r\n  }\r\n\r\n  handleConfirmQuery = (committedQueries) => {\r\n    if (committedQueries.length > 0) {\r\n      if (this.props.collection.get('destinations').size === 0) {\r\n        for (let i = 0; i < committedQueries.length; i++) {\r\n\r\n          (function (query, index, operation, name) {\r\n            setTimeout(function () {\r\n              operation(0 + (index * 2), 5, 3, 5, query, name + '-query' + (index + 1));\r\n            }, 3500 * i);\r\n          })(committedQueries[i], i, this.props.createNewCollection, this.props.collection.get('collectionName'));\r\n\r\n          this.props.addQuery(this.props.collection.get('collectionName') + '-query' + (i + 1), this.props.collection.get('collectionName'), 'someString', committedQueries[i])\r\n\r\n        }\r\n        toast.info('Please wait while queries are being committed...', { autoClose: 3500 * committedQueries.length, position: 'bottom-center', rtl: false })\r\n\r\n      } else {\r\n        for (let j = 0; j < this.props.collection.get('destinations').size; j++) {\r\n          if (this.props.collection.get('destinations').toJS()[j]['__isNew__']) {\r\n            for (let i = 0; i < committedQueries.length; i++) {\r\n              (function (query, index, operation, name) {\r\n                setTimeout(function () {\r\n                  operation(0 + (index * 2), 5, 2, 4, query, name);\r\n                }, 3500 * i);\r\n              })(committedQueries[i], i, this.props.createNewCollection, this.props.collection.get('destinations').toJS()[j]['label']);\r\n            }\r\n          } else {\r\n            for (let i = 0; i < committedQueries.length; i++) {\r\n              (function (query, destination, operation) {\r\n                setTimeout(function () {\r\n                  operation(query, [destination]);\r\n                }, 3500 * i);\r\n              })(committedQueries[i], this.props.collection.get('destinations').toJS()[j]['value'], this.props.cloneAlternatives);\r\n\r\n              this.props.addQuery(this.props.collection.get('collectionName') + '-query' + (i + 1), this.props.collection.get('collectionName'), 'someString', committedQueries[i])\r\n            }\r\n          }\r\n        }\r\n        toast.info('Please wait while queries are being committed...', { autoClose: 3000 * committedQueries.length * this.props.collection.get('destinations').size, position: 'bottom-center', rtl: false })\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: '',\r\n      confirmAction: null,\r\n    })\r\n  }\r\n\r\n  handleBrushAxisClick = () => {\r\n    const queries = Object.assign([], this.committedQueries);\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleBrushMode();\r\n\r\n    if (this.state.isBrushing) {\r\n      this.props.infoRef.current.childNodes[0].childNodes[1].style.display = 'inline';\r\n      this.props.infoRef.current.childNodes[0].childNodes[2].style.display = 'none';\r\n      if (queries.length > 0) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'Do you want to commit these queries?', confirmAction: this.handleConfirmQuery.bind(this, queries) });\r\n      }\r\n    } else {\r\n      this.props.infoRef.current.childNodes[0].childNodes[1].style.display = 'none';\r\n      this.props.infoRef.current.childNodes[0].childNodes[2].style.display = 'inline';\r\n    }\r\n  }\r\n\r\n  handleSampleAxisClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleSampleMode();\r\n  }\r\n\r\n  handleParameterSpectraClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.togglePSMode();\r\n    if (this.state.isPSing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n        alt.get('isSelected') === true).size < 1) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You must select at least 1 alternatives.' });\r\n        return;\r\n      } else {\r\n        this.parameterSpectra();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSpectralCartesianProductClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleSCPMode();\r\n\r\n    if (this.state.isSCPing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n        alt.get('isSelected') === true).size < 1) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You must select at least 1 alternatives.' });\r\n        return;\r\n      } else if (this.state.selectedDimensions.length > 4) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You can select at most 4 dimensions.' });\r\n        return;\r\n      } else {\r\n        this.spectralCartesianProduct();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSensitivityAnalysisClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleSAMode();\r\n    if (this.state.isSAing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n        alt.get('isSelected') === true).size < 1) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You must select at least 1 alternatives.' });\r\n        return;\r\n      } else {\r\n        this.sensitivityAnalysis()\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCloneEditAlternativeClick = () => {\r\n    if (this.state.isCloning === false) {\r\n      this.altsInCollectionBefore = this.props.alternatives.get('alternatives')\r\n        .filter((alt) => this.props.collection.get('altsid').contains(alt.get('viewId')))\r\n        .map((alt) => alt.get('viewId')).toJS();\r\n\r\n      this.cloneBases = [];\r\n      this.toggleCloneMode();\r\n    } else {\r\n      this.altsInCollectionAfter = this.props.alternatives.get('alternatives')\r\n        .filter((alt) => this.props.collection.get('altsid').contains(alt.get('viewId')))\r\n        .map((alt) => alt.get('viewId')).toJS();\r\n\r\n      if (this.altsInCollectionBefore.length !== this.altsInCollectionAfter.length) {\r\n        let difference = this.altsInCollectionAfter.filter(x => !this.altsInCollectionBefore.includes(x));\r\n        difference.map((d) => this.props.hoverAlternativeSpecial(d));\r\n      }\r\n\r\n      this.cloneBases.map((b) => this.props.selectAlternative(b));\r\n      this.toggleCloneMode();\r\n    }\r\n  }\r\n\r\n  handleSketchAlternativeClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleSketchMode();\r\n    if (this.state.isSketching) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n        alt.get('isSelected') === true).size < 1) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You must select a base alternative first.' });\r\n        return;\r\n      } else {\r\n        this.createAlternative();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCartesianProductClick = () => {\r\n    this.setState({ shouldWarn: false, warningMessage: '' });\r\n    this.toggleCPMode();\r\n    if (this.state.isCPing) {\r\n      if (this.props.alternatives.get('alternatives').filter((alt) =>\r\n        this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n        alt.get('isSelected') === true).size !== 2) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You must select at least 2 alternatives.' });\r\n        return;\r\n      } else if (this.state.selectedDimensions.length > 4) {\r\n        this.setState({ shouldWarn: true, warningMessage: 'You can select at most 4 dimensions.' });\r\n        return;\r\n      } else {\r\n        this.cartesianProduct()\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHover = (e, viewId, refId, hasEntered) => {\r\n    e.stopPropagation();\r\n\r\n    if (!this.isEditing) {\r\n      if (hasEntered) {\r\n        this.props.hoverAlternative(viewId, refId);\r\n      } else {\r\n        this.props.dehoverAlternative(viewId, refId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handler for mouseover\r\n   * @param {event} e\r\n   */\r\n  handleMouseEnter = (e) => {\r\n    this.handleHover(e, e.target.getAttribute('id'), e.target.getAttribute('refid'), true);\r\n  }\r\n\r\n  /**\r\n   * handler for mouseout\r\n   * @param {event} e\r\n   */\r\n  handleMouseLeave = (e) => {\r\n    this.handleHover(e, e.target.getAttribute('id'), e.target.getAttribute('refid'), false);\r\n  }\r\n\r\n\r\n  handleKeyEvents = (e, eventType) => {\r\n    if (this.state.isBrushing || this.state.isSampling) {\r\n      let toastId = null;\r\n\r\n      // commit query\r\n      // what key?\r\n      if (e.keyCode === 81 || e.keyCode === 113 && eventType == \"down\") {\r\n        if (this.brushSelections.length !== 0) {\r\n          if (this.committedQueries.length === 0 || JSON.stringify(this.committedQueries[this.committedQueries.length - 1]) !== JSON.stringify(this.brushSelections)) {\r\n            this.props.cloneAlternatives(Object.assign([], this.brushSelections), this.props.collection.get('destinations').toJS().map((col) => col.value))\r\n            if (!toast.isActive(toastId)) {\r\n              toastId = toast.success('Query committed', { autoClose: 3000, position: 'bottom-right', rtl: true });\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // reset brush mode\r\n      // what key?\r\n      if (e.keyCode === 82 && eventType == \"down\") {\r\n        this.toggleBrushMode();\r\n        this.props.deselectAllAlternatives();\r\n        setTimeout(() => {\r\n          this.toggleBrushMode();\r\n        }, 300);\r\n      }\r\n\r\n      if (e.keyCode === 16 && eventType == \"down\") {\r\n        this.setState({ shiftKeyDown: true });\r\n      } else if (e.keyCode === 16 && eventType == \"up\") {\r\n        this.setState({ shiftKeyDown: false });\r\n      }\r\n\r\n    }\r\n\r\n    if (this.state.isSampling === true && eventType == \"down\") {\r\n      // submit the samples\r\n      if (e.keyCode === 83) {\r\n        const selectedAltsInCollection = this.props.alternatives.get('alternatives').filter((alt) =>\r\n          this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n          alt.get('isSelected') === true)\r\n\r\n        if (selectedAltsInCollection.size === 1) {\r\n          this.findNonEmptyBrushes(this.brushes).then((results) => {\r\n            const selectedAlt = selectedAltsInCollection.map((alt) => alt.get('viewId')).toJS();\r\n            const brushResult = results.map((result) => {\r\n              return {\r\n                dim: result.dimension,\r\n                sampleNum: parseInt(this.samples[result.dimension]),\r\n                min: Math.min(result.extent[0], result.extent[1]),\r\n                max: Math.max(result.extent[0], result.extent[1]),\r\n                isInput: result.isInput\r\n              }\r\n            })\r\n            this.props.newSampling(selectedAlt, brushResult, this.props.collection.get('destinations').toJS(), this.createOnlyInTheRange);\r\n          });\r\n        }\r\n      } else if (e.keyCode === 65) {\r\n        this.setState({ adjustInputBrushes: true })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleVisibility = () => {\r\n    this.setState({ menuHidden: !this.state.menuHidden });\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ menuOpen: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n\r\n  lockRatio = (locked) => {\r\n    if (locked) {\r\n      this.props.lockAspectRatio(this.state.dimensions)\r\n      this.setState({\r\n        isLocked: locked\r\n      })\r\n    }\r\n    else {\r\n      this.props.unlockAspectRatio(this.state.dimensions);\r\n      this.setState({\r\n        isLocked: locked\r\n      })\r\n    }\r\n  }\r\n\r\n  onParameterSpectraSelect = (e) => {\r\n    this.paramaterSpectraAltNum = e.value;\r\n  }\r\n\r\n  onParameterSpectraDeltaChange = (e) => {\r\n    this.paramaterSpectraDelta = e.target.value;\r\n  }\r\n\r\n  onSensitivityAnalysisDeltaChange = (e) => {\r\n    this.sensitivityAnalysisDelta = e.target.value;\r\n  }\r\n\r\n  samplingCheckboxChanged = (e) => {\r\n    this.createOnlyInTheRange = e.target.checked;\r\n  }\r\n\r\n  /**\r\n  * @function handleDoubleClick\r\n  * @description restores the alternative (i.e. round-trip)\r\n  * @memberof Alternative\r\n  * @param {event} e\r\n  */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.restoreAlternative(e.target.getAttribute('id'));\r\n\r\n  }\r\n\r\n  handleDeleteCancel = () => {\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: \"\",\r\n      confirmAction: null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * rendering elements\r\n   * @return {object} jsx\r\n   */\r\n  render() {\r\n    const width = this.props.width - margin.left - margin.right;\r\n    const height = this.props.height - margin.top - margin.bottom;\r\n    let pathStyle;\r\n\r\n    // this selects the appropriate style object, which is\r\n    // then fed to the {paths} component\r\n    const paths = this.props.altsInCollection.map((d) => {\r\n\r\n      const altsSelected = this.props.altsInCollection\r\n        .filter((alternative) =>\r\n          alternative.get('isSelected')).filter((alternative) => (\r\n            alternative.get('viewId') === d.get('viewId')));\r\n\r\n      const selectedRelatives = this.props.altsInCollection\r\n        .filter((alternative) => this.props.selectedAlts.includes(alternative.get('refId'))\r\n          && alternative.get('viewId') === d.get('viewId'));\r\n\r\n      if (altsSelected.size === 0) {\r\n        if (selectedRelatives.size !== 0) {\r\n          pathStyle = {\r\n            stroke: colorSelectedRelated,\r\n            opacity: opacityMid2,\r\n          };\r\n        } else {\r\n          pathStyle = {\r\n            stroke: colorUnselected,\r\n            opacity: opacityMid1,\r\n          };\r\n        }\r\n      } else if (altsSelected.size !== 0) {\r\n        pathStyle = {\r\n          stroke: colorSelected,\r\n          opacity: opacity1,\r\n        };\r\n      }\r\n\r\n      return <path\r\n        className={\"pc \" + \"pc-ref-\" + d.get('refId') + \" pc-view-\" + d.get('viewId') + \" \" + \"myPath\"}\r\n        style={pathStyle} key={'p-' + d.get('viewId') + '-key'}\r\n        refid={d.get('refId')}\r\n        id={d.get('viewId')}\r\n        onMouseEnter={this.state.isBrushing || this.state.isSampling ? null : this.handleMouseEnter}\r\n        onMouseLeave={this.state.isBrushing || this.state.isSampling ? null : this.handleMouseLeave}\r\n        onClick={this.state.isBrushing || this.state.isBrushing ? null : this.selectPath}\r\n        onDoubleClick={this.handleDoubleClick}\r\n      ></path>;\r\n    });\r\n\r\n    const axes = this.state.dimensions.map((d, i) => {\r\n      return <g className={'myAxis'} id={d + 'on' + this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1]} dim={d} key={Math.random()}></g>;\r\n    });\r\n\r\n\r\n    const clickAxes = this.state.dimensions.map((d, i) => {\r\n      return <g className={'myClickAxis'} id={d + 'onClick' + this.props.collection.get('collectionName') + /\\(([^)]+)\\)/.exec(this.props.collection.get('collectionNameView'))[1]} key={d + '-key'}></g>;\r\n    });\r\n\r\n    const points = this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId')) &&\r\n      alt.get('isSelected') === true).map((d) => {\r\n        return <g className={'myPoint'} id={d.get('viewId')} key={'pt-' + d.get('viewId') + '-key'}></g>;\r\n      });\r\n\r\n    const sketchPoints = this.state.dimensions.map((d, i) => {\r\n      return <g className={'mySketchPoint'} key={'sp-' + d + '-key'}></g>;\r\n    });\r\n\r\n    const sketchPaths = <path className={'mySketchPath'} style={pathStyle}></path>;\r\n\r\n    const brushTextN = <text className={\"myBrushText\"} id={\"myBrushTextN\"}></text>;\r\n    const brushTextS = <text className={\"myBrushText\"} id={\"myBrushTextS\"}></text>;\r\n\r\n    // generating inputBoxes as number of active brushes\r\n    const collectionName = this.props.collection.get('collectionName');\r\n\r\n    const inputBoxes = this.brushes.filter((b) => (b.extent[0] + b.extent[1]) !== 0 && !this.state.outputParams.includes(b.dimension)).map((d, i) => {\r\n      return <input className={\"inputBox\"} type=\"text\" name={'inputBox-' + collectionName + \"-\" + d.dimension} id={d.id + '_input'} key={'ibox-' + d.id + '-key'} />;\r\n    });\r\n\r\n\r\n    const customStyles = {\r\n      container: (base, state) => {\r\n        return ({\r\n          ...base,\r\n          zIndex: state.isFocused ? '998' : '1',\r\n        });\r\n      },\r\n      dropdownIndicator: (base, state) => {\r\n        return ({\r\n          ...base,\r\n          color: 'black',\r\n        })\r\n      },\r\n      control: (base, state) => {\r\n        return ({\r\n          ...base,\r\n          backgroundColor: \"#fff\",\r\n          borderWidth: \"2px\",\r\n          borderColor: \"#000\"\r\n        })\r\n      }\r\n    };\r\n\r\n\r\n    return <div\r\n      onKeyDown={(e) => this.handleKeyEvents(e, \"down\")}\r\n      onKeyUp={(e) => this.handleKeyEvents(e, \"up\")}\r\n      tabIndex=\"0\">\r\n      <svg width={width} height={height} ref={(e) => this.svgEl = e}>\r\n        <g id='drawArea' width={width} height={height}>\r\n          {clickAxes}\r\n          {axes}\r\n          {paths}\r\n          {this.state.isAltering || this.state.isCloning || this.state.isLiveEditing ? points : null}\r\n          {this.state.isSketching ? sketchPaths : null}\r\n          {this.state.isSketching ? sketchPoints : null}\r\n          {this.state.isBrushing || this.state.isSampling ? brushTextN : null}\r\n          {this.state.isBrushing || this.state.isSampling ? brushTextS : null}\r\n        </g>\r\n      </svg>\r\n      {this.state.isSampling ? inputBoxes : null}\r\n      {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage} /> : null}\r\n      <ParallelMenu\r\n        isBrushing={this.state.isBrushing}\r\n        isSketching={this.state.isSketching}\r\n        isAltering={this.state.isAltering}\r\n        isSampling={this.state.isSampling}\r\n        isLiveEditing={this.state.isLiveEditing}\r\n        isCloning={this.state.isCloning}\r\n        isToggling={this.state.isToggling}\r\n        isCPing={this.state.isCPing}\r\n        isPSing={this.state.isPSing}\r\n        isSAing={this.state.isSAing}\r\n        isSCPing={this.state.isSCPing}\r\n        handleBrushAxisClick={this.handleBrushAxisClick}\r\n        handleSampleAxisClick={this.handleSampleAxisClick}\r\n        handleParameterSpectraClick={this.handleParameterSpectraClick}\r\n        handleSpectralCartesianProductClick={this.handleSpectralCartesianProductClick}\r\n        toggleAlterMode={this.toggleAlterMode}\r\n        handleSensitivityAnalysisClick={this.handleSensitivityAnalysisClick}\r\n        toggleLiveEditMode={this.toggleLiveEditMode}\r\n        handleCloneEditAlternativeClick={this.handleCloneEditAlternativeClick}\r\n        handleSketchAlternativeClick={this.handleSketchAlternativeClick}\r\n        handleCartesianProductClick={this.handleCartesianProductClick}\r\n        selectParameter={this.selectParameter}\r\n        lockAspectRatio={this.lockRatio.bind(this)}\r\n        onParameterSpectraSelect={this.onParameterSpectraSelect}\r\n        onParameterSpectraDeltaChange={this.onParameterSpectraDeltaChange}\r\n        onSensitivityAnalysisDeltaChange={this.onSensitivityAnalysisDeltaChange}\r\n        samplingCheckboxChanged={this.samplingCheckboxChanged}\r\n        createOnlyInTheRange={this.createOnlyInTheRange}\r\n      />\r\n      {this.state.isToggling ?\r\n        <Select\r\n          styles={customStyles}\r\n          defaultValue={this.defaultOptions}\r\n          isMulti\r\n          isClearable={false}\r\n          options={this.options}\r\n          onChange={this.toggleParameter}\r\n          closeMenuOnSelect={false}\r\n        /> : null}\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Parallel;\r\n","import appConstants from '../constants/appConstants';\r\n\r\n/**\r\n * sends the success message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const successMessage = (id, message) => ({\r\n  type: appConstants.get('HANDLE_SUCCESS'),\r\n  payload: {\r\n    id,\r\n    message,\r\n  },\r\n});\r\n\r\n/**\r\n * sends the warning message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const warningMessage = (id, message) => ({\r\n  type: appConstants.get('HANDLE_WARNING'),\r\n  payload: {\r\n    id,\r\n    message,\r\n  },\r\n});\r\n\r\n/**\r\n * sends the error message to redux store\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const errorMessage = (id, message) => {\r\n  return ({\r\n    type: appConstants.get('HANDLE_ERROR'),\r\n    payload: {\r\n      id,\r\n      message,\r\n    }\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * toggles message history pane view\r\n * @param {object} payload\r\n * @returns {object} : action object\r\n */\r\nexport const toggleHistory = (payload) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_HISTORY'),\r\n    payload,\r\n  });\r\n};\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace parallelActions\r\n */\r\n\r\nimport {toast} from 'react-toastify';\r\nimport {urls} from '../constants/urls';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\n  \r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function newCartesianProduct\r\n * @description initiates a new cartesian product process on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs \r\n * @param {array} selectedDimensions\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newCartesianProduct = (alternativeIDs, selectedDimensions, destinations) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('cartesian_product'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Cartesian Product has started'), 'Cartesian Product has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Cartesian Product has not started'), 'Cartesian Product has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newParameterSpectra\r\n * @description initiates a new ParameterSpectra process on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs \r\n * @param {array} selectedDimensions\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newParameterSpectra = (alternativeIDs, selectedDimensions, paramaterSpectraAltNum, paramaterSpectraDelta, destinations) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('parameter_spectra'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      psnum : paramaterSpectraAltNum,\r\n      psdelta: paramaterSpectraDelta,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Parameter Spectra has started'), 'Parameter Spectra has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Parameter Spectra has not started'), 'Parameter Spectra has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSampling\r\n * @description initiates a new sampling process on the server\r\n * @memberof parallelActions\r\n * @param {array} altIds - an array of alternative viewIDs \r\n * @param {array} brushes - an array of brush objects\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store \r\n */\r\nexport const newSampling = (altIds, brushes,destinations,createInRange) => (dispatch, getState) => {\r\n  \r\n  return fetch(urls.get('sampling'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      altIds : altIds,\r\n      brushes : brushes,\r\n      destinations : destinations,\r\n      createInRange : createInRange\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Sampling has started'), 'Sampling has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Sampling has not started'), 'Sampling has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSpectralCartesianProduct\r\n * @description initiates a new specrtralCartesianProduct on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs - an array of alternative viewIDs\r\n * @param {array} selectedDimensions - an array of selected dimensions\r\n * @param {string} collectionID - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const newSpectralCartesianProduct = (alternativeIDs, selectedDimensions, collectionID,destinations) => (dispatch) => {\r\n  \r\n  return fetch(urls.get('spectral_cartesian_product'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      keySets : selectedDimensions,\r\n      collection_id : collectionID,\r\n      destinations : destinations\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Spectral Cartesian Product has started'), 'Spectral Cartesian Product has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Spectral Cartesian Product has not started'), 'Spectral Cartesian Product has not started ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function newSensitivityAnalysis\r\n * @description initiates a new sensitivity analysis on the server\r\n * @memberof parallelActions\r\n * @param {array} alternativeIDs - an array of alternative viewIDs\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store \r\n */\r\nexport const newSensitivityAnalysis = (alternativeIDs, sensitivityAnalysisDelta, destinations) => (dispatch) => {\r\n  \r\n  return fetch(urls.get('sensitivity_analysis'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      alt_ids : alternativeIDs,\r\n      destinations : destinations,\r\n      sadelta: sensitivityAnalysisDelta\r\n    })\r\n  })\r\n  .then((data) => {\r\n    dispatch(successMessage(toast.success('Sensitivity Analysis has started'), 'Sensitivity Analysis has started ' + time));\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Sensitivity Analysis has not started'), 'Sensitivity Analysis has not started ' + time));\r\n  });\r\n};","import appConstants from '../constants/appConstants';\r\n\r\n/**\r\n * ***IMPORTANT***\r\n * The functions here are 'action creators'. Action creators\r\n * dispatch actions to trigger reducers, which is the only way\r\n * to update the redux store.\r\n */\r\n\r\n/**\r\n * dispatches an action that alternatives are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const alternativesFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_ALTERNATIVES'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that collections are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const collectionsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_COLLECTIONS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that layouts are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const layoutFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that projects are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const projectFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_PROJECT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that user is not fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const userFetchFailed = (payload) => ({\r\n  type: appConstants.get('NOT_FETCH_USER'),\r\n  payload,\r\n});\r\n\r\n\r\nexport const fetchingProject = () => ({\r\n  type:  appConstants.get('FETCHING_PROJECT'),\r\n})\r\n\r\n/**\r\n * dispatches an action that selectes a project\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const projectLoaded = (payload) => ({\r\n  type: appConstants.get('SELECT_PROJECT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that keySets are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const keySetsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_KEY_SETS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * dispatches an action that valueBands are fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const valueBandsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_VALUE_BANDS'),\r\n  payload,\r\n});\r\n\r\nexport const settingsFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_SETTINGS'),\r\n  payload,\r\n})\r\n\r\n/**\r\n * dispatches to set the value bands\r\n * @param {string} dim\r\n * @param {number} end\r\n * @param {number} val\r\n * @return {object} : action object\r\n */\r\nexport const setValueBands = (dim, end, val) => ({\r\n  type: appConstants.get('SET_VALUE_BANDS'),\r\n  payload: {\r\n    dim,\r\n    end,\r\n    val,\r\n  }\r\n});\r\n\r\n/**\r\n * dispatches an action to add alternatives\r\n * appends to the existing state\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const addAlternative = (payload) => ({\r\n  type: appConstants.get('ADD_NEW_ALTERNATIVES'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * adds an alternative to a collection\r\n * @param {string} collectionId \r\n * @param {string} alternativeId \r\n * @param {array} collectionInputs\r\n * @param {array} collectionOutputs\r\n * @param {array} dimOrder\r\n * @return {object} : action object\r\n */\r\nexport const addAlternativeToCollection = (collectionId, alternativeId, collectionInputs, collectionOutputs, dimOrder) => {\r\n  \r\n  return ({\r\n    type: appConstants.get('ADD_ALTERNATIVE_TO_COLLECTION'),\r\n    payload: {\r\n      collectionId, \r\n      alternativeId,\r\n      collectionInputs,\r\n      collectionOutputs,\r\n      dimOrder\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * updates an alternative in the store\r\n * with data coming from server\r\n * @param {string} viewId\r\n * @param {object} alternative\r\n * @return {object} : action object\r\n */\r\nexport const updateAlternative = (viewId, alternative) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_ALTERNATIVE'),\r\n    payload: {\r\n      viewId,\r\n      alternative,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * dispatches an action to update\r\n * maximum number of columns of gridLayout\r\n * this is invoked whenever a collection is dragged to the\r\n * current edge of gridLayout\r\n * @param {object} layout\r\n * @return {object} : action object\r\n */\r\nexport const updateMaxColumns = (layout) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_MAX_COLUMNS'),\r\n    width: Math.max(...layout.map((item) => item.x + item.w)) + 9,\r\n    layout,\r\n  });\r\n}\r\n\r\n/**\r\n * dispatches an action that creates a new collection\r\n * appends to existing list of collections\r\n * @param {array} altIds\r\n * @param {string} collectionName\r\n * @param {string} refId\r\n * @param {array} tags\r\n * @param {string} viewId\r\n * @param {boolean} isSelected\r\n * @param {boolean} isSinked\r\n * @param {number} viewType\r\n * @param {array} dimOrder\r\n * @param {array} inputs\r\n * @param {array} outputs\r\n * @param {array} destinations\r\n * @param {number} currentMode\r\n */\r\nexport const createCollection = (altIds, collectionName, refId,\r\n  tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView, sortParams, layoutsForAlts) => {\r\n  return ({\r\n    type: appConstants.get('CREATE_COLLECTION'),\r\n    payload: {\r\n      'altsid': altIds,\r\n      'collectionName': collectionName,\r\n      'refId': refId,\r\n      'tags': tags,\r\n      'viewId': viewId,\r\n      'isSelected': isSelected,\r\n      'isSinked': isSinked,\r\n      'viewType': viewType,\r\n      'dimOrder': dimOrder,\r\n      'sortParams': sortParams, \r\n      'layoutsForAlts': layoutsForAlts,\r\n      'inputs':  inputs,\r\n      'outputs': outputs,\r\n      'destinations': destinations,\r\n      'currentMode': currentMode,\r\n      'isEditingName': isEditingName,\r\n      'collectionNameView': collectionNameView,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dispatches an action to delete a collection\r\n * removes from the existing state\r\n * @param {string} collectionId\r\n * @return {object} : action object\r\n */\r\nexport const deleteCollection = (collectionId) => ({\r\n  type: appConstants.get('DELETE_COLLECTION'),\r\n  payload: collectionId,\r\n});\r\n\r\n/**\r\n * selects a collection\r\n * appends to the existing state\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const selectCollection = (viewId) =>({\r\n  type: appConstants.get('SELECT_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n  },\r\n});\r\n\r\n/**\r\n * deselect a collection\r\n * removes from the existing state\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const deselectCollection = (viewId) => ({\r\n  type: appConstants.get('DESELECT_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n  },\r\n});\r\n\r\n/**\r\n * deselect all collections\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const deselectAllCollections = (payload) => ({\r\n  type: appConstants.get('DESELECT_ALL_COLLECTIONS'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * clips a collection i.e. removes it from grid layout\r\n * it saves the collection's id, its alterntives and layout before doing that\r\n * @param {string} viewId\r\n * @param {string} refId\r\n * @param {array} altIDs\r\n * @param {array} layout\r\n * @return {object} : action object\r\n */\r\nexport const clipCollection = (viewId, refId, altIDs = [], layout = []) => ({\r\n  type: appConstants.get('CLIP_COLLECTION'),\r\n  payload: {\r\n    'viewId': viewId,\r\n    'refId': refId,\r\n    'altsid': altIDs,\r\n    'layout': layout,\r\n  },\r\n});\r\n\r\n/**\r\n * selects an alternative\r\n * remembers the collection it was selected from\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const selectAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('SELECT_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * hovers an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const hoverAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('HOVER_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dehovers all alternative\r\n * @return {object} : action object\r\n */\r\nexport const dehoverAllAlternative = () => {\r\n  return ({\r\n    type: appConstants.get('DEHOVER_ALL_ALTERNATIVES'),\r\n  });\r\n};\r\n\r\n/**\r\n * deselects an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const deselectAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('DESELECT_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * dehovers an alternative\r\n * @param {string} viewId\r\n * @return {object} : action object\r\n */\r\nexport const dehoverAlternative = (viewId) => {\r\n  return ({\r\n    type: appConstants.get('DEHOVER_ALTERNATIVE'),\r\n    payload: {\r\n      'viewId': viewId,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * deselects all alternatives\r\n * @return {object} : action object\r\n */\r\nexport const deselectAllAlternatives = () => ({\r\n  type: appConstants.get('DESELECT_ALL_ALTERNATIVES'),\r\n});\r\n\r\n/**\r\n * clips an alternative with given ID\r\n * @param {string} viewId\r\n * @param {string} refId\r\n * @return {object} : action object\r\n */\r\nexport const clipAlternatives = (viewId, refId) => ({\r\n  type: appConstants.get('CLIP_ALTERNATIVE'),\r\n  payload: {\r\n    'viewId': viewId,\r\n    'refId': refId,\r\n  },\r\n});\r\n\r\n/**\r\n * adds a layout object to grid layout\r\n * this is usually done for a new collection\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const addLayoutObject = (payload) => ({\r\n  type: appConstants.get('INSERT_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n\r\n/**\r\n * saves the layout params for a given grid layout\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const saveLayoutObject = (payload) => ({\r\n  type: appConstants.get('SAVE_LAYOUT'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * cleans up the clipboard for alternatives\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const clearAltsClipboard = (payload) => ({\r\n  type: appConstants.get('CLEAR_ALTS_CLIPBOARD'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * cleans up the clipboard for collections\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const clearColsClipboard = (payload) => ({\r\n  type: appConstants.get('CLEAR_COLS_CLIPBOARD'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * updates the store with the edited name for the collection\r\n * with given ID\r\n * @param {string} collectionId\r\n * @param {string} collectionName\r\n * @return {object} : action object\r\n */\r\nexport const editNameForCollection = (collectionId, collectionName) => ({\r\n  type: appConstants.get('CHANGE_COLLECTION_NAME'),\r\n  payload: {collectionId, collectionName},\r\n});\r\n\r\n/**\r\n * shows the header menu at the given X Y coordinates\r\n * @param {number} headerX\r\n * @param {number} headerY\r\n * @return {object} : action object\r\n */\r\nexport const showHeader = (headerX, headerY) => {\r\n  return ({\r\n    type: appConstants.get('SHOW_HEADER'),\r\n    headerX,\r\n    headerY,\r\n  });\r\n};\r\n\r\n/**\r\n * hides the header menu\r\n * @return {object} : action object\r\n */\r\nexport const hideHeader = () => {\r\n  return ({\r\n    type: appConstants.get('HIDE_HEADER'),\r\n  });\r\n};\r\n\r\n/**\r\n * shows the sink menu at the given X Y coordinates\r\n * @param {number} listX\r\n * @param {number} listY\r\n * @return {object} : action object\r\n */\r\nexport const showSinkList = (listX, listY) => {\r\n  return ({\r\n    type: appConstants.get('SHOW_SINK_LIST'),\r\n    listX,\r\n    listY,\r\n  });\r\n};\r\n\r\n/**\r\n * hides the sink menu\r\n * @return {object} : action object\r\n */\r\nexport const hideSinkList = () => {\r\n  return ({\r\n    type: appConstants.get('HIDE_SINK_LIST'),\r\n  });\r\n};\r\n\r\n/**\r\n * 'inSink' is a boolean property for collections to determine\r\n * whether to render them or not; this toggles its value\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const toggleSink = (payload) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_SINK'),\r\n    payload,\r\n  });\r\n};\r\n\r\n/**\r\n * change the view mode (default, parallel, scatter)\r\n * @param {string} collectionId\r\n * @param {number} viewType\r\n * @return {object} : action object\r\n */\r\nexport const toggleViewMode = (collectionId, viewType) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_VIEW_MODE'),\r\n    payload: {\r\n      collectionId,\r\n      viewType,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * change the view mode (folder, parallel, list)\r\n * @param {string} alternativeID\r\n * @return {object} : action object\r\n */\r\nexport const toggleAltView = (alternativeID) => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_ALT_VIEW'),\r\n    payload: alternativeID,\r\n  });\r\n};\r\n\r\n/**\r\n * modifies an alternative's parameter\r\n * @param {string} alternativeID\r\n * @param {string} parameter\r\n * @param {object} newValue\r\n * @return {object} : action object\r\n */\r\nexport const alterAlternative = (alternativeID, parameter, newValue) => {\r\n  return ({\r\n    type: appConstants.get('ALTER_ALTERNATIVE'),\r\n    payload: {\r\n      alternativeID,\r\n      parameter,\r\n      newValue,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * adds a field to a data object\r\n * @param {object} alternative\r\n * @param {string} field\r\n * @return {object} : action object\r\n */\r\nexport const addDataField = (alternative, field) => {\r\n  return ({\r\n    type: appConstants.get('ADD_DATA_FIELD'),\r\n    payload: {\r\n      alternative: alternative,\r\n      field: field,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n * removes a field from a data object\r\n * @param {object} alternative\r\n * @param {string} field\r\n * @return {object} : action object\r\n */\r\nexport const removeDataField = (alternative, field) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_DATA_FIELD'),\r\n    payload: {\r\n      alternative: alternative,\r\n      field: field,\r\n    },\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @param {string} alternativeId: id of alternative\r\n * @return {object} : action object\r\n */\r\nexport const orderAlternatives = (alternativeId) => {\r\n  return ({\r\n    type: appConstants.get('ORDER_ALTERNATIVES'),\r\n    payload: alternativeId,\r\n  });\r\n};\r\n\r\n/**\r\n * @param {string} viewId: id of collection\r\n * @param {array} dimOrder: current dimensionsions and their order\r\n * @return {object} : action object\r\n */\r\nexport const orderCollectionDimensions = (viewId, dimOrder) => {\r\n  return ({\r\n    type: appConstants.get('ORDER_COLLECTION_DIMENSIONS'),\r\n    payload: {\r\n      viewId,\r\n      dimOrder,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @param {string} viewId: id of collection\r\n * @param {boolean} isLoading: status of collection\r\n * @return {object} : action object\r\n */\r\nexport const setLoadingState = (viewId, isLoading) => {\r\n  return ({\r\n    type: appConstants.get('SET_LOADING_STATE'),\r\n    payload: {\r\n      viewId,\r\n      isLoading,\r\n    },\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * @param {object} payload: array of alternative ids\r\n * @return {object} : action object\r\n */\r\nexport const removeAlternatives = (payload) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_ALTERNATIVE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setAlternativeSize = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_ALTERNATIVE_SIZE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setCompactionType = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_COMPACTION_TYPE'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const gatherAllCollections = () => {\r\n  return ({\r\n    type: appConstants.get('GATHER_ALL_COLLECTIONS'),\r\n  });\r\n};\r\n\r\nexport const toggleSettings = () => {\r\n  return ({\r\n    type: appConstants.get('TOGGLE_SETTINGS'),\r\n  });\r\n};\r\n\r\n/**\r\n * shows and hides search dialog\r\n */\r\nexport const toggleSearch = () => {\r\n  return ({\r\n   type: appConstants.get('TOGGLE_SEARCH'),\r\n  })\r\n}\r\n/**\r\n *  show search results and hides search screen\r\n */\r\nexport const searchedCollectionSuccess = () => ({\r\n  type: appConstants.get('SEARCHED_COLLECTION'),\r\n});\r\n\r\n/**\r\n * @param {Array} strings\r\n * @description shows validation message with unmatch resuslts \r\n */\r\nexport const searchedCollectionFailed = (namesMissMatch) => {\r\n  return ({\r\n    type: appConstants.get('SEARCH_COLLECTION_FALID'),\r\n    payload: namesMissMatch\r\n  })\r\n}\r\n\r\n/**\r\n * removes validation\r\n */\r\nexport const emptyMissMatchArray = () => {\r\n  return({\r\n    type: appConstants.get('EMPTY_MISS_MATCH_NAME_ARRAY_SEARCH'),\r\n  });\r\n}\r\n\r\nexport const setCollisionPrevention = (payload) => {\r\n  return ({\r\n    type: appConstants.get('SET_COLLISION_PREVENTION'),\r\n    payload: payload,\r\n  });\r\n};\r\n\r\nexport const setCollectionDestination = (collection, destinations) => {\r\n  return ({\r\n    type: appConstants.get('SET_COLLECTION_DESTINATION'),\r\n    payload: {\r\n      collection,\r\n      destinations,\r\n    }\r\n  })\r\n}\r\n\r\nexport const setCollectionMode = (collection, mode) => {\r\n  return ({\r\n    type: appConstants.get(\"SET_COLLECTION_MODE\"),\r\n    payload: {\r\n      collection,\r\n      mode,\r\n    }\r\n  });\r\n}\r\n\r\nexport const updateCollectionTags = (collectionId, tags) => {\r\n  return ({\r\n    type: appConstants.get('UPDATE_COLLECTION_TAGS'),\r\n    payload: {\r\n      collectionId,\r\n      tags\r\n    }\r\n  });\r\n}\r\n\r\nexport const addQuery = (queryId, fromCollection, queryString, selections) => {\r\n  \r\n  return ({\r\n    type: appConstants.get('ADD_QUERY'),\r\n    payload: {\r\n      queryId,\r\n      fromCollection, \r\n      queryString, \r\n      selections,\r\n    }\r\n  });\r\n}\r\n\r\nexport const removeQuery = (queryId) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_QUERY'),\r\n    payload: {\r\n      queryId,\r\n    }\r\n  });\r\n}\r\n\r\nexport const clearAllQueries = () => {\r\n  return ({\r\n    type: appConstants.get('CLEAR_ALL_QUERIES'),\r\n  });\r\n}\r\n\r\nexport const addBrush = (brush, colId) => {\r\n  return ({\r\n    type: appConstants.get('ADD_BRUSH'),\r\n    payload: {\r\n      ...brush,\r\n      colId\r\n    }\r\n  });\r\n}\r\n\r\nexport const removeBrush = (brush, colId) => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_BRUSH'),\r\n    payload: {\r\n      queryId : brush\r\n    }\r\n  });\r\n}\r\n\r\nexport const clearAllBrushes = () => {\r\n  return ({\r\n    type: appConstants.get('CLEAR_ALL_BRUSHES'),\r\n  });\r\n}\r\n\r\nexport const updateLayoutForCollection = (layoutId) => {\r\n  return ({\r\n    type: appConstants.get(\"UPDATE_LAYOUTS\"),\r\n    payload: layoutId,\r\n  })\r\n}\r\n\r\n\r\nexport const isEditingCollectionsName = (refId) => {\r\n   return ({\r\n     type: appConstants.get(\"HANDLE_EDIT_NAME_START\"),\r\n     payload: refId,\r\n   })\r\n}\r\n\r\nexport const removeFocus = () => {\r\n  return ({\r\n    type: appConstants.get('REMOVE_FOCUS')\r\n  })\r\n}\r\n\r\nexport const editCollectionName = (name) => {\r\n  return ({\r\n    type: appConstants.get(\"EDIT_COLLECTION_NAME\"),\r\n    payload: {\r\n      name: name,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const isCreatingProject = () => {\r\n  return ({\r\n    type: appConstants.get(\"CREATING_PROJECT\"),\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * dispatches an action that user is fetched\r\n * replaces the reducer state with the fetched items\r\n * @param {object} payload\r\n * @return {object} : action object\r\n */\r\nexport const userFetch = (payload) => ({\r\n  type: appConstants.get('FETCH_USER'),\r\n  payload,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: appConstants.get(\"LOGOUT_USER\"),\r\n})\r\n\r\nexport const updateDeletedProject = (projectId) => ({\r\n  type: appConstants.get(\"DELETE_PROJECT\"),\r\n  payload: projectId\r\n})\r\n\r\nexport const openEditProject = (project) => ({\r\n  type: appConstants.get(\"PROJECT_EDIT_BOX\"),\r\n  payload: project\r\n})\r\n\r\n\r\nexport const updateProjectDetails = (editElements) => ({\r\n  type: appConstants.get(\"UPDATE_PROJECT\"),\r\n  payload: editElements\r\n})\r\n\r\n\r\nexport const showProjectMenu = (xPos, yPos, project) => {\r\n  return ({\r\n    type: appConstants.get(\"SHOW_PROJECT_CONTEXT_MENU\"),\r\n    payload: {\r\n      xPos: xPos,\r\n      yPos: yPos, \r\n      project: project\r\n    }\r\n  })\r\n}\r\n\r\nexport const shouldCloseProjectContextMenu = () => ({\r\n  type: appConstants.get(\"HIDE_PROJECT_CONTEXT_MENU\")\r\n})\r\n\r\nexport const resetCollectionState = () => ({\r\n  type: appConstants.get(\"RESET_STATE_ON_BACK_ARROW\")\r\n})\r\n\r\n\r\n\r\nexport const edittingProject = () => ({\r\n  type: appConstants.get(\"EDITTING\"),\r\n})\r\n\r\nexport const showDstarMenu = () => ({\r\n  type: appConstants.get(\"UPDATE_SHOW_DSTAR_MENU\") \r\n})\r\n\r\nexport const shouldShowCollectionList = () => ({\r\n  type: appConstants.get(\"UPDATE_SHOW_COLLECTION_MENU\"),\r\n})\r\n\r\n\r\n/**\r\n * sets sort params for collection\r\n * @param {String} collection \r\n * @param {array} sortParams \r\n * @returns \r\n */\r\nexport const setSortParams = (collection, sortParams) => {\r\n  return({\r\n    type: appConstants.get('SET_SORT_PARAMS'),\r\n    payload: {\r\n      collection,\r\n      sortParams,\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n *Set layouts for collection \r\n * @param {String} collection \r\n * @param {Array} layouts \r\n * @returns \r\n */\r\nexport const updateAlternativeLayoutForCollection = (collection,layouts) => {\r\n  return({\r\n    type: appConstants.get(\"GET_COLLECTION_ALTERNATIVES_LAYOUT\"),\r\n    payload: {\r\n      collection: collection,\r\n      layouts: layouts\r\n    },\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n","/**\r\n * Action dispatchers for operations on alternative objects\r\n * @namespace alternativeActions\r\n */\r\n\r\nimport { urls } from '../constants/urls';\r\nimport {\r\n  findCollectionsFromID,\r\n  fetchCollectionsNotID,\r\n} from '../util/collections';\r\nimport {\r\n  fetchAlternativesNotID,\r\n  findAlternativesFromID,\r\n  findAlternativeRelativesFromID,\r\n} from '../util/alternatives';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {\r\n  collectionsFetch,\r\n  selectAlternative,\r\n  orderAlternatives,\r\n  hoverAlternative,\r\n  dehoverAllAlternative,\r\n  addAlternative,\r\n  addAlternativeToCollection,\r\n  deselectAlternative,\r\n  setLoadingState,\r\n  removeAlternatives\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport { toast } from 'react-toastify';\r\nimport { batch } from 'react-redux'\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function createNewAlternative\r\n * @description creates a new alternative from a given set of base-alternatives and an object of sketch points\r\n * @memberof alternativeActions\r\n * @param {array} viewIds - a set of base-alternatives\r\n * @param {object} sketchData - an object of sketch points\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const createNewAlternative = (viewIds, sketchData) => (dispatch) => {\r\n  return fetch(urls.get('alternative_sketching'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      ids: viewIds.toJS(),\r\n      values: sketchData\r\n    })\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      //TODO: check if success!\r\n      dispatch(successMessage(toast.success('New alternative created'), 'new alternative created' + time));\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('New alternative creation failed'), 'new alternative creation failed' + time));\r\n    });\r\n};\r\n\r\n/**\r\n * @function restoreAlternative\r\n * @description initiates a *round-trip* for a given alternative\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewId of the alternative\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const restoreAlternative = (viewId) => () => {\r\n  return fetch(urls.get('alternativeRestore'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ viewId: viewId })\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n/**\r\n * @function cutAlternativesFromCollection\r\n * @description dispatches an action to cut an alternative from the collection\r\n * @memberof alternativeActions\r\n * @param {string} altID - viewId of the alternative\r\n * @returns {void}\r\n */\r\nexport const cutAlternativesFromCollection = (altID) => (dispatch, getState) => {\r\n  try {\r\n    dispatch(deselectAlternative(altID));\r\n    const collections = getState().collections.get('collections');\r\n    const alternatives = getState().alternatives.get('alternatives');\r\n    const alternative = findAlternativesFromID(alternatives, altID);\r\n    const otherCollections = fetchCollectionsNotID(collections, alternative.get(\"collectionViewId\"));\r\n    const collection = findCollectionsFromID(collections, alternative.get(\"collectionViewId\"));\r\n    const oldAlts = collection.get('altsid');\r\n    const filteredAlts = fetchAlternativesNotID(oldAlts, altID);\r\n    const updatedCollection = collection.set('altsid', filteredAlts);\r\n    const newCollections = otherCollections.push(updatedCollection);\r\n    dispatch(collectionsFetch(newCollections));\r\n  } catch (e) {\r\n    console.error(e.message);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @function removeAlternativesFromCollection\r\n * @description removes a list of alternatives from a collection\r\n * @memberof alternativeActions\r\n * @param {ImmutableList} alts - an immutable list of alternatives\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const removeAlternativesFromCollection = (alts) => (dispatch, getState) => {\r\n  if (alts.size > 0) {\r\n    const refIds = [];\r\n    const collectionRefId = [];\r\n\r\n    alts.map((alt) => {\r\n      refIds.push(alt.get('refId'));\r\n      collectionRefId.push(alt.get('collectionRefId'));\r\n    });\r\n\r\n    return fetch(urls.get('alternativesRemove'), {\r\n      method: 'delete',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ refIds: refIds, collectionRefId: collectionRefId }),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n        data.map((alt) => {\r\n          batch(() => {\r\n            dispatch(deselectAlternative(alt));\r\n            dispatch(removeAlternatives(alt));\r\n            dispatch(cutAlternativesFromCollection(alt));\r\n          })\r\n        });\r\n        dispatch(successMessage(toast.success('Alternative(s) removed'), 'alternative(s) removed ' + time));\r\n      }).catch((err) => {\r\n        console.log(err);\r\n        dispatch(errorMessage(toast.error('Alternative(s) not removed'), 'alternative(s) not removed ' + time));\r\n      });\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('please select an alternative'), 'please select an alternative' + time));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @function refAlternativesToCollection\r\n * @description refs alternative(s) to collection(s)\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to ref\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const refAlternativesToCollection = (alts, cols) => (dispatch, getState) => {\r\n  if (alts.length > 0 && cols.length > 0) {\r\n    const toastyVar = toast.info(\"Copying Alts To collection\", {\r\n      toastId: \"CopyAltsWithRef\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      progress: 0.8,\r\n      position: 'bottom-center',\r\n      rtl: true,\r\n    });\r\n    return fetch(urls.get('alternativeCopy'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        source: alts,\r\n        destination: cols,\r\n      })\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n\r\n        toast.update(toastyVar, { progress: 0.5 });\r\n\r\n        data.forEach((datum) => {\r\n\r\n          const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n          const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n          const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n          datum.alts.map((alternative) => {\r\n            dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)));\r\n          });\r\n\r\n          datum.alts.map((alt, index) => {\r\n            batch(() => {\r\n              // TODO: fix collection inputs/outputs/dimOrder\r\n              dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n              dispatch(deselectAlternative(alts[index]));\r\n              dispatch(hoverAlternativeSpecial(alt.viewId));\r\n            });\r\n          });\r\n        });\r\n\r\n        toast.update(toastyVar, { progress: 0, closeOnClick: true, autoClose: 1 });\r\n\r\n        dispatch(successMessage(toast.success('Alternative(s) copied'), 'alternative(s) copied ' + time));\r\n      }).catch((err) => {\r\n\r\n        toast.update(toastyVar, { progress: 0, closeOnClick: true, autoClose: 1 });\r\n\r\n        dispatch(errorMessage(toast.error('Alternative(s) not copied'), 'alternative(s) not copied ' + time));\r\n      })\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('Please select an alternative and a collection'), 'please select an alternative and a collection' + time));\r\n  }\r\n};\r\n\r\n\r\n\r\n/**\r\n * @function cloneAlternativesToCollection\r\n * @description clone alternative(s) to collection(s)\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to clone\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneAlternativesToCollection = (alts, cols, sourceProjectId) => (dispatch) => {\r\n\r\n  if (alts.length > 0 && cols.length > 0) {\r\n    const toastyVar = toast.info(\"Cloning alts to collection\", {\r\n      toastId: \"CloneAltsToCollection\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      progress: 0.8,\r\n      position: 'bottom-center',\r\n      rtl: true,\r\n    });\r\n\r\n    return fetch(urls.get('alternativeClone'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        source: alts,\r\n        destination: cols,\r\n        sourceProjectId: sourceProjectId\r\n      }),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n\r\n        toast.update(toastyVar, { progress: 0.5 });\r\n\r\n        data.forEach((datum) => {\r\n          const inputs = datum.alts[0]['params'];\r\n          const outputs = datum.alts[0]['outputs'];\r\n\r\n          const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n          datum.alts.map((alternative) => {\r\n            dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n          });\r\n\r\n          datum.alts.map((alt, index) => {\r\n            batch(() => {\r\n              // TODO: fix collection inputs/outputs/dimOrder\r\n              dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n              dispatch(deselectAlternative(alts[index]));\r\n              dispatch(hoverAlternativeSpecial(alt.viewId));\r\n            });\r\n          });\r\n        });\r\n        toast.update(toastyVar, {\r\n          progress: 0,\r\n          closeOnClick: true,\r\n          autoClose: 1,\r\n        })\r\n        dispatch(successMessage(toast.success('Alternative(s) cloned'), 'alternative(s) cloned ' + time));\r\n      }).catch((err) => {\r\n        console.log(err)\r\n        toast.update(toastyVar, {\r\n          progress: 0,\r\n          closeOnClick: true,\r\n          autoClose: 1,\r\n        })\r\n        dispatch(errorMessage(toast.success('Alternative(s) not cloned'), 'alternative(s) not cloned ' + time));\r\n      })\r\n  } else {\r\n    dispatch(warningMessage(toast.warning('Please select an alternative and a collection'), 'please select an alternative and a collection' + time));\r\n  }\r\n};\r\n\r\n/**\r\n * @function cloneEditAlternativesToCollection\r\n * @description clones alternative(s) to collection(s) and selects them to edit\r\n * @memberof alternativeActions\r\n * @param {array} alts - an array of alternative viewIDs to ref\r\n * @param {array} cols - an array of collection viewIDs as destination\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneEditAlternativesToCollection = (alts, cols) => (dispatch, getState) => {\r\n  return fetch(urls.get('alternativeCloneEdit'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      source: alts,\r\n      destination: cols,\r\n    }),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      data.forEach((datum) => {\r\n\r\n        const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n        const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n        const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n        datum.alts.map((alternative) => {\r\n          dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n        });\r\n        datum.alts.map((alt, index) => {\r\n          batch(() => {\r\n\r\n            // TODO: fix collection inputs/outputs/dimOrder\r\n            dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n            dispatch(deselectAlternative(alts[index]));\r\n            dispatch(selectAlternative(alt.viewId));\r\n          });\r\n        });\r\n      });\r\n      dispatch(successMessage(toast.success('Alternative cloned'), 'alternative cloned ' + time));\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.success('Alternative not cloned'), 'alternative not cloned ' + time));\r\n    })\r\n\r\n}\r\n\r\n/**\r\n * @function editAlternatives\r\n * @description edits alternatives\r\n * @memberof alternativeActions\r\n * @param {object} editedAlts - an object composed of alternative viewIDs and edited params\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const editAlternatives = (editedAlts) => (dispatch, getState) => {\r\n  Object.keys(editedAlts).map((key) => {\r\n    dispatch(setLoadingState(key, true));\r\n    findAlternativeRelativesFromID(getState().alternatives.get('alternatives'), key)\r\n      .map((alt) => {\r\n        dispatch(setLoadingState(alt.get('viewId'), true))\r\n      })\r\n  });\r\n\r\n  return fetch(urls.get('alternativeEdit'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(editedAlts),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n\r\n      if (data.success === true) {\r\n        dispatch(successMessage(toast.success('Alternative(s) edited'), 'alternative(s) edited ' + time));\r\n      } else {\r\n        dispatch(warningMessage(toast.success('Edit failed'), 'edit failed ' + time));\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.success('Alternative(s) not edited'), 'alternative(s) not edited ' + time));\r\n    })\r\n};\r\n\r\n/**\r\n * @function selectAlternatives\r\n * @description selects and orders the alternative with the given viewId\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @returns {void}\r\n */\r\nexport const selectAlternatives = (viewId) => (dispatch) => {\r\n  dispatch(selectAlternative(viewId));\r\n  dispatch(orderAlternatives(viewId));\r\n};\r\n\r\n/**\r\n * @function hoverAlternative\r\n * @description hovers and orders the alternative with the given viewId\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @returns {void}\r\n */\r\nexport const hoverAlternatives = (viewId) => (dispatch) => {\r\n  dispatch(dehoverAllAlternative());\r\n  dispatch(hoverAlternative(viewId));\r\n  dispatch(orderAlternatives(viewId));\r\n};\r\n\r\n/**\r\n * @function hoverAlternativeSpecial\r\n * @description hovers and orders the alternative with the given viewId (special: doesn't dehover the rest)\r\n * @memberof alternativeActions\r\n * @param {string} viewId - viewID of the alternative\r\n * @return {void}\r\n */\r\nexport const hoverAlternativeSpecial = (viewId) => (dispatch) => {\r\n  dispatch(hoverAlternative(viewId));\r\n  // dispatch(orderAlternatives(viewId));\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Parallel from '../components/parallel/Parallel';\r\nimport {\r\n  newCartesianProduct,\r\n  newParameterSpectra,\r\n  newSensitivityAnalysis,\r\n  newSpectralCartesianProduct,\r\n  newSampling,\r\n} from '../actions/parallelActions';\r\nimport {\r\n  alterAlternative,\r\n  addDataField,\r\n  removeDataField,\r\n  orderCollectionDimensions,\r\n  setValueBands,\r\n  addQuery,\r\n  removeQuery,\r\n  clearAllQueries,\r\n  addBrush,\r\n  removeBrush,\r\n  clearAllBrushes,\r\n} from '../actions/updateActions';\r\nimport {\r\n  cloneEditAlternativesToCollection,\r\n  createNewAlternative,\r\n  editAlternatives,\r\n} from '../actions/alternativeActions';\r\n\r\nclass ParallelContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Parallel key={'parallelView-' + this.props.collection.get('viewId')} {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  scales: state.scales,\r\n  queries: state.queries\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  alterAlternative: (alternativeID, parameter, newValue) => {\r\n    dispatch(alterAlternative(alternativeID, parameter, newValue));\r\n  },\r\n\r\n  editAlternatives: (editedAlternatives) => {\r\n    dispatch(editAlternatives(editedAlternatives));\r\n  },\r\n\r\n  cloneEditAlternatives: (alts = [], cols = []) => {\r\n    dispatch(cloneEditAlternativesToCollection(alts, cols))\r\n  },\r\n\r\n  createNewAlternative: (alternativeID, newId, sketchData) => {\r\n    dispatch(createNewAlternative(alternativeID, newId, sketchData));\r\n  },\r\n\r\n  newCartesianProduct: (alternativeIDs, keySets, destinations) => {\r\n    dispatch(newCartesianProduct(alternativeIDs, keySets, destinations));\r\n  },\r\n\r\n\r\n  newParameterSpectra: (alternativeIDs, keySets, paramaterSpectraAltNum, paramaterSpectraDelta, destinations) => {\r\n    dispatch(newParameterSpectra(alternativeIDs, keySets, paramaterSpectraAltNum, paramaterSpectraDelta, destinations));\r\n  },\r\n\r\n  newSensitivityAnalysis: (alternativeIDs, sensitivityAnalysisDelta, destinations) => {\r\n    dispatch(newSensitivityAnalysis(alternativeIDs, sensitivityAnalysisDelta, destinations));\r\n  },\r\n\r\n  newSpectralCartesianProduct: (alternativeIDs, keySets, collectionID, destinations) => {\r\n    dispatch(newSpectralCartesianProduct(alternativeIDs, keySets, collectionID, destinations));\r\n  },\r\n\r\n  newSampling: (altIds, brushes, destinations,createInRange) => {\r\n    dispatch(newSampling(altIds, brushes, destinations,createInRange));\r\n  },\r\n\r\n  addDataField: (alternative, field) => {\r\n    dispatch(addDataField(alternative, field));\r\n  },\r\n\r\n  removeDataField: (alternative, field) => {\r\n    dispatch(removeDataField(alternative, field));\r\n  },\r\n\r\n  orderCollectionDimensions: (viewId, dimOrder) => {\r\n    dispatch(orderCollectionDimensions(viewId, dimOrder));\r\n  },\r\n\r\n  setValueBands: (dim, end, val) => {\r\n    dispatch(setValueBands(dim, end, val))\r\n  },\r\n\r\n  addQuery: (queryId, fromCollection, queryString, selections) => {\r\n    dispatch(addQuery(queryId, fromCollection, queryString, selections))\r\n  },\r\n\r\n  removeQuery: (queryId) => {\r\n    dispatch(removeQuery(queryId))\r\n  },\r\n\r\n  clearAllQueries: () => {\r\n    dispatch(clearAllQueries())\r\n  },\r\n\r\n  addBrush: (brush, colId) => {\r\n    dispatch(addBrush(brush, colId))\r\n  },\r\n\r\n  removeBrush: (brushId, colId) => {\r\n    dispatch(removeBrush(brushId, colId))\r\n  },\r\n\r\n  clearAllBrushes: () => {\r\n    dispatch(clearAllBrushes())\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParallelContainer);","import React, {PureComponent} from 'react';\r\nimport styles from './listView.module.scss';\r\nimport MaterialTable, {MTableBodyRow} from 'material-table';\r\nimport Scene from '../scene/Scene';\r\nimport {\r\n  getAlternativeImageURL,\r\n  findAlternativesFromID,\r\n} from '../../util/alternatives';\r\nimport {\r\n  Md3DRotation,\r\n  MdInsertPhoto\r\n} from 'react-icons/md';\r\nimport debounce from 'lodash/debounce';\r\n\r\n/**\r\n * @class ListView\r\n * @extends React.PureComponent\r\n * @description presentational component for the list view\r\n */\r\nclass ListView extends PureComponent {\r\n\r\n  handleMouseEnter = (viewId, refId) => {\r\n    this.props.hoverAlternative(viewId, refId);\r\n  }\r\n\r\n  handleMouseLeave = (viewId, refId) => {\r\n    this.props.dehoverAlternative(viewId, refId);\r\n  }\r\n\r\n  handleRowClick = (e, selectedRow) => {\r\n      if (!this.props.altsInCollection.find(alt => alt.get('viewId') === selectedRow.viewId).get('isSelected')) {\r\n        this.props.selectAlternative(selectedRow.viewId);\r\n      } else {\r\n        this.props.deselectAlternative(selectedRow.viewId);\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={styles['list-container']}>\r\n        <MaterialTable\r\n          columns={this.props.columns}\r\n          data={this.props.data}\r\n          options={{\r\n            search: true,\r\n            sorting: true,\r\n            paging: false,\r\n            padding: 'dense',\r\n            showTitle: false,\r\n            maxBodyHeight: this.props.height,\r\n            headerStyle: {\r\n              position: 'sticky',\r\n              top: 0,\r\n            },\r\n            rowStyle: (rowData) => {\r\n              return {\r\n                backgroundColor:                    \r\n                // a ternary expression to select the background color                   \r\n                this.props.altsInCollection.filter((alternative) =>\r\n                  alternative.get('isSelected') && alternative.get('viewId') === rowData.viewId).size === 0 \r\n\r\n                  ? this.props.altsInCollection.filter((alternative) => this.props.selectedAlts.includes(alternative.get('refId')) \r\n                    && alternative.get('viewId') === rowData.viewId).size !== 0 \r\n\r\n                  ? styles.colorSelectedRelated : '#ffffff' : styles.colorSelected,\r\n              };\r\n            },\r\n          }}\r\n\r\n          components={{\r\n            Row: props => (\r\n              <MTableBodyRow\r\n                {...props}\r\n                id={props.data.viewId}\r\n                key={'tableList-' + props.data.viewId} \r\n                className={\"tableList tableList-ref-\" + props.data.refId + \" tableList-view-\" + props.data.viewId} \r\n                onMouseEnter={debounce(this.handleMouseEnter.bind(this, props.data.viewId, props.data.refId))}\r\n                onMouseLeave={debounce(this.handleMouseLeave.bind(this, props.data.viewId, props.data.refId))}\r\n              />\r\n            )\r\n          }}\r\n\r\n          onRowClick={this.handleRowClick.bind(this)}\r\n  \r\n          detailPanel={[\r\n            {\r\n              icon: () => <MdInsertPhoto/>,\r\n              tooltip: 'Show Image',\r\n              render: (rowData) => {\r\n                return (\r\n                  <div>\r\n                    <img src={getAlternativeImageURL(findAlternativesFromID(this.props.altsInCollection, rowData.viewId))}\r\n                      className={styles['alternative-image']}\r\n                      style={{\r\n                        height: 800,\r\n                        width: 800,\r\n                      }}\r\n                      alt={'image for ' + rowData.viewId}/>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              icon: () => <Md3DRotation/>,\r\n              tooltip: 'Show Model',\r\n              render: (rowData) => {\r\n                return (\r\n                  <div>\r\n                    <Scene\r\n                      customStyle={'position: sticky; left: 0;'}\r\n                      width={800} height={800}\r\n                      gltf={rowData.gltf}\r\n                      id={rowData.viewId}\r\n                    />\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ListView from '../components/listView/ListView';\r\n\r\nclass ListContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const columns = this.props.dimensions.toJS().map((dim) => {\r\n      return { title: dim, field: dim, headerStyle: { position: 'sticky', top: 0, fontWeight: (Object.keys(this.props.collection.get('outputs')).includes(dim)) ? 'bold' : 'normal' } };\r\n    });\r\n\r\n    const data = this.props.altsInCollection.map((alt) => {\r\n      return {\r\n        viewId: alt.get('viewId'),\r\n        gltf: alt.get('gltf'),\r\n        refId: alt.get('refId'),\r\n        collectionViewId: alt.get('collectionViewId'),\r\n        ...alt.get('parallelData').toJS()\r\n      };\r\n    }).toJS();\r\n\r\n    this.state = {\r\n      columns: columns,\r\n      data: data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ListView key={'listView-' + this.props.collection.get('viewId')} columns={this.state.columns} data={this.state.data} {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dimensions: state.scales.get('keySets'),\r\n})\r\n\r\nexport default connect(mapStateToProps)(ListContainer);","import React from 'react';\r\nimport styles from './infoBar.module.scss';\r\n\r\nconst InfoBar = props => {\r\n\r\n  const selected = props.altsInCollection.filter((alt) => alt.isSelected).length;\r\n\r\n  return (\r\n    <div className={styles[\"infobar\"]} ref={props.infoRef}>\r\n      <span>\r\n        <span className={styles[\"infopar-a\"]}>{props.altsInCollection.length}</span>\r\n        <span className={styles[\"infopar-s\"]}>{selected}</span>\r\n        <span className={styles[\"infopar-r\"]}></span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBar;","import React from 'react';\r\nimport styles from './tagBar.module.scss';\r\n\r\nconst TagBar = props => {\r\n    const tags = props.tagOptions.map((tag, i) => { \r\n        return <span className={styles[\"tagBar-span\"]} key={\"tagBar-key\" + i}>#{tag.label}</span>\r\n    });\r\n\r\n    return (\r\n        <div className={styles[\"tagBar\"]}>\r\n            {tags}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TagBar;","import React, { PureComponent } from 'react';\r\nimport classnames from 'classnames';\r\nimport {\r\n  MdVerticalAlignBottom,\r\n  MdDelete,\r\n  MdDeleteForever,\r\n  MdCheckCircle,\r\n  MdCancel,\r\n} from 'react-icons/md';\r\nimport {\r\n  IoMdMove,\r\n} from 'react-icons/io';\r\nimport { CgArrowUpO, CgArrowDownO } from \"react-icons/cg\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaHashtag } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons';\r\nimport AlternativeContainer from '../../../containers/AlternativeContainer';\r\nimport {\r\n  renderIf,\r\n  arrayEquals,\r\n} from '../../../util/util';\r\nimport {\r\n  getCollectionName,\r\n  getAlternativesInCollection,\r\n  calculateWidth\r\n} from '../../../util/collections';\r\nimport styles from './collection.module.scss';\r\nimport { getLayoutForCollection, reArrangeCollectionLayout } from '../../../util/layouts';\r\nimport ParallelContainer from '../../../containers/ParallelContainer';\r\nimport ListContainer from '../../../containers/ListContainer';\r\nimport InfoBar from '../../infoBar/InfoBar';\r\nimport TagBar from '../../tagBar/TagBar';\r\nimport Select, {components} from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport * as d3 from 'd3';\r\nimport { findAlternativesFromID } from '../../../util/alternatives';\r\nimport layoutConstants from '../../../constants/layout';\r\n\r\n\r\n/**\r\n * @constant\r\n * @type {array}\r\n * @default\r\n */\r\nconst options = [\r\n  { value: 1, label: 'folder view' },\r\n  { value: 2, label: 'parallel view' },\r\n  { value: 3, label: 'list view' },\r\n];\r\n\r\n/**\r\n * @class Collection\r\n * @extends React.PureComponent\r\n * @description presentational component of a single collection containing **Alternatives** component.\r\n */\r\n\r\n \r\n\r\nclass Collection extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props - component props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      isTagging: false,\r\n      isDragging: false,\r\n      collectionName: '',\r\n      shouldFocus: null,\r\n      sortingOptions: [],\r\n    }\r\n\r\n    this.infoRef = React.createRef();\r\n    this.destinationRef = React.createRef();\r\n    this.destinationOptions = [];\r\n    this.tagOptions = [];\r\n    \r\n\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n  * @description gets the width and height after the component mounts\r\n  */\r\n  componentDidMount = () => {\r\n    const obj = this.cmpEl.getBoundingClientRect();\r\n    this.setState({\r\n      width: obj.width,\r\n      height: obj.height,\r\n      collectionName: getCollectionName(this.props.collection),\r\n    });\r\n    this.loadSortParamsForCollection();\r\n  }\r\n\r\n  loadSortParamsForCollection = () => {\r\n    let collectionSortParamsArray = this.props.collection.get(\"outputs\").toJS().concat(this.props.collection.get(\"inputs\").toJS());\r\n    for(let i = 0; collectionSortParamsArray.length > i;   i++){\r\n      collectionSortParamsArray[i] =  { 'label': collectionSortParamsArray[i], value: collectionSortParamsArray[i], '__isNew__': false, \"direction\": 1 };\r\n    }\r\n      collectionSortParamsArray.unshift({ 'label': \"isSelected\", value: \"isSelected\", '__isNew__': false, \"direction\": 1 }, { 'label': \"isReferenced\", value: \"isReferenced\", '__isNew__': false, \"direction\": 1 })\r\n    this.setState({\r\n      sortingOptions: collectionSortParamsArray\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n  * @description gets the width and height after the component updates\r\n  */\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    const obj = this.cmpEl.getBoundingClientRect();\r\n    this.setState({ width: obj.width });\r\n    this.setState({ height: obj.height });\r\n\r\n    if (prevProps.collection.get(\"collectionName\") !== this.props.collection.get(\"collectionName\")) {\r\n      this.setState({\r\n        collectionName: this.props.collection.get(\"collectionName\"),\r\n      });\r\n    }\r\n\r\n    if (this.props.shouldRemoveFocus) {\r\n      this.setState({\r\n        shouldFocus: null,\r\n      })\r\n      this.props.removeFocus();\r\n    }\r\n\r\n    if (prevProps.collection.get(\"isEditingName\") !== this.props.collection.get(\"isEditingName\")) {\r\n      let element = document.getElementById(this.state.shouldFocus);\r\n\r\n      if (element !== null) {\r\n        element.select();\r\n      }\r\n    }\r\n\r\n    if (prevProps.collection.get(\"destinations\") !== this.props.collection.get(\"destinations\")) {\r\n      this.destinationRef.current.state.value = this.props.collection.get(\"destinations\").toJS();\r\n    }\r\n      \r\n    if(!(arrayEquals(prevProps.collection.get(\"outputs\").toJS(), this.props.collection.get(\"outputs\").toJS()) ) || !(arrayEquals(prevProps.collection.get(\"inputs\").toJS(), this.props.collection.get(\"inputs\").toJS()))){\r\n        let collectionSortParamsArray = this.props.collection.get(\"outputs\").toJS().concat(this.props.collection.get(\"inputs\").toJS());\r\n        for(let i = 0; collectionSortParamsArray.length > i;   i++){\r\n          collectionSortParamsArray[i] =  { 'label': collectionSortParamsArray[i], value: collectionSortParamsArray[i], '__isNew__': false, \"direction\": 1 };\r\n        }\r\n          collectionSortParamsArray.unshift({ 'label': \"isSelected\", value: \"isSelected\", '__isNew__': false, \"direction\": 1 }, { 'label': \"isReferenced\", value: \"isReferenced\", '__isNew__': false, \"direction\": 1 });\r\n        this.setState({\r\n          sortingOptions: collectionSortParamsArray\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @function loadTags\r\n   * @description loads the tags that are available to the collection\r\n   * @memberof Collection\r\n   * @returns {void}\r\n   */\r\n  loadTags = () => {\r\n    this.tagOptions = this.props.collection.get('tags').toJS().map(tag => {\r\n      return { 'label': tag, 'value': tag, '__isNew__': false }\r\n    });\r\n  }\r\n\r\n  toggleTagging = () => {\r\n    this.setState({ isTagging: !this.state.isTagging });\r\n  }\r\n\r\n  toggleEditViewForCollection = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.props.isEditingCollectionsName(this.props.collection.get('refId'));\r\n    this.setState({ shouldFocus: this.props.collection.get('viewId') });\r\n  }\r\n\r\n  handleCloseClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.deleteCollections(this.props.collection.get('viewId'));\r\n  };\r\n\r\n  handleEmptyClick = (e) => {\r\n    e.stopPropagation();\r\n    const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n      .filter((alternative) => alternative.get('isSelected') && alternative.get('collectionViewId') === this.props.collection.get('viewId'));\r\n    this.props.removeAlternativesFromCollection(selectedAlternatives);\r\n  }\r\n\r\n  /**\r\n   * minimize click\r\n   * @param {event} e\r\n   */\r\n  handleMinimizeClick = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.props.toggleViewMode(this.props.collection.get('viewId'), 1);\r\n\r\n    this.props.saveLayoutObject(getLayoutForCollection(\r\n      this.props.layouts,\r\n      this.props.collection.get('viewId'))\r\n    );\r\n\r\n    this.props.toggleSink(this.props.collection.get('viewId'));\r\n    this.props.deselectCollection(this.props.collection.get('viewId'));\r\n  }\r\n\r\n  /**\r\n   * @function handleSelect\r\n   * @description when clicked, appends a collection's ID to an array of selected collections\r\n   * @memberof Collection\r\n   */\r\n  handleSelect = () => {\r\n    if (!this.props.collection.get('isSelected')) {\r\n      this.props.selectCollection(this.props.collection.get('viewId'));\r\n    } else {\r\n      this.props.deselectCollection(this.props.collection.get('viewId'));\r\n    }\r\n  }\r\n\r\n  handleHovsClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId'))).map((d) => {\r\n\r\n        const hoveredRelatives = this.props.alternatives.get('alternatives')\r\n          .filter((alternative) => d.get('isHovered') || (alternative.get('isHovered') &&\r\n            alternative.get('refId') === d.get('refId') &&\r\n            !this.props.collection.get('altsid').contains(alternative.get('viewId'))));\r\n\r\n        if (hoveredRelatives.size !== 0) {\r\n          this.props.selectAlternative(d.get('viewId'));\r\n\r\n          d3.select(\".alt-view-\" + d.get('viewId'))\r\n            .style('border', '1.5px')\r\n            .style('border-style', 'solid')\r\n            .style('border-color', styles.colorSelected)\r\n            .style('border-radius', '7px')\r\n            .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleRefsClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    this.props.alternatives.get('alternatives').filter((alt) =>\r\n      this.props.collection.get('altsid').contains(alt.get('viewId'))).map((d) => {\r\n\r\n        const selectedRelatives = this.props.alternatives.get('alternatives')\r\n          .filter((alternative) => alternative.get('isSelected') &&\r\n            alternative.get('refId') === d.get('refId') &&\r\n            !this.props.collection.get('altsid').contains(alternative.get('viewId')));\r\n\r\n        if (selectedRelatives.size !== 0) {\r\n          this.props.selectAlternative(d.get('viewId'));\r\n\r\n          d3.select(\".alt-view-\" + d.get('viewId'))\r\n            .style('border', '1.5px')\r\n            .style('border-style', 'solid')\r\n            .style('border-color', styles.colorSelected)\r\n            .style('border-radius', '7px')\r\n            .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleUnselectClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    getAlternativesInCollection(this.props.collection, this.props.alternatives.get('alternatives'))\r\n      .map((alt) => {\r\n        this.props.deselectAlternative(alt.get('viewId'));\r\n\r\n        d3.selectAll(\".alt-ref-\" + alt.get('refId'))\r\n          .style('border', null)\r\n          .style('border-style', null)\r\n          .style('border-color', null)\r\n          .style('border-radius', null)\r\n          .style('-webkit-box-shadow', null);\r\n      });\r\n  }\r\n\r\n\r\n  handleBlur = (e) => {\r\n    if (e.key === 'Enter') {\r\n      let name = \"untitled\";\r\n      let copy = false;\r\n\r\n      if (e.target.value.includes('#') && '#' + this.props.collection.get('collectionName') !== e.target.value) {\r\n        copy = true;\r\n      }\r\n\r\n      name = e.target.value.replace(/#/g, \"\").replace(/ /g, \"-\")\r\n\r\n      if (this.props.collection.get(\"collectionName\") !== name && name.length > 0) {\r\n        const nameExists = this.props.nameExists(name, this.props.collection);\r\n\r\n        if (this.props.isMultipleInputs) {\r\n          if (!nameExists) {\r\n\r\n            let object = {\r\n              name: name,\r\n              collection: this.props.collection\r\n            }\r\n\r\n            this.props.updateMultipleNames(object);\r\n\r\n            this.setState({\r\n              shouldFocus: null,\r\n            });\r\n\r\n          } else {\r\n\r\n            this.props.isEditingCollectionsName(this.props.collection.get(\"refId\"))\r\n            this.setState({\r\n              shouldFocus: null,\r\n            })\r\n          }\r\n        } else {\r\n          if (!nameExists) {\r\n            try {\r\n              const collection = this.props.collection.toJS();\r\n              collection.collectionName = name + \"-\" + collection.collectionNameView\r\n              this.props.updateCollection(collection);\r\n\r\n            } catch (err) {\r\n              console.log(err)\r\n            } finally {\r\n              this.props.editNameForCollection(this.props.collection.get('viewId'), name);\r\n              this.setState({\r\n                shouldFocus: null,\r\n              });\r\n            }\r\n          } else {\r\n            this.props.isEditingCollectionsName(this.props.collection.get(\"refId\"))\r\n            this.setState({\r\n              shouldFocus: null,\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        this.props.nameHasTheSameValue(this.props.collection.get('refId'));\r\n        this.setState({\r\n          collectionName: this.props.collection.get(\"collectionName\"),\r\n          shouldFocus: null,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTaggingSelect = (newValue, actionMeta) => {\r\n    if (newValue) {\r\n      try {\r\n        const colToUpdate = this.props.collection.toJS();\r\n        colToUpdate.tags = newValue.map(v => v.value);\r\n        this.props.updateCollection(colToUpdate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.props.updateCollectionTags(this.props.collection.get('viewId'), newValue.map(v => v.value));\r\n      }\r\n    } else {\r\n      try {\r\n        const colToUpdate = this.props.collection.toJS();\r\n        colToUpdate.tags = [];\r\n        this.props.updateCollection(colToUpdate);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        this.props.updateCollectionTags(this.props.collection.get('viewId'), []);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleViewSelect = (mode) => {\r\n    switch (mode.label) {\r\n      case 'folder view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      case 'parallel view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      case 'list view':\r\n        this.props.toggleViewMode(this.props.collection.get('viewId'), mode.value);\r\n        break;\r\n      default:\r\n        console.log('no valid selection');\r\n    }\r\n  }\r\n\r\n  handleDestinationSelect = (newValue) => {\r\n    if (!newValue) {\r\n      this.props.setCollectionDestination(this.props.collection.get('viewId'), []);\r\n    } else {\r\n      this.props.setCollectionDestination(this.props.collection.get('viewId'), newValue);\r\n    }\r\n  };\r\n\r\n  handleSelectedSortOptions = (value) => {\r\n   \r\n    if (!value) {\r\n      this.props.setSortParams(this.props.collection.get('viewId'), []);\r\n    } else {\r\n      this.props.setSortParams(this.props.collection.get('viewId'), value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * to prevent double click from creating a new collection\r\n   * @param {event} e\r\n   */\r\n  handleDoubleClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleFocus = (e) => {\r\n    e.target.select();\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.handleBlur(e);\r\n    }\r\n  }\r\n\r\n  handleDrag = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.setState({ isDragging: !this.state.isDragging });\r\n  }\r\n\r\n  handleDragClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleTextChange = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    let name = e.target.value.replace(/#/g, \"\").replace(/ /g, \"-\")\r\n\r\n    const object = {\r\n      refId: this.props.collection.get('refId'),\r\n      viewId: this.props.collection.get('viewId')\r\n    }\r\n\r\n    this.props.changeMultipleName(object)\r\n\r\n    this.setState({\r\n      collectionName: name\r\n    });\r\n  }\r\n\r\n  handleAspectRatio = (dimensions) => {\r\n\r\n    const object = {\r\n      viewId: this.props.collection.get(\"viewId\"),\r\n      width: 0,\r\n      height: 6, // best height for readability\r\n      isResizable: false,\r\n    }\r\n\r\n    object.width = Math.floor(dimensions.length * 0.4) > 4 ? Math.floor(dimensions.length * 0.4) : 4;\r\n\r\n    this.props.updateAspectRatio(object)\r\n  }\r\n\r\n  handleUnlockAspectRatio = () => {\r\n    let object = {\r\n      viewId: this.props.collection.get(\"viewId\"),\r\n      isResizable: true,\r\n    }\r\n    this.props.updateUnlockAspectRatio(object);\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * sorts alternatives\r\n   * @param {Object} e \r\n   * @returns Array\r\n   */\r\n   handleSortAlternatives = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // console.log(this.props.collection.toJS())\r\n    let sortedArray = [...this.props.collection.get(\"layoutsForAlts\").toJS()]\r\n    const width = calculateWidth(this.props.layoutForCollection.get('w'), 5, layoutConstants.get('CELL_DIM'), 0);\r\n    const numColumns = Math.floor((width - 40) / 170);\r\n    const sortParams = this.props.collection.get(\"sortParams\").toJS();\r\n    let alts = this.props.alternatives.get(\"alternatives\");\r\n    let outputsArray = this.props.collection.get(\"outputs\").toJS();\r\n    let inputsArray = this.props.collection.get(\"inputs\").toJS()\r\n    \r\n\r\n    if (sortParams.length <= 0) {\r\n      return;\r\n    } else{\r\n      let selectedAlts = this.props.selectedAlts;\r\n        sortedArray.sort(function(a,b){\r\n              \r\n            let firstAlt = findAlternativesFromID(alts, a.i);\r\n            let secondAlt = findAlternativesFromID(alts, b.i);      \r\n            let i = 0, result = 0;\r\n            while(i < sortParams.length && result === 0) {\r\n\r\n               if(sortParams[i].value === 'isReferenced'){\r\n                let firstStatment   = selectedAlts.includes(firstAlt.get(\"refId\")) && !firstAlt.get('isSelected');\r\n                let secondStatment = selectedAlts.includes(secondAlt.get(\"refId\")) && !secondAlt.get('isSelected');\r\n                 result = sortParams[i].direction*( firstStatment.toString() < secondStatment.toString() ? -1 : (firstStatment.toString() > secondStatment.toString() ? 1:0) )\r\n               }else if(outputsArray.some(e => e === sortParams[i].value)){\r\n                 result =  sortParams[i].direction*(firstAlt.get(\"outputs\").get(sortParams[i].value).toString() < secondAlt.get(\"outputs\").get(sortParams[i].value).toString() ? -1 : (firstAlt.get(\"outputs\").get(sortParams[i].value).toString() > secondAlt.get(\"outputs\").get(sortParams[i].value).toString() ? 1 : 0));\r\n               }else if(inputsArray.some(e => e === sortParams[i].value)){\r\n                result =  sortParams[i].direction*(firstAlt.get(\"params\").get(sortParams[i].value).toString() < secondAlt.get(\"params\").get(sortParams[i].value).toString() ? -1 : (firstAlt.get(\"params\").get(sortParams[i].value).toString() > secondAlt.get(\"params\").get(sortParams[i].value).toString() ? 1 : 0));\r\n               }else{\r\n                result = sortParams[i].direction*(firstAlt.get(sortParams[i].value).toString() < secondAlt.get(sortParams[i].value).toString() ? -1 : (firstAlt.get(sortParams[i].value).toString() > secondAlt.get(sortParams[i].value).toString() ? 1 : 0));\r\n               }    \r\n              i++;\r\n            }\r\n            return result;\r\n          })\r\n        reArrangeCollectionLayout(sortedArray, numColumns);\r\n    }\r\n    this.props.updateAlternativeLayoutForCollection(this.props.collection.get(\"viewId\"), sortedArray);\r\n  }\r\n\r\n   \r\n\r\n  handleAltsLayout = (layouts) => {\r\n    this.props.updateAlternativeLayoutForCollection(this.props.collection.get('viewId'), layouts)\r\n  }\r\n\r\n\r\n  /**\r\n   * Changes the sortParams direction  \r\n   * @param {String} label \r\n   * @param {Object} e \r\n   */\r\n  handleArrowClick = (label, e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    let copyOfParams      = this.props.collection.get(\"sortParams\").toJS()\r\n    let copyOfStateParams = [ ...this.state.sortingOptions]\r\n    for(let i = 0; copyOfParams.length > i; i++ ){\r\n      if(copyOfParams[i].label === label){\r\n        if(copyOfParams[i].direction === 1){\r\n          copyOfParams[i].direction = -1\r\n        }else{\r\n          copyOfParams[i].direction = 1\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    for(let i = 0; copyOfStateParams.length > i; i++ ){\r\n      if(copyOfStateParams[i].label === label){\r\n        if(copyOfStateParams[i].direction === 1){\r\n          copyOfStateParams[i].direction = -1\r\n        }else{\r\n          copyOfStateParams[i].direction = 1\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n  \r\n\r\n\r\n    this.props.setSortParams(this.props.collection.get('viewId'), copyOfParams);\r\n    this.setState({\r\n      sortingOptions:  copyOfStateParams\r\n    })\r\n  \r\n  }\r\n\r\n  handleItemClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    const MultiValueLabel = props => {\r\n      return (\r\n        <div onClick={this.handleItemClick}>\r\n          <components.MultiValueLabel {...props}>\r\n            <p className={styles.multiValueLabel}>{props.data.label}</p>\r\n            <div\r\n              onClick={this.handleItemClick}\r\n              className={styles.arrowIconsContainer}\r\n            >\r\n            <IconContext.Provider value={{ size: '1.25em' }}>\r\n            {\r\n              props.data.direction === -1 ?\r\n              <CgArrowUpO\r\n                onClick={this.handleArrowClick.bind(this, props.data.label)}\r\n                className={styles.arrowIconStyle}\r\n              />\r\n              :\r\n              <CgArrowDownO\r\n                className={styles.arrowIconStyle}\r\n                onClick={this.handleArrowClick.bind(this, props.data.label)}\r\n              />\r\n            }\r\n            </IconContext.Provider>\r\n            </div>              \r\n\r\n          </components.MultiValueLabel>\r\n        </div>\r\n      );\r\n    };\r\n    const collectionHeight = getLayoutForCollection(this.props.layouts, this.props.collection.get('viewId')).get('h');\r\n    // this is to figure out which style to apply to the current collection\r\n    // collection selected has a blue border, other collections with the same (ref) id\r\n    // are highlighted with yellow border\r\n\r\n    let situation = 'C';\r\n\r\n    if (this.props.collection.get('isSelected')) {\r\n      situation = 'A';\r\n    } else if (!this.props.collection.get('isSelected') && this.props.selectedCols.includes(this.props.collection.get('refId'))) {\r\n      situation = 'B';\r\n    }\r\n\r\n    const selectStyleName = classnames({\r\n      [styles['collection']]: situation === 'C',\r\n      [styles['collection-selected']]: situation === 'A',\r\n      [styles['collection-related']]: situation === 'B',\r\n    });\r\n\r\n    const dragStyleName = classnames({\r\n      [styles['start-drag']]: !this.state.dragging,\r\n      'drag-handle': true,\r\n      [styles['dragging']]: this.state.dragging,\r\n    });\r\n\r\n\r\n    const customStyles = {\r\n      container: (base, state) => {\r\n        return ({ ...base, zIndex: state.isFocused ? '998' : '1' }); // Only when current state focused\r\n      },\r\n    };\r\n\r\n    const customStyles2 = {\r\n      multiValueLabel: (base) => {\r\n        return (\r\n          {\r\n            ...base,\r\n            flexDirection: \"row\",\r\n            display: \"flex\",\r\n            border: '1px solid #000',\r\n            borderRight: '0px'\r\n          }\r\n        );\r\n      },\r\n      container: (base, state) => {\r\n        return (\r\n            { \r\n              ...base, \r\n              zIndex: state.isFocused ? '998' : '1' \r\n\r\n            }\r\n          ); \r\n      },\r\n      valueContainer: (base, state) => {\r\n        return(\r\n          {\r\n            ...base,\r\n            overflowY: 'scroll',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            maxHeight: '60px',\r\n          }\r\n        )\r\n      },\r\n      multiValueRemove: (base, state) => {\r\n        return (\r\n          {\r\n            ...base,\r\n            backgroundColor: '#2684ff',\r\n            border: '1px solid #000',\r\n          }\r\n        )\r\n      }\r\n    };\r\n\r\n   \r\n\r\n\r\n    this.destinationOptions = this.props.loadOptions(this.props.collection.get('viewId'));\r\n    this.loadTags();\r\n\r\n    return (\r\n      <div\r\n        key={'collection-box-' + this.props.collection.get('viewId')}\r\n        ref={(el) => this.cmpEl = el}\r\n        className={selectStyleName}\r\n        style={this.props.style}\r\n        onDoubleClick={this.handleDoubleClick}>\r\n        <div\r\n          onClick={this.handleSelect}\r\n          className={styles.pointer2}\r\n        >\r\n          <div className={styles['icon-handle']}>\r\n            <span>\r\n              <span>\r\n                <IconContext.Provider value={{ size: '1.25em' }}>\r\n                  <IoMdMove title='move'\r\n                    className={dragStyleName}\r\n                    onClick={this.handleDragClick}\r\n                    onDragStart={this.handleDrag}\r\n                    onDragEnd={this.handleDrag}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n              <span style={{ marginLeft: '12px' }}>\r\n                <IconContext.Provider value={{ size: '1.25em', color: styles.colorSelected, paddingLeft: '2px' }}>\r\n                  <MdCancel title='unselect'\r\n                    onClick={this.handleUnselectClick}\r\n                    className={styles.pointer}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n              <span>\r\n                <IconContext.Provider value={{ size: '1.25em', color: styles.colorHovered }}>\r\n                  <MdCheckCircle title='select hovered'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleHovsClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n              <span>\r\n                <IconContext.Provider value={{ size: '1.25em', color: styles.colorSelectedRelated }}>\r\n                  <MdCheckCircle title='select refed'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleRefsClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n            </span>\r\n            {renderIf(\r\n              !this.props.collection.get(\"isEditingName\"),\r\n              (\r\n                <div\r\n                  className={styles['collection-name-div']}\r\n                  onDoubleClick={this.toggleEditViewForCollection}>\r\n                  <div className={styles['collection-title-div']}>\r\n                    <h4\r\n                      className={styles['collection-name']}\r\n                      onDoubleClick={this.toggleEditViewForCollection}>\r\n                      {getCollectionName(this.props.collection)}\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <div className={styles['collection-titleView-div']}>\r\n                    <h4\r\n                      className={styles['collection-name-view']}\r\n                    >\r\n                      {this.props.collection.get(\"collectionNameView\")}\r\n                    </h4>\r\n                  </div>\r\n\r\n                </div>\r\n              ),\r\n              <div className={styles['collection-name-div']}>\r\n                <div className={styles['collection-input-div']}>\r\n                  <input\r\n                    id={this.props.collection.get('viewId')}\r\n                    type=\"text\"\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    className={styles['textInputStyle']}\r\n                    onChange={this.handleTextChange}\r\n                    value={this.state.collectionName}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles['collection-titleView-div']}>\r\n                  <h4 className={styles['collection-name-view']}>\r\n                    {this.props.collection.get(\"collectionNameView\")}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <span>\r\n              <IconContext.Provider value={{ size: '1.35em' }}>\r\n                <MdVerticalAlignBottom title='sink'\r\n                  className={styles.pointer}\r\n                  onClick={this.handleMinimizeClick}\r\n                />\r\n              </IconContext.Provider>\r\n              <span>\r\n                <IconContext.Provider value={{ size: '1.35em' }}>\r\n                  <MdDelete title='empty'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleEmptyClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n              <span>\r\n                <IconContext.Provider value={{ size: '1.35em' }}>\r\n                  <MdDeleteForever title='delete'\r\n                    className={styles.pointer}\r\n                    onClick={this.handleCloseClick}\r\n                  />\r\n                </IconContext.Provider>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ 'display': 'flex', 'justifyContent': 'space-between', 'flexDirection': 'row' }}>\r\n          {collectionHeight < 2 ? null : <div style={{ 'flex': '50%', 'marginRight': '1%' }}>\r\n            <Select\r\n              styles={customStyles}\r\n              defaultValue={options[this.props.collection.get('viewType') - 1]}\r\n              options={options}\r\n              onChange={this.handleViewSelect}\r\n            />\r\n          </div>}\r\n          {this.props.collection.get('viewType') !== 2 ? null : <div style={{ 'flex': '30%', 'marginLeft': '1%' }}>\r\n            <CreatableSelect\r\n              styles={customStyles}\r\n              isMulti\r\n              placeholder={'destination collection(s)'}\r\n              options={this.destinationOptions}\r\n              onChange={this.handleDestinationSelect}\r\n              ref={this.destinationRef}\r\n            />\r\n          </div>}\r\n          {this.props.collection.get('viewType') === 2 ? null : <div style={{ 'flex': '45%', 'marginLeft': '1%', 'marginRight': '1%' }}>\r\n            <CreatableSelect          \r\n              components={{ MultiValueLabel }}\r\n               styles={customStyles2}   \r\n              isMulti\r\n              placeholder={'Sort Selection'}\r\n              options={this.state.sortingOptions}\r\n              onChange={this.handleSelectedSortOptions}\r\n              autoFocus={false}\r\n            />\r\n          </div>\r\n          }\r\n\r\n          {\r\n            this.props.collection.get('viewType') === 2 ? null :\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n               <Button variant=\"outlined\" onClick={this.handleSortAlternatives}>\r\n                         Sort\r\n                </Button>\r\n              </div>\r\n          }\r\n        </div>\r\n        <hr></hr>\r\n        {this.props.collection.get('viewType') === 1 ? <AlternativeContainer\r\n          altsInCollection={this.props.altsInCollection}\r\n          altsId={this.props.collection.get(\"altsid\")}\r\n          layoutsForAlts={this.props.collection.get(\"layoutsForAlts\")}\r\n          layoutForCollection={this.props.layoutForCollection}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          removeAlternativesFromCollection={this.props.removeAlternativesFromCollection}\r\n          toggleAltView={this.props.toggleAltView}\r\n          restoreAlternative={this.props.restoreAlternative}\r\n          selectedAlts={this.props.selectedAlts}\r\n          handleAltsLayout={this.handleAltsLayout.bind(this)}\r\n        /> : null}\r\n        {this.props.collection.get('viewType') === 2 ? <ParallelContainer\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          deselectAllAlternatives={this.props.deselectAllAlternatives}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          hoverAlternativeSpecial={this.props.hoverAlternativeSpecial}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          sendMessage={this.props.sendMessage}\r\n          altsInCollection={this.props.altsInCollection}\r\n          collection={this.props.collection}\r\n          alternatives={this.props.alternatives}\r\n          cloneAlternatives={this.props.cloneAlternatives}\r\n          createNewCollection={this.props.createNewCollection}\r\n          setCollectionMode={this.props.setCollectionMode}\r\n          infoRef={this.infoRef}\r\n          restoreAlternative={this.props.restoreAlternative}\r\n          selectedAlts={this.props.selectedAlts}\r\n          lockAspectRatio={this.handleAspectRatio.bind(this)}\r\n          unlockAspectRatio={this.handleUnlockAspectRatio}\r\n        /> : null}\r\n        {this.props.collection.get('viewType') === 3 ? <ListContainer\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n          selectAlternative={this.props.selectAlternative}\r\n          deselectAlternative={this.props.deselectAlternative}\r\n          hoverAlternative={this.props.hoverAlternative}\r\n          dehoverAlternative={this.props.dehoverAlternative}\r\n          altsInCollection={this.props.altsInCollection}\r\n          collection={this.props.collection}\r\n          alternatives={this.props.alternatives}\r\n          selectedAlts={this.props.selectedAlts}\r\n\r\n        /> : null}\r\n        <IconContext.Provider value={{ size: '1.15em' }}>\r\n          <FaHashtag\r\n            title='tag'\r\n            className={styles.tagEdit}\r\n            onClick={this.toggleTagging}\r\n          />\r\n        </IconContext.Provider>\r\n        <InfoBar\r\n          altsInCollection={this.props.altsInCollection.toJS()}\r\n          infoRef={this.infoRef}\r\n        />\r\n        {this.state.isTagging ?\r\n          <div style={{ 'marginLeft': '5%' }}>\r\n            <CreatableSelect\r\n              styles={customStyles}\r\n              isMulti\r\n              onChange={this.handleTaggingSelect}\r\n              defaultValue={this.tagOptions}\r\n              menuPosition={'fixed'}\r\n            />\r\n          </div> : null}\r\n        <TagBar\r\n          tagOptions={this.tagOptions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Collection;\r\n","import Collection from './Collection';\r\n\r\nexport default Collection;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from './settingsPanel.module.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport 'react-dropdown/style.css';\r\nimport { MdContentCopy } from 'react-icons/md';\r\n\r\n/**\r\n * @class SettingsPanel\r\n * @extends React.PureComponent\r\n * @description this component contains the global DStar settings, such as collection tiling, alternative thumbnail size and etc.\r\n */\r\nclass SettingsPanel extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      settingsOpen: true,\r\n      selectBox1Open: false,\r\n      selectBox2Open: false,\r\n      selectBox3Open: false,\r\n      altSize: this.props.settings.get('alternativeImageSize'),\r\n      colType: this.props.settings.get('collectionCompactionType'),\r\n      colPrev: this.props.settings.get('preventCollision'),\r\n    }\r\n    this.textField = null;\r\n    this.selectedProject = {};\r\n    this.newProjectName = \"\";\r\n    this.newProjectDescription = \"\";\r\n  }\r\n\r\n  /**\r\n   * @function handleSizeChange\r\n   * @memberof SettingsPanel\r\n   * @description changes the size of alternative thumbnails\r\n   * @param {event} event\r\n   */\r\n  handleSizeChange = (event) => {\r\n    this.setState({ altSize: event.target.value });\r\n    this.props.setAlternativeSize(event.target.value);\r\n  };\r\n\r\n  /**\r\n * @function handleTypeChange\r\n * @memberof SettingsPanel\r\n * @description handles the tiling option choice\r\n * @param {event} event \r\n */\r\n  handleTypeChange = (event) => {\r\n    this.setState({ colType: event.target.value });\r\n    this.props.setCompactionType(event.target.value);\r\n  };\r\n\r\n  /**\r\n * @function handlePreventionChange\r\n * @memberof SettingsPanel\r\n * @description handles the compaction prevention choice\r\n * @param {event} event \r\n */\r\n  handlePreventionChange = (event) => {\r\n    this.setState({ colPrev: event.target.value });\r\n    this.props.setCollisionPrevention(event.target.value);\r\n  };\r\n\r\n  /**\r\n * @function handleSettingsClose\r\n * @memberof SettingsPanel\r\n * @description hides the settings pane\r\n */\r\n  handleSettingsClose = () => {\r\n    this.setState({ settingsOpen: false });\r\n    this.props.toggleSettings();\r\n  };\r\n\r\n  /**\r\n   * @function handleSizeClose\r\n   * @memberof SettingsPanel\r\n   * @description hides size options\r\n   */\r\n  handleSizeClose = () => {\r\n    this.setState({ selectBox1Open: false });\r\n  };\r\n\r\n  /**\r\n   * @function handleSizeOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the size options\r\n   */\r\n  handleSizeOpen = () => {\r\n    this.setState({ selectBox1Open: true });\r\n  };\r\n\r\n  /**\r\n   * @function handleTypeClose\r\n   * @memberof SettingsPanel\r\n   * @description hides the tiling options\r\n   */\r\n  handleTypeClose = () => {\r\n    this.setState({ selectBox2Open: false });\r\n  };\r\n\r\n  /**\r\n   * @function handleTypeOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the tiling options\r\n   */\r\n  handleTypeOpen = () => {\r\n    this.setState({ selectBox2Open: true });\r\n  };\r\n\r\n  /**\r\n   * @function handlePreventionClose\r\n   * @memberof SettingsPanel\r\n   * @description hides the compaction prevention options\r\n   */\r\n  handlePreventionClose = () => {\r\n    this.setState({ selectBox3Open: false });\r\n  };\r\n\r\n  /**\r\n   * @function handlePreventionOpen\r\n   * @memberof SettingsPanel\r\n   * @description shows the compaction prevention options\r\n   */\r\n  handlePreventionOpen = () => {\r\n    this.setState({ selectBox3Open: true });\r\n  };\r\n\r\n  /**\r\n   * @function handleSelect\r\n   * @memberof projectBox\r\n   * @description selecting one of the existing projects\r\n   */\r\n  handleSelect = () => {\r\n    if ((typeof (this.selectProject) !== \"undefined\") && this.selectProject.name) {\r\n      this.props.selectProject(this.selectProject);\r\n      this.setState({ settingsOpen: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @function handleCreate\r\n   * @memberof projectBox\r\n   * @description creating a new project \r\n   */\r\n  handleCreate = () => {\r\n    if (this.newProjectName !== \"\") {\r\n      this.props.createProject(this.newProjectName, this.newProjectDescription);\r\n      this.setState({ settingsOpen: false });\r\n    }\r\n  };\r\n\r\n  onProjectChange = (e) => {\r\n    var index = this.props.projects.toJS().findIndex((project) => project.name === e.value);\r\n\r\n    if (index > -1) {\r\n      this.selectProject = this.props.projects.toJS()[index];\r\n    }\r\n  }\r\n\r\n  onProjectNameChange = (e) => {\r\n    this.newProjectName = e.target.value;\r\n  }\r\n\r\n  onProjectDescriptionChange = (e) => {\r\n    this.newProjectDescription = e.target.value;\r\n  }\r\n\r\n  copyToClipboard = (e) => {\r\n    this.textField.select();\r\n    document.execCommand('copy');\r\n    e.target.focus();\r\n  };\r\n\r\n  /**\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    const options = this.props.projects.toJS().map((project) => project.name);\r\n    const defaultOption = options[0];\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          className={styles['panel']}\r\n          open={this.state.settingsOpen}\r\n          onClose={this.handleSettingsClose}\r\n          aria-labelledby=\"settings-dialog-title\"\r\n          aria-describedby=\"settings-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"settings-dialog-title\">{\"Settings\"}</DialogTitle>\r\n          <hr />\r\n          <DialogContent className={styles['panel-content']}>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td><p>alternative image size</p></td>\r\n                  <td>\r\n                    <FormControl>\r\n                      <InputLabel id=\"open-select-label\"></InputLabel>\r\n                      <Select\r\n                        labelId=\"open-select-label\"\r\n                        id=\"open-select\"\r\n                        open={this.state.selectBox1Open}\r\n                        onClose={this.handleSizeClose}\r\n                        onOpen={this.handleSizeOpen}\r\n                        value={this.state.altSize}\r\n                        onChange={this.handleSizeChange}\r\n                      >\r\n                        <MenuItem value={150}>Small</MenuItem>\r\n                        <MenuItem value={180}>Medium</MenuItem>\r\n                        <MenuItem value={210}>Large</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td><p>collection tiling method</p></td>\r\n                  <td>\r\n                    <FormControl>\r\n                      <InputLabel id=\"open-select-label\"></InputLabel>\r\n                      <Select\r\n                        labelId=\"open-select-label\"\r\n                        id=\"open-select\"\r\n                        open={this.state.selectBox2Open}\r\n                        onClose={this.handleTypeClose}\r\n                        onOpen={this.handleTypeOpen}\r\n                        value={this.state.colType}\r\n                        onChange={this.handleTypeChange}\r\n                      >\r\n                        <MenuItem value={'none'}>None</MenuItem>\r\n                        <MenuItem value={'vertical'}>Vertical</MenuItem>\r\n                        <MenuItem value={'horizontal'}>Horizontal</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td><p>prevent collection collision</p></td>\r\n                  <td>\r\n                    <FormControl>\r\n                      <InputLabel id=\"open-select-label\"></InputLabel>\r\n                      <Select\r\n                        labelId=\"open-select-label\"\r\n                        id=\"open-select\"\r\n                        open={this.state.selectBox3Open}\r\n                        onClose={this.handlePreventionClose}\r\n                        onOpen={this.handlePreventionOpen}\r\n                        value={this.state.colPrev}\r\n                        onChange={this.handlePreventionChange}\r\n                      >\r\n                        <MenuItem value={false}>Yes</MenuItem>\r\n                        <MenuItem value={true}>No</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </td>\r\n\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <hr />\r\n            <form className={styles[\"containerForProjectAndName\"]}>\r\n              <label className={styles[\"projectLabel\"]} htmlFor=\"projectKey\">Project Key: </label>\r\n              <input\r\n                id=\"projectKey\"\r\n                ref={(textField) => this.textField = textField}\r\n                className={styles[\"copyInput\"]}\r\n                onClick={this.copyToClipboard}\r\n                value={this.props.selectedProject.key}\r\n                readOnly\r\n              />\r\n              <MdContentCopy\r\n                title='click to copy'\r\n                className={styles['button']}\r\n                onClick={this.copyToClipboard}\r\n              />\r\n            </form>\r\n            <DialogActions>\r\n              <Button onClick={this.handleSettingsClose} color=\"primary\">\r\n                OK\r\n                  </Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsPanel;","import React, { PureComponent } from \"react\";\r\nimport styles from './searchPanel.module.scss';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n/**\r\n * @class SearchPanel\r\n * @extends React.PureComponent\r\n * @description this componet search through collections by name.\r\n */\r\nclass SearchPanel extends PureComponent {\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {object} props \r\n     */\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            searchOpen: true,\r\n            searchText: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @function handleSearchClose\r\n     * @memberof SearchPanel\r\n     * @param {Object} e\r\n     * @description hide the search panel \r\n     */\r\n    handleSearchClose = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ searchOpen: false})\r\n        this.props.toggleSearch();\r\n    }\r\n\r\n    /**\r\n     * @function handleSearchText\r\n     * @description handle search text change\r\n     * @memberof SearchPanel\r\n     * @param {Object} e\r\n     */\r\n    handleSearchText = (e) => {\r\n        this.setState({\r\n            searchText: e.target.value,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @function handleSubmit\r\n     * @memberof SearchPanel\r\n     * @description hande search from submition\r\n     * @param {object} e\r\n     */\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(this.state.searchText){\r\n            this.props.handleSearch(this.state.searchText);\r\n        }else{\r\n            const empty = [];\r\n            this.props.searchedCollectionFailed(empty);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function removeValidation\r\n     * @memberof SearchPanel\r\n     * @deprecated sets vlidation to false\r\n     */\r\n    removeValidation = () => {\r\n        if (this.props.search.get('showValidation')){\r\n            this.props.searchedCollectionSuccess();\r\n            this.props.emptyMissMatchArray();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * @returns {ReactPureComponent}\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    className={styles['panel']}\r\n                    open={this.state.searchOpen}\r\n                    onClose={this.handleSearchClose}\r\n                    aria-labelledby=\"search-dialog-title\"\r\n                >\r\n                    <DialogTitle\r\n                        id=\"search-dialog-title\"\r\n                    >\r\n                        {\"Collection Search\"}\r\n                    </DialogTitle>\r\n                    <hr/>\r\n                    <DialogContent className={styles['panel-content']}>\r\n                        <form onSubmit={this.handleSubmit} \r\n                            className={styles['panel-form']}\r\n                        >\r\n                            <TextField\r\n                                className={styles['panel-textField']}\r\n                                onClick={this.removeValidation}\r\n                                id=\"outlined-full-width\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter Collection name\"\r\n                                variant=\"outlined\"\r\n                                onChange={this.handleSearchText}\r\n                                value={this.state.searchText}\r\n                                error={this.props.search.get('showValidation')}\r\n                                helperText={\r\n                                    this.props.search.get('showValidation') ? \"Can't find collection \" + this.props.search.get(\"missMatchCollectionNames\").toString() : null}\r\n                            >\r\n                            </TextField>\r\n                            <div\r\n                             className={styles[\"panel-buttons-container\"]}\r\n                            >\r\n                                <Button \r\n                                    type=\"submit\" \r\n                                    color=\"primary\"\r\n                                    className={styles['panel-button']}>\r\n                                    Search\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={this.handleSearchClose} \r\n                                    color=\"primary\"\r\n                                    className={styles['action-button']}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React, {PureComponent} from 'react';\r\nimport styles from './sinkList.module.scss';\r\nimport {getLayoutForCollectionFromClipboard} from '../../util/layouts';\r\nimport {getCoordinates} from '../../util/collections';\r\nimport Immutable from 'immutable';\r\n\r\n// TODO: make it functional component\r\n\r\n/**\r\n * @class SinkList\r\n * @extends React.PureComponent\r\n * @description this is the presentational component of the SinkList component\r\n */\r\nclass SinkList extends PureComponent {\r\n\r\n/**\r\n * @function handleClick\r\n * @memberof SinkList\r\n * @description handles where to open the sinkList menu upon click on the icon in header/context menu\r\n * @param {event} event\r\n * @param {number} collectionID\r\n */\r\nhandleClick = (event, collectionID) => {\r\n  const x = event.clientX;\r\n  const y = event.clientY;\r\n  const newPoint = getCoordinates(x, y - 64);\r\n\r\n  const collectionLayout = getLayoutForCollectionFromClipboard(this.props.layouts, collectionID);\r\n  \r\n  const layoutObject = Immutable.fromJS({\r\n    x: newPoint.x,\r\n    y: newPoint.y,\r\n    w: collectionLayout ? collectionLayout.get('w') : 3,\r\n    h: collectionLayout ? collectionLayout.get('h') : 5,\r\n    i: collectionID,\r\n  });\r\n\r\n  this.props.addLayoutObject(layoutObject);\r\n  this.props.restoreCollection(collectionID);\r\n}\r\n\r\n/**\r\n * @returns {ReactPureComponent}\r\n */\r\nrender() {\r\n\r\n  const collectionsSinked = this.props.collections.get('collections').filter((collection) => (\r\n    collection.get('isSinked') === true\r\n  ));\r\n\r\n  const collections = collectionsSinked.map((collection) => {\r\n    return (\r\n      <tr className={styles['items-list']} key={'sink-item-' + collection.get('viewId')} \r\n          onClick={(e) => this.handleClick(e, collection.get('viewId'))}>\r\n        <td>\r\n          {collection.get('collectionName')}\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n    return (\r\n      <div className={styles['sink-list-menu']}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th> Collections in Sink <hr className={styles['hr-sinkList']} /></th>\r\n            </tr>\r\n            {collections}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SinkList;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from './header.module.scss';\r\nimport SinkList from '../sinkList/SinkList';\r\n\r\nimport {\r\n  Collection,\r\n  Deselct,\r\n  Help,\r\n  Log,\r\n  Sink,\r\n  Settings\r\n} from \"../icons\";\r\n\r\nimport * as d3 from 'd3';\r\n\r\n// TODO: make it functional component\r\n\r\n/**\r\n * @class Header     \r\n * @extends React.PureComponent\r\n * @description this is the presentational component of header (context) menu\r\n * @component \r\n */\r\nclass Header extends PureComponent {\r\n\r\n  /**\r\n   * @function handleSinkClick\r\n   * @description when clicked, this function toggles the collection sink\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleSinkClick = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (this.props.header.get('listShow')) {\r\n      this.props.hideSinkList();\r\n    } else {\r\n      this.props.showSinkList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function handleHistoryClick\r\n   * @description when clicked, this function toggle's the history page\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleHistoryClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleHistory();\r\n  }\r\n\r\n  /**\r\n   * @function handleUnselectAllClick\r\n   * @description when clicked, this function unselects all items (alternatives, collections etc.)\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleUnselectAllClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.deselectAllCollections();\r\n    this.props.deselectAllAlternatives();\r\n    this.props.hideHeader();\r\n\r\n    d3.selectAll(\".alt\")\r\n      .style('border', null)\r\n      .style('border-style', null)\r\n      .style('border-color', null)\r\n      .style('border-radius', null)\r\n      .style('-webkit-box-shadow', null);\r\n\r\n    d3.selectAll(\".pc\")\r\n      .style('stroke', styles.colorUnselected)\r\n      .style('opacity', 0.3);\r\n\r\n    d3.selectAll(\".tableList\")\r\n      .style('background-color', '#ffffff');\r\n  }\r\n\r\n  /**\r\n   * @function handleSettingsClick\r\n   * @description when clicked, this function toggles the settings pane\r\n   * @memberof Header\r\n   * @param {event} e \r\n   */\r\n  handleSettingsClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleSettings();\r\n  }\r\n\r\n  /**\r\n   * @function handleSearchClick\r\n   * @description when clicked, this function toggles the search pane\r\n   * @memberof Headr\r\n   * @param {event} e\r\n   */\r\n  handleSearchClick = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleSearch();\r\n  }\r\n\r\n  handleHelpClick = (e) => {\r\n    e.stopPropagation();\r\n    window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\", '_blank', 'width=800,height=800')\r\n  }\r\n\r\n  showDstarMenu = (e) => {\r\n    e.preventDefault();\r\n    this.props.showDstarMenu();\r\n  }\r\n\r\n  showCollectionList = (e) => {\r\n    e.preventDefault();\r\n    this.props.shouldShowCollectionList();\r\n  }\r\n\r\n  /**\r\n   * The component should render the view for the header menu\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n    const positionOfContextMenu = {\r\n      'position': 'absolute',\r\n      'top': this.props.header.get('headerY'),\r\n      'left': this.props.header.get('headerX'),\r\n      'zIndex': 3,\r\n    };\r\n\r\n    const backgroundColorStyle = { backgroundColor: 'white' };\r\n    return (\r\n      <div style={positionOfContextMenu}>\r\n        <input className={styles['right-click-menu']} id=\"right-click-menu\" />\r\n        <label htmlFor=\"right-click-menu\" />\r\n        <img style={backgroundColorStyle, { width: 70, height: 70 }} src={require('../../resources/DStarBlackLogo.png').default} alt=\"DStar-logo\" onClick={this.showDstarMenu} />\r\n        <ul>\r\n          <li title=\"Unselect All\" className={styles['right-click-icon']} onClick={this.handleUnselectAllClick}> <a style={backgroundColorStyle} ><Deselct /></a> </li>\r\n          <li title=\"Show History\" className={styles['right-click-icon']} onClick={this.handleHistoryClick}> <a style={backgroundColorStyle} ><Log /></a> </li>\r\n          <li title=\"Show Sink\" className={styles['right-click-icon']} onClick={this.handleSinkClick}> <a style={backgroundColorStyle} ><Sink /></a> </li>\r\n          <li title=\"Settings\" className={styles[\"right-click-icon\"]} onClick={this.handleSettingsClick}> <a style={backgroundColorStyle}><Settings /></a></li>\r\n          <li title=\"Collection\" className={styles['right-click-icon']} onClick={this.showCollectionList} >  <a style={backgroundColorStyle} ><Collection /></a> </li>\r\n          <li title=\"Help\" className={styles['right-click-icon']} onClick={this.handleHelpClick}> <a style={backgroundColorStyle} ><Help /></a></li>\r\n          <div>{this.props.header.get('listShow') ? <SinkList {...this.props} /> : null}</div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace collectionActions\r\n */\r\n\r\nimport { urls } from '../constants/urls';\r\nimport {\r\n  deleteCollection,\r\n  createCollection,\r\n  addLayoutObject,\r\n  deselectCollection,\r\n  deselectAlternative,\r\n  toggleSink,\r\n  addAlternative,\r\n  editNameForCollection,\r\n  addAlternativeToCollection,\r\n  setCollectionDestination\r\n} from './updateActions';\r\nimport {\r\n  cloneAlternativesToCollection,\r\n} from './alternativeActions'\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {\r\n  findCollectionsFromID,\r\n  removeViewName\r\n} from '../util/collections';\r\nimport {\r\n  findAlternativesFromID,\r\n} from '../util/alternatives';\r\nimport Immutable from 'immutable';\r\nimport { toast } from 'react-toastify';\r\nimport { batch } from 'react-redux';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function deleteCollections\r\n * @description deletes a collection with the given viewID\r\n * @memberof collectionActions\r\n * @param {string} collectionId - the viewID of collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const deleteCollections = (collectionId) => (dispatch, getState) => {\r\n  return fetch(urls.get('deleteCollection'), {\r\n    method: 'delete',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify([collectionId]),\r\n  }).then(() => {\r\n    const collections = getState().collections.get('collections');\r\n    const alternatives = getState().alternatives.get('alternatives');\r\n    const collection = findCollectionsFromID(collections, collectionId);\r\n\r\n    collection.get('altsid').map((alt) => {\r\n      const alternative = findAlternativesFromID(alternatives, alt);\r\n      dispatch(deselectAlternative(alternative.get('viewId')));\r\n    });\r\n\r\n    batch(() => {\r\n      dispatch(deselectCollection(collectionId));\r\n      dispatch(deleteCollection(collectionId));\r\n      dispatch(successMessage(toast.success('Collection deleted'), 'collection deleted ' + time));\r\n\r\n      // after deleting a collection we should remove it from destinations in other collections\r\n      const collectionsToUpdateDestination = collections.filter((col) => col.get('viewId') !== collectionId).filter((col) => col.get('destinations').find((dest) => dest.get('value') === collectionId))\r\n\r\n      collectionsToUpdateDestination.map((col) => {\r\n        dispatch(setCollectionDestination(col.get('viewId'), col.get('destinations').toJS().filter((dest) => dest.value !== collectionId)));\r\n      })\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection is not deleted'), 'collection not deleted ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function updateCollection\r\n * @description updates a (whole) collection\r\n * @memberof collectionActions\r\n * @param {object} collection - the collection object\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const updateCollection = (collection) => (dispatch) => {\r\n\r\n  return fetch(urls.get('collections'), {\r\n    method: 'put',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify([collection]),\r\n  }).then((data) => {\r\n    if (data.status === 200) {\r\n      dispatch(successMessage(toast.success('Collection updated'), 'collection updated ' + time));\r\n    } else {\r\n      dispatch(warningMessage(toast.warning('Something went wrong'), 'something went wrong ' + time));\r\n    }\r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Collection is not updated'), 'collection not updated ' + time));\r\n  });\r\n};\r\n\r\n/**\r\n * @function createNewCollection\r\n * @description dispatches an action to create a new collection\r\n * @memberof collectionActions\r\n * @param {number} x - x coordinate\r\n * @param {number} y - y coordinate\r\n * @param {number} w - collection width\r\n * @param {number} h - collection height\r\n * @param {array} altsid - array of alternative viewIDs that belong to the collection\r\n * @param {string} viewId - viewID of the collection\r\n * @param {string} refId - refID of the collection\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @param {array} dimOrder - order of dimensions of the alternatives in the collection\r\n * @param {array} inputs - input dimensions\r\n * @param {array} outputs - output dimensions\r\n * @param {array} destinations - destinations for the query operations on this collection\r\n * @param {object} currentMode - current mode (if any) in the parallel coordinates view\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const createNewCollection = (\r\n  x = 0, y = 0, w = 3, h = 5, altsid = [], collectionName = 'col',\r\n  viewId = null, refId = null, isSelected = false, isSinked = false,\r\n  tags = [], viewType = 1, dimOrder, inputs = [], outputs = [], destinations = [], currentMode = {}, isEditingName = false, collectionNameView = \"View(1)\", sortCollection = [], layoutsForAlts = []) => (dispatch, getState) => {\r\n\r\n    return fetch(urls.get('collections'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({}),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n\r\n        viewId = data[0].viewId;\r\n        refId = data[0].refId;\r\n        viewType = data[0].viewType;\r\n        tags = data[0].tags;\r\n        dimOrder = getState().scales.get('keySets');\r\n        collectionNameView = data[0].collectionNameView;\r\n\r\n        collectionName = collectionName && collectionName !== 'col' ? collectionName + \"-\" + collectionNameView : data[0].collectionName + \"-\" + collectionNameView;\r\n\r\n        const layoutObject = Immutable.fromJS(\r\n          { x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n        );\r\n\r\n        batch(() => {\r\n          dispatch(addLayoutObject(layoutObject));\r\n          dispatch(createCollection(data[0].altsid, collectionName,\r\n            refId, tags, viewId, isSelected, isSinked,\r\n            viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView, sortCollection, layoutsForAlts));\r\n        });\r\n\r\n        return viewId;\r\n\r\n      }).then(viewId => {\r\n\r\n        if (altsid !== null && altsid !== undefined && altsid.length > 0) {\r\n          dispatch(cloneAlternativesToCollection(altsid, [viewId]));\r\n        }\r\n\r\n        if (collectionName !== null && collectionName !== undefined && collectionName.length > 0) {\r\n          batch(() => {\r\n            let nameWithoutView = collectionName\r\n            nameWithoutView = removeViewName(nameWithoutView)\r\n            dispatch(updateCollection(findCollectionsFromID(getState().collections.get('collections'), viewId).toJS()));\r\n            dispatch(editNameForCollection(viewId, nameWithoutView))\r\n          });\r\n        }\r\n\r\n      }).catch((err) => {\r\n        dispatch(errorMessage(toast.error('Collection is not created'), 'collection is not created' + time));\r\n      });\r\n  };\r\n\r\n/**\r\n * @function copyWithRefCollection\r\n * @description copies an collection as a ref i.e. the new collection as a mirror image of the copied collection\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const copyWithRefCollection = (viewIds = null, isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {}, isEditingName = false, sortCollection = [], layoutsForAlts = []) => (dispatch, getState) => {\r\n  const toastyVar = toast.info(\"Copying Collection With Ref\", {\r\n    toastId: \"CopyWithRef\",\r\n    autoClose: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    rtl: true,\r\n    position: 'bottom-center',\r\n    progress: 0.8,\r\n  });\r\n  return fetch(urls.get('collectionCopyWithRef'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(viewIds),\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n    .then((data) => {\r\n\r\n      toast.update(toastyVar, { progress: 0.5 });\r\n\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n      for (let i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n\r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n      for (let i = 0; i < newCollections.length; i++) {\r\n        const newCollection = newCollections[i];\r\n        let collectionName = newCollection.collectionName;\r\n\r\n        let viewId = newCollection.viewId;\r\n        let refId = newCollection.refId;\r\n\r\n        let collectionNameView = newCollection.collectionNameView;\r\n        viewType = newCollection.viewType;\r\n        tags = newCollection.tags;\r\n        let altsid = newCollection.altsid;\r\n        let inputs = newCollection.inputs;\r\n        let outputs = newCollection.outputs;\r\n        let dimOrder = findCollectionsFromID(getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder');\r\n\r\n        let layout = data.collections[i].layout;\r\n\r\n        const layoutObject = Immutable.fromJS(\r\n          { x: layout.x + layout.w, y: layout.y, w: layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n        );\r\n\r\n        batch(() => {\r\n          toast.update(toastyVar, { progress: 0.2 });\r\n\r\n          dispatch(addLayoutObject(layoutObject));\r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView, sortCollection, layoutsForAlts));\r\n          dispatch(addLayoutObject(layoutObject));\r\n\r\n          if (toast.isActive(toastyVar)) {\r\n            toast.update(toastyVar, {\r\n              progress: 0,\r\n              closeOnClick: true,\r\n              autoClose: 1,\r\n            });\r\n          }\r\n          dispatch(successMessage(toast.success('Collection copied'), 'collection copied' + time));\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, { progress: 0, closeOnClick: true, autoClose: 1 });\r\n      dispatch(errorMessage(toast.error('collection is not copied'), 'collection is not copied' + time));\r\n    });\r\n};\r\n\r\n/**\r\n * @function cloneAltInNewCollection\r\n * @description copies an collection as a ref i.e. the new collection as a mirror image of the copied collection\r\n * @memberof collectionActions\r\n * @param {number} x - x coordinate\r\n * @param {number} y - y coordinate\r\n * @param {number} w - collection width\r\n * @param {number} h - collection height\r\n * @param {array} altsid - array of alternative viewIDs that belong to the collection\r\n * @param {string} viewId - viewID of the collection\r\n * @param {string} refId - refID of the collection\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @param {array} dimOrder - order of dimensions of the alternatives in the collection\r\n * @param {array} inputs - input dimensions\r\n * @param {array} outputs - output dimensions\r\n * @param {array} destinations - destinations for the query operations on this collection\r\n * @param {object} currentMode - current mode (if any) in the parallel coordinates view\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneAltInNewCollection = (\r\n  altsToBeCloned = [], x = 0, y = 0, w = 3, h = 5, altsid = [], collectionName = 'col',\r\n  viewId = null, refId = null, isSelected = false, isSinked = false,\r\n  tags = [], viewType = 1, dimOrder, inputs = [], outputs = [], destinations = [], currentMode = {}, isEditingName = false, collectionNameView = \"View(1)\", sortCollection = [], layoutsForAlts = []) => (dispatch, getState) => {\r\n\r\n    if (altsToBeCloned.length > 0) {\r\n      const toastyVar = toast.info(\"Clone Alternative In a New Collection\", {\r\n        toastId: \"cloneAltInNewCollection\",\r\n        autoClose: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        rtl: true,\r\n        position: 'bottom-center',\r\n        progress: 0.8,\r\n      });\r\n\r\n      return fetch(urls.get('cloneAltInNewCollection'), {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          altsid: altsToBeCloned\r\n        }),\r\n      }).then(response => response.json())\r\n        .then((data) => {\r\n          var collections = data.collections;\r\n          viewId = collections[0].viewId;\r\n          refId = collections[0].refId;\r\n          viewType = collections[0].viewType;\r\n          tags = collections[0].tags;\r\n          dimOrder = getState().scales.get('keySets');\r\n          collectionNameView = collections[0].collectionNameView;\r\n\r\n          collectionName = collectionName && collectionName !== 'col' ? collectionName + \"-\" + collectionNameView : collections[0].collectionName + \"-\" + collectionNameView;\r\n\r\n          const layoutObject = Immutable.fromJS(\r\n            { x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n          );\r\n\r\n          batch(() => {\r\n            dispatch(addLayoutObject(layoutObject));\r\n            dispatch(createCollection(collections[0].altsid, collectionName,\r\n              refId, tags, viewId, isSelected, isSinked,\r\n              viewType, dimOrder, inputs, outputs, destinations, currentMode, isEditingName, collectionNameView, sortCollection, layoutsForAlts));\r\n          });\r\n\r\n          return data;\r\n        }).then((data) => {\r\n          toast.update(toastyVar, { progress: 0.5 });\r\n          let alternatives = data.alternatives;\r\n\r\n          alternatives.forEach((datum) => {\r\n\r\n            const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n            const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n            const newCollection = shapeCollection(datum.collection, Object.keys(inputs), Object.keys(outputs));\r\n\r\n            batch(() => {\r\n              datum.alts.map((alternative) => {\r\n                dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n              });\r\n            })\r\n\r\n            datum.alts.map((alt, index) => {\r\n              batch(() => {\r\n                // TODO: fix collection inputs/outputs/dimOrder\r\n                dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, newCollection.inputs, newCollection.outputs, newCollection.dimOrder));\r\n              });\r\n            });\r\n          });\r\n\r\n          return data;\r\n        }).then((data) => {\r\n          if (collectionName !== null && collectionName !== undefined && collectionName.length > 0) {\r\n            batch(() => {\r\n              let nameWithoutView = collectionName\r\n              nameWithoutView = removeViewName(nameWithoutView)\r\n              dispatch(updateCollection(findCollectionsFromID(getState().collections.get('collections'), viewId).toJS()));\r\n              dispatch(editNameForCollection(viewId, nameWithoutView))\r\n            });\r\n          }\r\n\r\n          return data.refs;\r\n        }).then((data) => {\r\n          const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n          const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n          for (let i = 0; i < data.alternatives.length; i++) {\r\n            dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n          }\r\n\r\n          const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n          batch(() => {\r\n            for (let i = 0; i < newCollections.length; i++) {\r\n              const newCollection = newCollections[i];\r\n              let collectionName = newCollection.collectionName;\r\n\r\n              let viewId = newCollection.viewId;\r\n              let refId = newCollection.refId;\r\n\r\n              let collectionNameView = newCollection.collectionNameView;\r\n              viewType = newCollection.viewType;\r\n              tags = newCollection.tags;\r\n              let altsid = newCollection.altsid;\r\n              let inputs = newCollection.inputs;\r\n              let outputs = newCollection.outputs;\r\n\r\n              // let layout = data.collections[i].layout;\r\n\r\n              const layoutObject = Immutable.fromJS(\r\n                { x: x, y: y, w: w, h: h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n              );\r\n\r\n              dispatch(addLayoutObject(layoutObject));\r\n              dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView, sortCollection));\r\n              dispatch(addLayoutObject(layoutObject));\r\n            }\r\n\r\n            toast.update(toastyVar, {\r\n              progress: 0,\r\n              closeOnClick: true,\r\n              autoClose: 1,\r\n            })\r\n            dispatch(successMessage(toast.success('Alternative(s) cloned in the new collection'), 'alternative(s) cloned in the new collection ' + time));\r\n          });\r\n        }).catch((err) => {\r\n          console.log(err)\r\n          toast.update(toastyVar, {\r\n            progress: 0,\r\n            closeOnClick: true,\r\n            autoClose: 1,\r\n          })\r\n          dispatch(errorMessage(toast.success('Alternative(s) not cloned in the new collection'), 'alternative(s) not cloned in the new collection ' + time));\r\n        })\r\n    } else {\r\n      dispatch(warningMessage(toast.warning('Please select an alternative'), 'please select an alternative' + time));\r\n    }\r\n  };\r\n\r\n/**\r\n * @function cloneCollection\r\n * @description creates a new collection as a clone i.e. with a new refId\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const cloneCollection = (viewIds = null, isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {}, isEditingName = false, sortCollection = [], layoutsForAlts = []) => (dispatch, getState) => {\r\n\r\n  const toastyVar = toast.info(\"Cloning Collection\", {\r\n    toastId: \"cloningCollection\",\r\n    autoClose: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    progress: 0.8,\r\n    position: 'bottom-center',\r\n    rtl: true,\r\n  });\r\n\r\n  return fetch(urls.get('collectionClone'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(viewIds),\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0.5\r\n      })\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n      for (var i = 0; i < data.alternatives.length; i++) {\r\n        dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n      }\r\n\r\n      toast.update(toastyVar, { progress: 0.2 });\r\n\r\n      const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n\r\n      for (let i = 0; i < newCollections.length; i++) {\r\n        const newCollection = newCollections[i];\r\n        let collectionName = newCollection.collectionName;\r\n        let collectionNameView = newCollection.collectionNameView\r\n        let viewId = newCollection.viewId;\r\n        let refId = newCollection.refId;\r\n        viewType = newCollection.viewType;\r\n        tags = newCollection.tags;\r\n        let altsid = newCollection.altsid;\r\n\r\n        let inputs = newCollection.inputs;\r\n        let outputs = newCollection.outputs;\r\n        let dimOrder = findCollectionsFromID(\r\n          getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder')\r\n\r\n        let layout = data.collections[i].layout;\r\n        const layoutObject = Immutable.fromJS(\r\n          { x: layout.x + layout.w, y: layout.y, w: layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n        );\r\n\r\n        batch(() => {\r\n          dispatch(addLayoutObject(layoutObject));\r\n          dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView, sortCollection, layoutsForAlts));\r\n          toast.update(toastyVar, {\r\n            progress: 0,\r\n            closeOnClick: true,\r\n            autoClose: 1,\r\n          })\r\n          dispatch(successMessage(toast.success('Collection cloned'), 'collection cloned' + time));\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      toast.update(toastyVar, {\r\n        progress: 0,\r\n        closeOnClick: true,\r\n        autoClose: 1,\r\n      })\r\n      dispatch(errorMessage(toast.error('Collection is not cloned'), 'collection is not cloned' + time));\r\n    });\r\n};\r\n\r\n/**\r\n * @function deepCloneCollection\r\n * @description creates a new collection as a clone and also clones all of its alternatives\r\n * @memberof collectionActions\r\n * @param {array} viewIds - an array of collection viewIDs\r\n * @param {boolean} isSelected - flag for whether the collection is selected\r\n * @param {boolean} isSinked - flag for whether the collection is sinked\r\n * @param {array} tags - tags that the collection has\r\n * @param {number} viewType - current view type of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const deepCloneCollection = (viewIds = null,\r\n  isSelected = false, isSinked = false, tags = [], viewType = 1, destinations = [], currentMode = {}, isEditingName = false, sortCollection = [], layoutsForAlts = []) => (dispatch, getState) => {\r\n\r\n    const toastyVar = toast.info(\"Deep Cloning Collection\", {\r\n      toastId: \"DeepCloningCollection\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      pauseOnHover: false,\r\n      progress: 0.8,\r\n      position: 'bottom-center',\r\n      rtl: true,\r\n    });\r\n\r\n    return fetch(urls.get('collectionDeepClone'), {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(viewIds),\r\n    }).then(response => response.json())\r\n      .then((data) => {\r\n        toast.update(toastyVar, {\r\n          progress: 0.5\r\n        })\r\n        const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n        const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n        for (let i = 0; i < data.alternatives.length; i++) {\r\n          dispatch(addAlternative(shapeAlternative(data.alternatives[i], inputs, outputs)));\r\n        }\r\n\r\n        const newCollections = data.collections.map(col => shapeCollection(col, Object.keys(inputs), Object.keys(outputs)));\r\n\r\n        for (let i = 0; i < newCollections.length; i++) {\r\n          const newCollection = newCollections[i];\r\n          let collectionName = newCollection.collectionName;\r\n          let collectionNameView = newCollection.collectionNameView;\r\n          let viewId = newCollection.viewId;\r\n          let refId = newCollection.refId;\r\n          viewType = newCollection.viewType;\r\n          tags = newCollection.tags;\r\n          let altsid = newCollection.altsid;\r\n          let inputs = newCollection.inputs;\r\n          let outputs = newCollection.outputs;\r\n          let dimOrder = findCollectionsFromID(getState().collections.get('collections'), viewIds[i]['viewId']).get('dimOrder');\r\n          let layout = data.collections[i].layout;\r\n\r\n          const layoutObject = Immutable.fromJS(\r\n            { x: layout.x + layout.w, y: layout.y, w: layout.w, h: layout.h, i: viewId, minW: 3, minH: 5, moved: false, static: false }\r\n          );\r\n\r\n          batch(() => {\r\n            dispatch(addLayoutObject(layoutObject));\r\n            dispatch(createCollection(altsid, collectionName, refId, tags, viewId, isSelected, isSinked, viewType, dimOrder, inputs, outputs, destinations = [], currentMode = {}, isEditingName, collectionNameView, sortCollection, layoutsForAlts));\r\n            toast.update(toastyVar, {\r\n              progress: 0,\r\n              closeOnClick: true,\r\n              autoClose: 1,\r\n            })\r\n            dispatch(successMessage(toast.success('Collection cloned'), 'collection cloned' + time));\r\n          });\r\n        }\r\n      }).catch((err) => {\r\n        toast.update(toastyVar, {\r\n          progress: 0,\r\n          closeOnClick: true,\r\n          autoClose: 1,\r\n        })\r\n        dispatch(errorMessage(toast.error('Collection is not cloned'), 'collection is not cloned' + time));\r\n      });\r\n  };\r\n\r\n\r\n/**\r\n * @function sinkCollection\r\n * @description sinks a collection\r\n * @memberof collectionActions\r\n * @param {string} collectionId - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const sinkCollection = (collectionId) => (dispatch) => {\r\n  return fetch(urls.get('sinkCollection'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ collectionId }),\r\n  }).then(() => {\r\n    batch(() => {\r\n      dispatch(toggleSink(collectionId));\r\n      dispatch(successMessage(toast.success('Collection sinked'), 'collection sinked ' + time));\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection not sinked'), 'collection not sinked ' + time));\r\n  })\r\n};\r\n\r\n/**\r\n * @function restoreCollection\r\n * @description restores a collection from the sink\r\n * @memberof collectionActions\r\n * @param {string} collectionId - viewID of the collection\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const restoreCollection = (collectionId) => (dispatch) => {\r\n  return fetch(urls.get('sinkCollection'), {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ collectionId }),\r\n  }).then(() => {\r\n    batch(() => {\r\n      dispatch(toggleSink(collectionId));\r\n      dispatch(successMessage(toast.success('Collection restored'), 'collection restored ' + time));\r\n    });\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    dispatch(errorMessage(toast.error('Collection not restored'), 'collection not restored ' + time));\r\n  })\r\n};\r\n\r\n/**\r\n * @function layoutUpdate\r\n * @description updates the layout of the collection and the canvas\r\n * @memberof collectionActions\r\n * @param {object} newLayout - an object of ReactGridLayout layout\r\n * @returns {redux-thunk} middleware - fetch call to update the database and then the redux-store\r\n */\r\nexport const layoutUpdate = (newLayout) => {\r\n  return fetch(urls.get('layout_fetch'), {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      layout: newLayout,\r\n    })\r\n  }).then(response => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {renderIf} from '../util/util';\r\nimport Header from '../components/header';\r\nimport {\r\n  showSinkList,\r\n  hideSinkList,\r\n  addLayoutObject,\r\n  gatherAllCollections,\r\n  toggleSettings,\r\n  hideHeader,\r\n  dehoverAllAlternative,\r\n  toggleSearch,\r\n  showDstarMenu,\r\n  shouldShowCollectionList\r\n} from '../actions/updateActions';\r\nimport {\r\n  restoreCollection,\r\n} from '../actions/collectionActions';\r\nimport {\r\n  toggleHistory\r\n} from '../actions/notificationActions';\r\n\r\n/**\r\n * This component connects the Header component to the state.\r\n * It has all the interactions required by the header component\r\n * The header is displayed when you right click on the design gallery\r\n */\r\nclass HeaderContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component of the header.\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return renderIf(\r\n      this.props.header.get('headerShow'),\r\n      (<Header {...this.props} />),\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * state for the header container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  header: state.header,\r\n  layouts: state.layouts,\r\n  collections: state.collections,\r\n});\r\n\r\n/**\r\n * interactions for header container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  showSinkList: () => {\r\n    dispatch(showSinkList());\r\n  },\r\n\r\n  hideSinkList: () => {\r\n    dispatch(hideSinkList());\r\n  },\r\n\r\n  addLayoutObject: (layout) => {\r\n    dispatch(addLayoutObject(layout));\r\n  },\r\n\r\n  toggleHistory: () => {\r\n    dispatch(toggleHistory());\r\n  },\r\n\r\n  gatherAllCollections: () => {\r\n    dispatch(gatherAllCollections());\r\n  },\r\n\r\n  toggleSettings: () => {\r\n    dispatch(toggleSettings());\r\n  },\r\n\r\n  dehoverAllAlternative: () => {\r\n    dispatch(dehoverAllAlternative());\r\n  },\r\n  \r\n  hideHeader: () => {\r\n    dispatch(hideHeader());\r\n  },\r\n\r\n  toggleSearch: () => {\r\n    dispatch(toggleSearch());\r\n  },\r\n\r\n  showDstarMenu: () => {\r\n    dispatch(showDstarMenu());\r\n  },\r\n\r\n  shouldShowCollectionList: () => {\r\n    dispatch(shouldShowCollectionList());\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to restore collection with ID\r\n   * @param {string} collectionId: the ID of the collection\r\n   */\r\n  restoreCollection: (collectionId) => {\r\n    dispatch(restoreCollection(collectionId));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import NotBar from './NotBar';\r\n\r\nexport default NotBar;\r\n","import React, {PureComponent} from 'react';\r\nimport {MdClose} from 'react-icons/md';\r\nimport styles from './notBar.module.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/**\r\n * @class NotBar\r\n * @extends React.PureComponent\r\n * @description this is the presentational component for NotBar, which handles the toast notifications\r\n */\r\nclass NotBar extends PureComponent {\r\n\r\n  /**\r\n   * @function hideHistoryPane\r\n   * @memberof NotBar\r\n   * @description hides the history pane upon click\r\n   * @param {event} e \r\n   */\r\n  hideHistoryPane = (e) => {\r\n    e.stopPropagation();\r\n    this.props.toggleHistory();\r\n  }\r\n\r\n  /**\r\n  * @returns {ReactPureComponent}\r\n  */\r\n  render() {\r\n  const errors = this.props.notifications.get('errors');\r\n  const warnings = this.props.notifications.get('warnings');\r\n  const successes = this.props.notifications.get('successes');\r\n  \r\n  const errorMessages = errors.map((error) => {\r\n  return (\r\n    <tr key={error.get('id')}>\r\n      <td>\r\n        {error.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n const warningMessages = warnings.map((warning) => {\r\n  return (\r\n    <tr key={warning.get('id')}>\r\n      <td>\r\n        {warning.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n const successMessages = successes.map((success) => {\r\n  return (\r\n    <tr key={success.get('id')}>\r\n      <td>\r\n        {success.get('message')}\r\n      </td>\r\n    </tr>\r\n  );\r\n });\r\n\r\n    return (\r\n      <div>\r\n        <div> {this.props.notifications.get('showHistory') ? \r\n          <div className={styles['history-pane']} onClick={this.hideHistoryPane}>\r\n            <span>\r\n              <MdClose\r\n                  className={styles['closeIcon']}\r\n                  onClick={this.handleCloseClick}\r\n                />\r\n            </span>\r\n            <div className={styles['success-pane']}> \r\n              <span className={styles['title-bar']}>{successes.size + ' messages'}</span><hr className={styles['hr-history-pane']}/> \r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                  {successMessages}\r\n                </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n            <div className={styles['warning-pane']}> \r\n              <span className={styles['title-bar']}>{warnings.size + ' messages'}</span><hr className={styles['hr-history-pane']}/> \r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                  {warningMessages}\r\n                </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n            <div className={styles['error-pane']}> \r\n              <span className={styles['title-bar']}>{errors.size + ' messages'}</span><hr className={styles['hr-history-pane']}/>\r\n              <div>\r\n                <table>\r\n                  <tbody>\r\n                    {errorMessages}\r\n                  </tbody>\r\n                </table>\r\n              </div> \r\n            </div>\r\n          </div> \r\n        : null} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotBar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { renderIf } from '../util/util';\r\nimport NotBar from '../components/notBar';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n  toggleHistory,\r\n} from '../actions/notificationActions';\r\n\r\n\r\nclass NotificationContainer extends Component {\r\n  render() {\r\n    return renderIf(\r\n      true,\r\n      (<NotBar {...this.props} />),\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * state for the header container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications\r\n});\r\n\r\n/**\r\n * interactions for header container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  successMessage: (id, message) => {\r\n    dispatch(successMessage(id, message));\r\n  },\r\n\r\n  warningMessage: (id, message) => {\r\n    dispatch(warningMessage(id, message));\r\n  },\r\n\r\n  errorMessage: (id, message) => {\r\n    dispatch(errorMessage(id, message));\r\n  },\r\n\r\n  toggleHistory: () => {\r\n    dispatch(toggleHistory());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(NotificationContainer);\r\n","import DStarMenu from './DStarMenu';\r\n\r\nexport default DStarMenu;","import React, {PureComponent} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './DStarMenu.module.scss';\r\n\r\n\r\nclass DStarMenu extends PureComponent {\r\n    /**\r\n     * \r\n     * @param {Object} props \r\n     */\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldShowDstarMenu();\r\n    }\r\n\r\n    handleHomePage = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldShowDstarMenu();\r\n        this.props.resetCollectionState();\r\n        this.props.history.push(\"/\"); \r\n    }\r\n\r\n    handleProjectPage = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldShowDstarMenu();\r\n        this.props.resetCollectionState();\r\n        this.props.history.push(\"/projects\"); \r\n\r\n    }\r\n\r\n    render() {\r\n        let username = this.props.user.get(\"username\") ? this.props.user.get(\"username\") : \"No Name\";\r\n        return (\r\n            <Dialog\r\n             open={this.props.showDstarMenu}\r\n             className={styles['panel']}\r\n             onClose={this.handleClose}\r\n            >\r\n                <DialogTitle id=\"search-dialog-title\">\r\n                        {\"DStar Menu\"}\r\n                </DialogTitle>\r\n                <DialogContent className={styles[\"panelContent\"]}>\r\n                    <ul >\r\n                        <li className={styles[\"userItem\"]}>\r\n                        <div className={styles[\"circle\"]}>\r\n                            <p className={styles[\"initials\"]}>{username.charAt(0).toUpperCase()}</p>\r\n                        </div>\r\n                            <p className={styles[\"projectTitle\"]}>{username}</p>\r\n                        </li>\r\n                        <li className={styles[\"projectName\"]}>{this.props.selectedProject.name}</li>\r\n                        <li onClick={this.handleHomePage}className={styles[\"homeLink\"]}>Home Page</li>\r\n                        <li onClick={this.handleProjectPage} className={styles[\"projectLink\"]}>Projects page</li>\r\n                    </ul>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\" >\r\n                    Cancel\r\n                  </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DStarMenu;\r\n\r\n","import CollectionMenu from './CollectionMenu' ;\r\n\r\nexport default CollectionMenu;\r\n\r\n","import React, { PureComponent} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    layoutUpdate,\r\n  } from '../../actions/collectionActions';\r\nimport styles from './collectionMenu.module.scss';\r\n  \r\n\r\nclass CollectionMenu extends PureComponent {\r\n    \r\n    handleClose = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldShowCollectionList();\r\n    }\r\n\r\n    handleGatherAll = (e) => {\r\n        try {\r\n          this.props.gatherAllCollections();\r\n          this.props.shouldShowCollectionList();\r\n        } catch (err) {\r\n          console.log(err)\r\n        } finally {\r\n          layoutUpdate(this.props.layouts.get('gridLayout').toJS());\r\n        }\r\n      }\r\n\r\n    handleSearch = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldShowCollectionList();\r\n        this.props.toggleSearch();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Dialog\r\n                open={this.props.showCollectionList}\r\n                className={styles['panel']}\r\n                onClose={this.handleClose}\r\n            >\r\n                 <DialogTitle id=\"search-dialog-title\">\r\n                        {\"Collection Menu\"}\r\n                </DialogTitle>\r\n                <DialogContent className={styles[\"panelContent\"]}>\r\n                    <ul>\r\n                        <li className={styles[\"reagraneCollection\"]}onClick={this.handleGatherAll}>Rearange Collection</li>\r\n                        <li className={styles[\"reagraneCollection\"]} onClick={this.handleSearch}>Search For Collection</li>\r\n                    </ul>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\" >\r\n                         Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CollectionMenu;","import React, { PureComponent } from 'react';\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport Websocket from 'react-websocket';\r\nimport appConstants from '../../constants/appConstants';\r\nimport Collection from './collection';\r\nimport { urls } from '../../constants/urls';\r\nimport { getLayoutForCollection } from '../../util/layouts';\r\nimport SettingsPanel from '../settingsPanel/SettingsPanel';\r\nimport SearchPanel from '../searchPanel/SearchPanel';\r\nimport HeaderContainer from '../../containers/HeaderContainer';\r\nimport NotificationContainer from '../../containers/NotificationContainer';\r\nimport layoutConstants from '../../constants/layout';\r\nimport MessageBox from './../messageBox/MessageBox';\r\nimport styles from './collections.module.scss';\r\nimport * as d3 from 'd3';\r\nimport {\r\n  findCollectionsFromID,\r\n  findCollectionRelativesFromID,\r\n  getCoordinates,\r\n  calculateWidth,\r\n  getAlternativesInCollection,\r\n  getCollectionsByTag,\r\n  nameExists,\r\n  handleNameCounter\r\n} from '../../util/collections';\r\nimport {\r\n  findAlternativeRelativesFromID,\r\n} from '../../util/alternatives';\r\nimport throttle from 'lodash/throttle';\r\nimport { toast } from 'react-toastify';\r\nimport DStarMenu from '../dStarMenu';\r\nimport CollectionMenu from \"../collectionMenu\";\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @class Collections\r\n * @extends React.PureComponent\r\n * @description this is the presentational component of the all the collections. it renders all the individual collection components.\r\n */\r\nclass Collections extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shouldWarn: false,\r\n      confirmAction: null,\r\n      warningMessage: '',\r\n      matchNumOfColums: 0,\r\n      scrollX: 0,\r\n      editingNames: false,\r\n      editName: '',\r\n      isMultipleInputs: false,\r\n      numberOfAltarnatives: 0,\r\n    }\r\n\r\n    this.selectedAlts = [];\r\n    this.selectedCols = [];\r\n  }\r\n\r\n\r\n  /**\r\n   * @description traverse each collection in collections, wrap it in a *<div>*, then assign it a **key/id** and its associated alternatives\r\n   * @param {object} collections - collection components\r\n   * @param {object} layouts - layout object (ReactGridLayout)\r\n   * @param {object} props - additional props to send to collection\r\n   * @returns {ReactPureComponent} <Collection>\r\n   */\r\n  renderCollection = (collections, layouts, props = {}) => (\r\n    collections.map((collection) => {\r\n      return (\r\n        <div\r\n          key={collection.get('viewId')}\r\n          data-grid={getLayoutForCollection(layouts, collection.get('viewId')).toJS()}>\r\n          <Collection\r\n            key={collection.get('viewId')}\r\n            id={collection.get('refId')}\r\n            layouts={layouts}\r\n            collection={collection}\r\n            altsInCollection={getAlternativesInCollection(collection, this.props.alternatives.get('alternatives'))}\r\n            isDraggable={true}\r\n            isResizable={true}\r\n            layoutForCollection={getLayoutForCollection(layouts, collection.get('viewId'))}\r\n            {...props}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n  )\r\n\r\n  /**\r\n   * updates the collection layouts when triggered\r\n   * @param {object} layout\r\n   */\r\n  onLayoutChange = (layout) => {\r\n    this.props.sendMessage(\r\n      this.refWebSocket, { layout: layout, type: layoutConstants.get(\"LAYOUT_UPDATE_MESSAGE_TYPE\") }\r\n    );\r\n  }\r\n\r\n  sendMessage = (data) => {\r\n    this.props.sendMessage(this.refWebSocket, data);\r\n  }\r\n\r\n  /**\r\n   * @function handleKeyEvents\r\n   * @description responds to key stroke events with associated copy, clone or move functions\r\n   * @memberof Collections\r\n   * @param {event} e - keyboard event\r\n   */\r\n  handleKeyEvents = (e) => {\r\n\r\n    if (!e.shiftKey && e.altKey && e.keyCode === 67) {\r\n      console.log('you have pressed ALT+C ');\r\n      this.props.clearAltsClipboard();\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected')).toJS();\r\n\r\n      if (selectedAlternatives.length > 0) {\r\n        this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => {\r\n            this.props.clipAlternatives(selectedAlternative.get('viewId'), selectedAlternative.get('refId'));\r\n            this.props.successMessage(toast.success('alternative cliped'), 'alternative cliped ' + time);\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (e.shiftKey && e.altKey && e.keyCode === 67) {\r\n      console.log('you have pressed SHIFT+ALT+C ');\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected')).toJS();\r\n\r\n      if (selectedAlternatives.length > 0) {\r\n        const selectedAltsIds = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => selectedAlternative.get('viewId')).toJS();\r\n        localStorage.setItem(appConstants.get('ALTS_IN_CLIPBOARD'), JSON.stringify({ alternatives: selectedAltsIds, projectId: sessionStorage.getItem(appConstants.get('PROJECT_ID')) }));\r\n        this.props.successMessage(toast.success('Selected alternatives globaly cliped'), 'Selected alternatives globaly cliped ' + time);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (e.altKey && e.keyCode === 88) {\r\n      console.log('you have pressed ALT+X ');\r\n      this.props.clearAltsClipboard();\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n\r\n      if (selectedAlternatives.length > 0) {\r\n        this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => {\r\n            this.props.clipAlternatives(selectedAlternative.get('viewId'), selectedAlternative.get('refId'));\r\n            this.props.cutAlternativesFromCollection(selectedAlternative.get('viewId'));\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (!e.shiftKey && e.altKey && e.keyCode === 8) {\r\n      console.log('you have pressed ALT+BACKSPACE/DELETE');\r\n      this.props.clearAltsClipboard();\r\n\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n\r\n      if (selectedAlternatives.size > 0) {\r\n        this.props.removeAlternativesFromCollection(selectedAlternatives);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.altKey && e.keyCode === 8) {\r\n      console.log('you have pressed SHIFT+ALT+BACKSPACE/DELETE');\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n        .filter((alternative) => alternative.get('isSelected'));\r\n\r\n      if (selectedAlternatives.size > 0) {\r\n        this.setState({\r\n          shouldWarn: true,\r\n          warningMessage: 'Do you want to delete all selected alternative views and their underlying alternative?',\r\n          confirmAction: this.handleAlternativeDelete\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.altKey && e.keyCode === 67) {\r\n      console.log('you have pressed SHIFT+ALT+C ');\r\n      const selectedAlternatives = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected')).toJS();\r\n\r\n      if (selectedAlternatives.length > 0) {\r\n        const selectedAltsIds = this.props.alternatives.get('alternatives').filter((alternative) => alternative.get('isSelected'))\r\n          .map((selectedAlternative) => selectedAlternative.get('viewId')).toJS();\r\n        localStorage.setItem(appConstants.get('ALTS_IN_CLIPBOARD'), JSON.stringify({ alternatives: selectedAltsIds, projectId: sessionStorage.getItem(appConstants.get('PROJECT_ID')) }));\r\n        this.props.successMessage(toast.success('Selected alternatives globaly cliped'), 'Selected alternatives globaly cliped ' + time);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select an alternative'), 'please select an alternative ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (!e.shiftKey && e.altKey && e.keyCode === 86) {\r\n      console.log('you have pressed ALT+V');\r\n      const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n      const cols = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).map((col) => col.get('viewId')).toJS();\r\n      this.props.refAlternatives(alts, cols);\r\n    }\r\n\r\n    if (e.shiftKey && e.altKey && e.keyCode === 86) {\r\n      console.log('you have pressed SHIFT+ALT+V');\r\n      var clipBoardData = localStorage.getItem(appConstants.get('ALTS_IN_CLIPBOARD'));\r\n      if (clipBoardData) {\r\n        clipBoardData = JSON.parse(clipBoardData);\r\n        const alts = clipBoardData.alternatives;\r\n        const sourceProjectId = clipBoardData.projectId;\r\n        const cols = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).map((col) => col.get('viewId')).toJS();\r\n        this.props.cloneAlternatives(alts, cols, sourceProjectId);\r\n      }\r\n    }\r\n\r\n    if (e.altKey && e.keyCode === 66) {\r\n      console.log('you have pressed ALT+B');\r\n      const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n      const cols = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).map((col) => col.get('viewId')).toJS();\r\n      this.props.cloneAlternatives(alts, cols);\r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 67) {\r\n      console.log('you have pressed CTRL+C');\r\n      this.props.clearColsClipboard();\r\n      const selectedCollections = this.props.collections.get('collections').filter((collection) => collection.get('isSelected')).toJS();\r\n\r\n      if (selectedCollections.length > 0) {\r\n        this.props.collections.get('collections').filter((collection) => collection.get('isSelected'))\r\n          .map((selectedCollection) => {\r\n            try {\r\n              const alternatives = findCollectionsFromID(this.props.collections.get('collections'), selectedCollection.get('viewId')).get('altsid');\r\n              const layout = getLayoutForCollection(this.props.layouts, selectedCollection.get('viewId'));\r\n              this.props.clipCollection(selectedCollection.get('viewId'), selectedCollection.get('refId'), alternatives, layout);\r\n              this.props.successMessage(toast.success('collection copied'), 'collection copied' + time);\r\n            } catch (e) {\r\n              console.error(e.message);\r\n            }\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 88) {\r\n      console.log('you have pressed CTRL+X');\r\n\r\n      this.props.clearColsClipboard();\r\n      const selectedCollections = this.props.collections.get('collections').filter((collection) => collection.get('isSelected'));\r\n\r\n      if (selectedCollections.size > 0) {\r\n        this.props.collections.get('collections').filter((collection) => collection.get('isSelected'))\r\n          .map((selectedCollection) => {\r\n            try {\r\n              const alternatives = findCollectionsFromID(this.props.collections.get('collections'), selectedCollection.get('viewId')).get('altsid');\r\n\r\n              alternatives.toJS().map((alt) => {\r\n                return this.props.deselectAlternative(alt.viewId);\r\n              });\r\n\r\n              const layout = getLayoutForCollection(this.props.layouts, selectedCollection.get('viewId'));\r\n              this.props.clipCollection(selectedCollection.get('viewId'), selectedCollection.get('refId'), alternatives, layout);\r\n              this.props.deselectCollection(selectedCollection.get('viewId'));\r\n              this.props.deleteCollections(selectedCollection.get('viewId'));\r\n            } catch (e) {\r\n              console.error(e.message);\r\n            }\r\n          });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (!e.shiftKey && e.ctrlKey && e.keyCode === 8) {\r\n      console.log('you have pressed CTRL+BACKSPACE/DELETE');\r\n      this.props.clearColsClipboard();\r\n\r\n      const selectedCollections = this.props.collections.get('collections')\r\n        .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n\r\n      if (selectedCollections.size > 0) {\r\n        selectedCollections.map((collection) => {\r\n          this.props.deleteCollections(collection);\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 8) {\r\n      console.log('you have pressed SHIFT+CTRL+BACKSPACE/DELETE');\r\n      const selectedCollections = this.props.collections.get('collections')\r\n        .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n\r\n      if (selectedCollections.size > 0) {\r\n        this.setState({\r\n          shouldWarn: true,\r\n          warningMessage: 'Do you want to delete all selected collection views and their underlying collection?',\r\n          confirmAction: this.handleCollectionDelete,\r\n        });\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please select a collection'), 'please select a collection ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.ctrlKey && e.keyCode === 86) {\r\n      console.log('you have pressed CTRL+V');\r\n\r\n      if (this.props.collections.get('clippedCollections').size > 0) {\r\n        const copyCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n        this.props.copyWithRefCollection(copyCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n    }\r\n\r\n    if (!e.shiftKey && e.ctrlKey && e.keyCode === 66) {\r\n      console.log('you have pressed CTRL+B');\r\n\r\n      if (this.props.collections.get('clippedCollections').size > 0) {\r\n        const cloneCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n        this.props.cloneCollection(cloneCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 66) {\r\n      console.log('you have pressed SHIFT+CTRL+B');\r\n\r\n      if (this.props.collections.get('clippedCollections').size > 0) {\r\n        const cloneCollections = this.props.collections.get('clippedCollections').map((collection) => {\r\n          return { layout: collection.get('layout').toJS(), viewId: collection.get('viewId') };\r\n        });\r\n\r\n        this.props.deepCloneCollection(cloneCollections.toJS());\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy a collection first'), 'please copy a collection first ' + time);\r\n      }\r\n\r\n    }\r\n\r\n    if (e.shiftKey && e.ctrlKey && e.keyCode === 78) {\r\n      console.log('you have pressed SHIFT+CTRL+N');\r\n\r\n      if (this.props.alternatives.get('clippedAlternatives').size > 0) {\r\n        const alts = this.props.alternatives.get('clippedAlternatives').map((alt) => alt.get('viewId')).toJS();\r\n\r\n        this.props.cloneAltInNewCollection(alts);\r\n      } else {\r\n        this.props.warningMessage(toast.warning('Please copy an alternative first'), 'please copy an alternative first ' + time);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleCollectionDelete = (e) => {\r\n    this.props.clearColsClipboard();\r\n\r\n    const selectedCollections = this.props.collections.get('collections')\r\n      .filter((collection) => collection.get('isSelected')).map((collection) => collection.get('viewId'));\r\n\r\n    const colRelList = [];\r\n\r\n    selectedCollections.map((selectedCol) =>\r\n      findCollectionRelativesFromID(this.props.collections.get('collections'), selectedCol)\r\n        .map((colRel) => colRelList.push(colRel.get('viewId'))));\r\n\r\n    colRelList.concat(selectedCollections.toJS()).map((col) => {\r\n      this.props.deselectCollection(col);\r\n      this.props.deleteCollections(col);\r\n    })\r\n\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: '',\r\n      confirmAction: null,\r\n    })\r\n  }\r\n\r\n  handleAlternativeDelete = (e) => {\r\n    this.props.clearAltsClipboard();\r\n\r\n    const selectedAlternatives = this.props.alternatives.get('alternatives')\r\n      .filter((alternative) => alternative.get('isSelected'))\r\n\r\n    const altRelList = [];\r\n\r\n    selectedAlternatives.map((alt) => altRelList.push(alt));\r\n\r\n    selectedAlternatives.map((selectedAlt) =>\r\n      findAlternativeRelativesFromID(this.props.alternatives.get('alternatives'), selectedAlt.get('viewId'))\r\n        .map((altRel) => altRelList.push(altRel)));\r\n\r\n    this.props.removeAlternativesFromCollection(altRelList);\r\n\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: '',\r\n      confirmAction: null,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param {object} ev: the event object\r\n   */\r\n  handleDoubleClick = (ev) => {\r\n    if (!this.props.header.get('headerShow') && !this.props.settings.get('showSettings') && !this.props.header.get(\"showDStarMenu\") && !this.props.header.get(\"showCollectionList\")) {\r\n      const newPoint = getCoordinates(\r\n        ev.clientX - 12, // some fine tuning\r\n        ev.clientY - 48,\r\n      );\r\n\r\n      this.props.createNewCollection(newPoint.x, newPoint.y);\r\n    }\r\n  }\r\n\r\n  handleContextMenu = (event) => {\r\n    event.preventDefault();\r\n    this.props.showHeader(event.pageX, event.pageY);\r\n  }\r\n\r\n\r\n  getRefId = (filterdCollections) => {\r\n    for (let collection of filterdCollections) {\r\n      return collection.get('refId');\r\n    }\r\n  }\r\n\r\n  hideHeader = () => {\r\n    let filterdCollections = this.props.collections.get('collections').filter((col) => col.get('isEditingName'));\r\n\r\n    if (filterdCollections.size > 0) {\r\n      const refId = this.getRefId(filterdCollections);\r\n      this.props.isEditingCollectionsName(refId);\r\n      this.props.removeFocus();\r\n    }\r\n\r\n    if (this.props.header.get('headerShow')) {\r\n      this.props.hideHeader();\r\n      this.props.hideSinkList();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function loadOptions\r\n   * @description loads the destination options that *should* be available to the collection\r\n   * @memberof Collection\r\n   * @returns {void}\r\n   */\r\n  loadOptions = (viewId) => {\r\n    return this.props.collections.get('collections')\r\n      .filter((collection) => collection.get('viewId') !== viewId)\r\n      .map((collection) => {\r\n        return { 'label': collection.get('collectionName'), collectionName: collection.get('collectionName') + \"-\" + collection.get('collectionNameView'), 'value': collection.get('viewId'), '__isNew__': false };\r\n      });\r\n  }\r\n\r\n  cloneAlternativesFromTaggedCollections = (tagName, collectionId) => {\r\n    const collectionsToCopy = getCollectionsByTag(this.props.collections.get('collections'), tagName);\r\n\r\n    collectionsToCopy.map(collection => {\r\n      const col = findCollectionsFromID(this.props.collections.get('collections'), collection.get('viewId'));\r\n      const alts = col.get('altsid').toJS();\r\n      this.props.cloneAlternatives(alts, [collectionId]);\r\n    });\r\n  }\r\n\r\n  hoverAlternative = (viewId, refId) => {\r\n\r\n    const isSelected = this.props.alternatives.get('alternatives')\r\n      .find(alt => alt.get('viewId') === viewId).get('isSelected');\r\n\r\n    if (isSelected) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHoveredSelected)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHoveredSelected);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHoveredSelected)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHoveredSelected)\r\n\r\n    } else if (!isSelected && this.selectedAlts.includes(refId)) {\r\n\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHoveredRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHoveredRelated);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHoveredRelated)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHoveredRelated)\r\n\r\n    } else {\r\n\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorHovered)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorHovered);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorHovered)\r\n        .style('opacity', 1);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorHovered)\r\n    }\r\n  }\r\n\r\n  dehoverAlternative = (viewId, refId) => {\r\n\r\n    const isSelected = this.props.alternatives.get('alternatives')\r\n      .find(alt => alt.get('viewId') === viewId).get('isSelected');\r\n\r\n    if (isSelected) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorSelectedRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelectedRelated);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorSelectedRelated)\r\n        .style('opacity', 0.7);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorSelectedRelated);\r\n\r\n      this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected'))\r\n        .map(alt => {\r\n          d3.select(\".alt-view-\" + alt.get('viewId'))\r\n            .style('border', '1.5px')\r\n            .style('border-style', 'solid')\r\n            .style('border-color', styles.colorSelected)\r\n            .style('border-radius', '7px')\r\n            .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n\r\n          d3.select(\".pc-view-\" + alt.get('viewId'))\r\n            .style('stroke', styles.colorSelected)\r\n            .style('opacity', 1);\r\n\r\n          d3.select(\".tableList-view-\" + alt.get('viewId'))\r\n            .style('background-color', styles.colorSelected);\r\n        });\r\n    } else if (!isSelected && this.selectedAlts.includes(refId)) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', '1.5px')\r\n        .style('border-style', 'solid')\r\n        .style('border-color', styles.colorSelectedRelated)\r\n        .style('border-radius', '7px')\r\n        .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelectedRelated);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorSelectedRelated)\r\n        .style('opacity', 0.7);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', styles.colorSelectedRelated);\r\n\r\n      this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected'))\r\n        .map(alt => {\r\n          d3.select(\".alt-view-\" + alt.get('viewId'))\r\n            .style('border', '1.5px')\r\n            .style('border-style', 'solid')\r\n            .style('border-color', styles.colorSelected)\r\n            .style('border-radius', '7px')\r\n            .style('-webkit-box-shadow', '0px 0px 5px ' + styles.colorSelected);\r\n\r\n          d3.select(\".pc-view-\" + alt.get('viewId'))\r\n            .style('stroke', styles.colorSelected)\r\n            .style('opacity', 1);\r\n\r\n          d3.select(\".tableList-view-\" + alt.get('viewId'))\r\n            .style('background-color', styles.colorSelected);\r\n        });\r\n    } else if (!isSelected && !this.selectedAlts.includes(refId)) {\r\n      d3.selectAll(\".alt-ref-\" + refId)\r\n        .style('border', null)\r\n        .style('border-style', null)\r\n        .style('border-color', null)\r\n        .style('border-radius', null)\r\n        .style('-webkit-box-shadow', null);\r\n\r\n      d3.selectAll(\".pc-ref-\" + refId)\r\n        .style('stroke', styles.colorUnselected)\r\n        .style('opacity', 0.3);\r\n\r\n      d3.selectAll(\".tableList-ref-\" + refId)\r\n        .style('background-color', '#ffffff');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handleSearch finds collection by name\r\n   * @param {String} searchText\r\n   */\r\n  handleSearch = (searchText) => {\r\n    let trimmedText = searchText.replace(/ /g, '');\r\n    const arrayOfStrings = trimmedText.split(\",\");\r\n    let collection = null;\r\n    let foundAll = true;\r\n    let namesMissMatch = [];\r\n\r\n    for (let i = 0; i < arrayOfStrings.length; i++) {\r\n      collection = this.props.collections.get('collections')\r\n        .find(col => col.get(\"collectionName\").toLowerCase() === arrayOfStrings[i].toLowerCase());\r\n\r\n      if (collection) {\r\n        this.props.selectCollection(collection.get(\"viewId\"));\r\n      } else {\r\n        foundAll = false;\r\n        namesMissMatch.push(arrayOfStrings[i]);\r\n        this.props.searchedCollectionFailed();\r\n      }\r\n    }\r\n\r\n    if (!foundAll) {\r\n      this.props.searchedCollectionFailed(namesMissMatch)\r\n    } else {\r\n      this.props.searchedCollectionSuccess();\r\n      this.props.toggleSearch();\r\n    }\r\n  }\r\n\r\n\r\n  updateLayoutForCollection = (layout) => {\r\n    let layoutId = layout.get('i');\r\n    this.props.updateLayoutForCollection(layoutId);\r\n  }\r\n\r\n\r\n  changeMultipleName = (object) => {\r\n\r\n    let collectionsWithRef = this.props.collections.get('collections').filter(col => col.get(\"refId\") === object.refId);\r\n    if (collectionsWithRef.size > 1) {\r\n      for (let collection of collectionsWithRef) {\r\n        if (collection.get(\"isEditingName\")) {\r\n          let selectedElement = document.getElementById(object.viewId);\r\n\r\n          if (collection.get('viewId') !== object.viewId) {\r\n            let refElement = document.getElementById(collection.get('viewId'));\r\n\r\n            if (refElement !== null) {\r\n              refElement.value = selectedElement.value\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!this.state.isMultipleInputs) {\r\n        this.setState({\r\n          isMultipleInputs: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  checkNameExists = (name, unquieCollections) => {\r\n    let counter = 0;\r\n    let compareNumber = 0;\r\n\r\n    for (let collection of unquieCollections) {\r\n      let collectionSubname = collection.get(\"collectionName\").substring(0, name.length + 1);\r\n      if (collection.get(\"collectionName\") === name) {\r\n        counter++;\r\n      } else if (collectionSubname === name + \":\") {\r\n        counter++;\r\n        let numberAsString = collection.get(\"collectionName\").split(\":\")\r\n        let integer = parseInt(numberAsString[1], 10);\r\n\r\n        if (compareNumber <= integer) {\r\n          compareNumber = integer;\r\n        }\r\n      }\r\n    }\r\n    if (compareNumber > counter) {\r\n      return compareNumber + 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n\r\n\r\n  updateMultipleNames = (object) => {\r\n    let refIdsCollection = this.props.collections.get(\"collections\").filter((col) => col.get('refId') === object.collection.get('refId'))\r\n    if (refIdsCollection !== null && refIdsCollection.size > 1) {\r\n      for (let collection of refIdsCollection) {\r\n        try {\r\n          let newCollection = collection.toJS();\r\n          newCollection.collectionName = object.name + \"-\" + newCollection.collectionNameView;\r\n          this.props.updateCollection(newCollection);\r\n        } catch (err) {\r\n          console.log(err)\r\n        } finally {\r\n          this.props.editNameForCollection(collection.get('viewId'), object.name);\r\n        }\r\n      }\r\n      this.setState({\r\n        isMultipleInputs: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  namesExists = (name, collection) => {\r\n    return nameExists(name, this.props.collections.get(\"collections\"), collection)\r\n  }\r\n\r\n  showWarningMessage = () => {\r\n    this.props.warningMessage(toast.warning('Name already exists'), 'Name already exists' + time);\r\n  }\r\n\r\n  handleNameExists = (collection, name) => {\r\n    this.props.warningMessage(toast.warning(`Collection ${name} already exists`), 'Name already exists' + time);\r\n    let nameCounter = handleNameCounter(this.props.collections.get(\"collections\"), name, collection);\r\n    return nameCounter;\r\n  }\r\n\r\n  nameHasTheSameValue = (refId) => {\r\n    this.props.warningMessage(toast.warning(`Collection name did not change`), 'collection name did not change' + time);\r\n    this.props.isEditingCollectionsName(refId);\r\n  }\r\n\r\n\r\n  updateAspectRatio = (object) => {\r\n\r\n    let copyArray = [...this.props.layouts.get('gridLayout').toJS()]\r\n    let newArray = copyArray.map((layout) => {\r\n      if (layout.i === object.viewId) {\r\n        layout.w = object.width;\r\n        layout.h = object.height;\r\n        layout.isResizable = object.isResizable\r\n        return layout\r\n      }\r\n      return layout\r\n\r\n    })\r\n\r\n    this.props.updateMaxColumns(newArray)\r\n  }\r\n\r\n  updateUnlockAspectRatio = (object) => {\r\n    let copyArray = [...this.props.layouts.get('gridLayout').toJS()];\r\n    let newArray = copyArray.map((layout) => {\r\n      if (layout.i === object.viewId) {\r\n        layout.isResizable = object.isResizable;\r\n        return layout;\r\n      }\r\n      return layout\r\n\r\n    })\r\n\r\n    this.props.updateMaxColumns(newArray)\r\n  }\r\n\r\n  handleDeleteCancel = () => {\r\n    this.setState({\r\n      shouldWarn: false,\r\n      warningMessage: \"\",\r\n      confirmAction: null\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n  * @returns {ReactPureComponent}\r\n  */\r\n  render() {\r\n    const width = calculateWidth(\r\n      this.props.layouts.get('maxColumns'),\r\n      layoutConstants.get('MARGIN'),\r\n      layoutConstants.get('CELL_DIM'),\r\n      layoutConstants.get('BUFFER')\r\n    );\r\n\r\n    const collectionsDivStyle = {\r\n      width: window.innerWidth + 'px',\r\n      minWidth: '100%',\r\n      height: window.innerHeight + 'px',\r\n      minHeight: '100%',\r\n    }\r\n\r\n    this.selectedAlts = [...new Set(this.props.alternatives.get('alternatives').filter(alt => alt.get('isSelected')).map(alt => alt.get('refId')).toJS())];\r\n    this.selectedCols = [...new Set(this.props.collections.get('collections').filter(col => col.get('isSelected')).map(col => col.get('refId')).toJS())];\r\n    return (\r\n      <div\r\n        ref={this.mainRef}\r\n        onKeyDown={this.handleKeyEvents}\r\n        onDoubleClick={this.handleDoubleClick}\r\n        tabIndex=\"0\"\r\n        style={collectionsDivStyle}\r\n        onContextMenu={this.handleContextMenu}\r\n        onClick={this.hideHeader}\r\n        className={styles[\"container\"]}\r\n      >\r\n        <HeaderContainer\r\n          deselectAllCollections={this.props.deselectAllCollections}\r\n          deselectAllAlternatives={this.props.deselectAllAlternatives}\r\n\r\n        />\r\n        <NotificationContainer />\r\n        <ReactGridLayout\r\n          className={styles[\"gridLayout\"]}\r\n          cols={this.props.layouts.get('maxColumns')}\r\n          rowHeight={60}\r\n          layout={this.props.layouts.get('gridLayout').toJS()}\r\n          width={width}\r\n          isDraggable\r\n          isResizable\r\n          onLayoutChange={this.onLayoutChange}\r\n          onResizeStop={\r\n            throttle(\r\n              this.props.updateMaxColumns.bind(\r\n                this.props.layouts.get('gridLayout')\r\n              ))\r\n          }\r\n          onDragStop={\r\n            throttle(this.props.updateMaxColumns.bind(\r\n              this.props.layouts.get('gridLayout')\r\n            ))\r\n          }\r\n          compactType={this.props.settings.get('collectionCompactionType') !== 'none' ? this.props.settings.get('collectionCompactionType') : null}\r\n          preventCollision={this.props.settings.get('preventCollision')}\r\n          draggableHandle=\".drag-handle\"\r\n        >\r\n          {this.renderCollection(\r\n            this.props.collections.get('collections').filter((collection) => (collection.get('isSinked') === false)),\r\n            this.props.layouts,\r\n            {\r\n              hoverAlternative: this.hoverAlternative,\r\n              dehoverAlternative: this.dehoverAlternative,\r\n              sendMessage: this.sendMessage,\r\n              loadOptions: this.loadOptions,\r\n              isMultipleInputs: this.state.isMultipleInputs,\r\n              cloneAlternativesFromTaggedCollections: this.cloneAlternativesFromTaggedCollections,\r\n              updateLayoutForCollection: this.updateLayoutForCollection,\r\n              updateAspectRatio: this.updateAspectRatio.bind(this),\r\n              updateUnlockAspectRatio: this.updateUnlockAspectRatio.bind(this),\r\n              updateMultipleNames: this.updateMultipleNames.bind(this),\r\n              createNewCollection: this.props.createNewCollection,\r\n              deleteCollections: this.props.deleteCollections,\r\n              selectCollection: this.props.selectCollection,\r\n              deselectCollection: this.props.deselectCollection,\r\n              selectAlternative: this.props.selectAlternative,\r\n              deselectAlternative: this.props.deselectAlternative,\r\n              deselectAllAlternatives: this.props.deselectAllAlternatives,\r\n              hoverAlternativeSpecial: this.props.hoverAlternativeSpecial,\r\n              cloneAlternatives: this.props.cloneAlternatives,\r\n              toggleSink: this.props.sinkCollection,\r\n              toggleViewMode: this.props.toggleViewMode,\r\n              toggleAltView: this.props.toggleAltView,\r\n              removeAlternativesFromCollection: this.props.removeAlternativesFromCollection,\r\n              editNameForCollection: this.props.editNameForCollection,\r\n              isEditingCollectionsName: this.props.isEditingCollectionsName,\r\n              nameExists: this.namesExists.bind(this),\r\n              handleNameExists: this.handleNameExists.bind(this),\r\n              restoreAlternative: this.props.restoreAlternative,\r\n              updateCollection: this.props.updateCollection,\r\n              saveLayoutObject: this.props.saveLayoutObject,\r\n              setCollectionDestination: this.props.setCollectionDestination,\r\n              setCollectionMode: this.props.setCollectionMode,\r\n              updateCollectionTags: this.props.updateCollectionTags,\r\n              alternatives: this.props.alternatives,\r\n              layouts: this.props.layouts,\r\n              selectedAlts: this.selectedAlts,\r\n              selectedCols: this.selectedCols,\r\n              changeMultipleName: this.changeMultipleName.bind(this),\r\n              nameHasTheSameValue: this.nameHasTheSameValue.bind(this),\r\n              removeFocus: this.props.removeFocus,\r\n              shouldRemoveFocus: this.props.collections.get('shouldRemoveFocus'),\r\n              setSortParams: this.props.setSortParams,\r\n              updateAlternativeLayoutForCollection: this.props.updateAlternativeLayoutForCollection\r\n            }\r\n          )}\r\n        </ReactGridLayout>\r\n        <Websocket\r\n          url={urls.get('websocketURL') + \"?projectId=\" + sessionStorage.getItem(appConstants.get('PROJECT_ID')) + \"&userId=\" + localStorage.getItem(appConstants.get('USER_ID'))}\r\n          onMessage={this.props.onMessageRecieved}\r\n          onOpen={this.props.openWebSocketConnection}\r\n          ref={Websocket => this.refWebSocket = Websocket}\r\n        />\r\n        {this.props.settings.get('showSettings') ?\r\n          <SettingsPanel\r\n            settings={this.props.settings}\r\n            toggleSettings={this.props.toggleSettings}\r\n            setCollisionPrevention={this.props.setCollisionPrevention}\r\n            setAlternativeSize={this.props.setAlternativeSize}\r\n            setCompactionType={this.props.setCompactionType}\r\n            projects={this.props.projects.get('projects')}\r\n            message=\"Please select a project: \"\r\n            selectProject={this.props.selectProject}\r\n            createProject={this.props.createProject}\r\n            user={this.props.user.get(\"user\")}\r\n            selectedProject={this.props.projects.get(\"selectedProject\")}\r\n          />\r\n          : null}\r\n        {this.props.search.get('showSearch') ?\r\n          <SearchPanel\r\n            search={this.props.search}\r\n            toggleSearch={this.props.toggleSearch}\r\n            handleSearch={this.handleSearch}\r\n            searchedCollectionFailed={this.props.searchedCollectionFailed}\r\n            searchedCollectionSuccess={this.props.searchedCollectionSuccess}\r\n            emptyMissMatchArray={this.props.emptyMissMatchArray}\r\n          />\r\n          : null\r\n        }\r\n\r\n        {\r\n          this.props.header.get(\"showDStarMenu\") ?\r\n            <DStarMenu\r\n              showDstarMenu={this.props.header.get(\"showDStarMenu\")}\r\n              shouldShowDstarMenu={this.props.showDstarMenu}\r\n              selectedProject={this.props.projects.get(\"selectedProject\")}\r\n              user={this.props.user.get(\"user\")}\r\n              history={this.props.history}\r\n              resetCollectionState={this.props.resetCollectionState}\r\n            />\r\n            :\r\n            null\r\n        }\r\n\r\n        {\r\n          this.props.header.get(\"showCollectionList\") ?\r\n            <CollectionMenu\r\n              showCollectionList={this.props.header.get(\"showCollectionList\")}\r\n              shouldShowCollectionList={this.props.shouldShowCollectionList}\r\n              gatherAllCollections={this.props.gatherAllCollections}\r\n              layouts={this.props.layouts}\r\n              toggleSearch={this.props.toggleSearch}\r\n            />\r\n            :\r\n            null\r\n        }\r\n\r\n        {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Collections;\r\n","import Collections from './Collections';\r\n\r\nexport default Collections;\r\n","/**\r\n * Action dispatchers for operations using websockets\r\n * @namespace websocketActions\r\n */\r\n\r\nimport appConstants from '../constants/appConstants';\r\nimport Immutable from 'immutable';\r\nimport {\r\n  addAlternative,\r\n  createCollection,\r\n  collectionsFetch,\r\n  addLayoutObject,\r\n  addAlternativeToCollection,\r\n  valueBandsFetch,\r\n  keySetsFetch,\r\n  updateAlternative,\r\n  setLoadingState,\r\n  selectAlternative,\r\n} from './updateActions';\r\nimport {\r\n  hoverAlternativeSpecial,\r\n} from './alternativeActions';\r\nimport {\r\n  findCollectionsFromName,\r\n} from '../util/collections';\r\nimport {\r\n  findCollectionsFromID,\r\n  fetchCollectionsNotID,\r\n} from '../util/collections';\r\nimport {\r\n  removeFieldFromDatum,\r\n  shapeAlternative,\r\n  shapeCollection,\r\n} from '../util/util';\r\nimport {batch} from 'react-redux';\r\n\r\n// TODO: add notifications/toasts below\r\n\r\n/**\r\n * @function openWebSocketConnection\r\n * @description opens websocket connection\r\n * @memberof websocketActions\r\n * @returns {action}\r\n */\r\nexport const openWebSocketConnection = () => ({\r\n  type: appConstants.get('OPEN_WEB_SOCKET_CONNECTION'),\r\n});\r\n\r\n/**\r\n * @function closeWebSocketConnection\r\n * @description closes websocket connection\r\n * @memberof websocketActions\r\n * @returns {action}\r\n */\r\nexport const closeWebSocketConnection = () => ({\r\n  type: appConstants.get('OPEN_WEB_SOCKET_CONNECTION'),\r\n});\r\n\r\n/**\r\n * @function setNewWebsocket\r\n * @description dispatches an action that to set a new Websocket connection\r\n * @memberof websocketActions\r\n * @param {object} payload\r\n * @returns {action}\r\n */\r\nexport const setNewWebsocket = (payload) => ({\r\n  type: appConstants.get('SET_NEW_WEBSOCKET'),\r\n  payload,\r\n});\r\n\r\n/**\r\n * @function sendMessage\r\n * @description  sends a message through websocket\r\n * @memberof websocketActions\r\n * @param {object} websocket\r\n * @param {object} message\r\n * @returns {action}\r\n */\r\nexport const sendMessage = (websocket, message) => () => {\r\n  if (websocket) {\r\n    if (websocket.state.ws.readyState === 1) {\r\n      const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n      const projectId = sessionStorage.getItem(appConstants.get('PROJECT_ID'));\r\n      message.projectId = projectId;\r\n      message.userId = userId;\r\n      const data = JSON.stringify(message);\r\n      websocket.sendMessage(data);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @function onMessageRecieved\r\n * @description  responds to message received with redux actions\r\n * @memberof websocketActions\r\n * @param {object} response\r\n * @returns {action}\r\n */\r\nexport const onMessageRecieved = (response) => (dispatch) => {\r\n  const {type, data} = JSON.parse(response);\r\n  switch (type) {\r\n  case 'NEW':\r\n    batch(() => {\r\n      dispatch(addAlternative(shapeAlternative(data.alt, data.alt.params, data.alt.outputs)));\r\n      dispatch(hoverAlternativeSpecial(data.alt.viewId));\r\n      dispatch(manageNewAlternative(data.alt, data.collection, data.valueBands, data.keySets));\r\n      dispatch(addRefs(data.refResult));\r\n    });\r\n    break;\r\n  case 'EDIT':\r\n    dispatch(editNewAlternative(data.alts, data.valueBands));\r\n    break;\r\n  case 'NEWALT':\r\n    dispatch(addNewAlternative(data.alt, data.collection));\r\n    break;\r\n  default:\r\n    break;\r\n  }\r\n};\r\n\r\n\r\nexport const manageNewAlternative = (alts, newCollection, valueBands, keySets) => (dispatch, getState) => {\r\n  const coll = getState().collections.get('collections');\r\n  const result = findCollectionsFromID(coll, alts.collectionViewId);\r\n\r\n  batch(() => {\r\n    dispatch(valueBandsFetch(valueBands));\r\n    dispatch(keySetsFetch(keySets));\r\n  });\r\n\r\n  if (!result) {\r\n\r\n    const inputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['params'] : {};\r\n    const outputs = getState().alternatives.get('alternatives').size > 0 ? getState().alternatives.get('alternatives').toJS()[0]['outputs'] : {};\r\n\r\n    newCollection = shapeCollection(newCollection, Object.keys(inputs), Object.keys(outputs))\r\n\r\n    const collectionViewId = newCollection.viewId;\r\n    \r\n    const layoutObject = Immutable.fromJS(\r\n      {x:2, y:2, w:3, h:5 , i: collectionViewId, minW: 3, minH: 5, moved: false, static: false}\r\n    );\r\n\r\n    batch(() => {\r\n      dispatch(addLayoutObject(layoutObject));\r\n      dispatch(createCollection([alts._id], newCollection.collectionName, newCollection.refId,\r\n        newCollection.tags, newCollection.viewId,\r\n        false, false, false, newCollection.viewType, getState().scales.get('keySets'), newCollection.inputs, newCollection.outputs, [], {}));\r\n    });\r\n\r\n  } else {\r\n    const otherCollections = fetchCollectionsNotID(coll, result.get(\"viewId\"));\r\n    const updatedCollection = result.update('altsid', (altsid) => altsid.push(alts._id));\r\n\r\n    const updatedCollections = otherCollections.push(updatedCollection);\r\n    dispatch(collectionsFetch(updatedCollections));    \r\n  }\r\n\r\n};\r\n\r\nexport const addRefs = (data) => (dispatch, getState) => {\r\n\r\n  const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n  const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n  \r\n  data.forEach((datum) => {\r\n    datum.alts.map((alternative) => {\r\n      dispatch(addAlternative(shapeAlternative(alternative, inputs, outputs)))\r\n    });\r\n    \r\n    datum.alts.map((alt) => {\r\n      batch(() => {\r\n        dispatch(addAlternativeToCollection(datum.collectionId, alt.viewId, Object.keys(inputs), Object.keys(outputs), datum.collection.keySets));\r\n        dispatch(selectAlternative(alt.viewId));\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport const editNewAlternative = (alts, valueBands) => (dispatch, getState) => {\r\n\r\n  const collections = getState().collections.get('collections')\r\n  const keySets = getState().scales.get('keySets').toJS();\r\n  \r\n  const inputs = getState().alternatives.get('alternatives').toJS()[0]['params'];\r\n  const outputs = getState().alternatives.get('alternatives').toJS()[0]['outputs'];\r\n\r\n    alts.map((alt) => {\r\n      const newAlternative = shapeAlternative(alt, inputs, outputs);\r\n\r\n      const fromCollection = findCollectionsFromName(collections, newAlternative.collectionName);\r\n      const dimOrder = fromCollection.get('dimOrder').toJS();\r\n\r\n      let parallelData = newAlternative.parallelData;\r\n\r\n      let difference = keySets.filter((key) => !dimOrder.includes(key));\r\n\r\n      difference.forEach((dim) => parallelData = removeFieldFromDatum(parallelData, dim));\r\n      \r\n      newAlternative.parallelData = parallelData;\r\n\r\n      dispatch(updateAlternative(newAlternative.viewId, newAlternative));\r\n      dispatch(setLoadingState(newAlternative.viewId, false));\r\n    })\r\n\r\n    dispatch(valueBandsFetch(valueBands));    \r\n};\r\n\r\n/**\r\n * @function addNewAlternative\r\n * @description  dispatches an action to add a new alternative\r\n * @memberof websocketActions\r\n * @param {array} alts\r\n * @param {array} collections\r\n * @returns {action}\r\n */\r\nexport const addNewAlternative = (alts, collections) => (dispatch) => {\r\n  batch(() => {\r\n    dispatch(editNewAlternative(alts));\r\n    dispatch(manageNewAlternative(alts, collections));\r\n  });\r\n};\r\n","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace fetchActions\r\n */\r\n\r\nimport { urls } from '../constants/urls';\r\nimport {\r\n  alternativesFetch,\r\n  collectionsFetch,\r\n  layoutFetch,\r\n  projectFetch,\r\n  addLayoutObject,\r\n  keySetsFetch,\r\n  valueBandsFetch,\r\n  settingsFetch,\r\n  projectLoaded,\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {\r\n  filterCollectionsFromLayouts,\r\n  correctAltIDsInCollections,\r\n  addCollectionNameView,\r\n  shouldAddNameView,\r\n} from '../util/collections';\r\nimport {\r\n  shapeAlternative,\r\n  shapeCollection\r\n} from '../util/util';\r\nimport {\r\n  getAlternativeIDs,\r\n} from '../util/alternatives';\r\nimport Immutable from 'immutable';\r\nimport { toast } from 'react-toastify';\r\nimport { batch } from 'react-redux';\r\nimport { updateCollection } from './collectionActions';\r\nimport appConstants from '../constants/appConstants';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n\r\n/**\r\n * @function getUserProjects\r\n * @description fetches users project from database\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const getUserProjects = () => (dispatch) => {\r\n  fetch(urls.get('project_fetch'))\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        batch(() => {\r\n          dispatch(projectFetch(response));\r\n        });\r\n      } else {\r\n        dispatch(projectFetch(response));\r\n      }\r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Layouts not fetched'), 'layouts not fetched ' + time));\r\n    })\r\n};\r\n\r\n\r\n/**\r\n * @function fetchProject\r\n * @description fetch layout information from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchProject = () => (dispatch) => {\r\n  fetch(urls.get('project_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        const projectId = sessionStorage.getItem(appConstants.get(\"PROJECT_ID\"));\r\n        const projectIndex = response.projects.findIndex((proj) => proj.id === projectId);\r\n        batch(() => {\r\n          dispatch(projectFetch(response));\r\n          if (projectIndex > -1) {\r\n            dispatch(projectLoaded(response.projects[projectIndex]));\r\n          }\r\n\r\n          dispatch(fetchLayout());\r\n        });\r\n      } else {\r\n        dispatch(projectFetch(response));\r\n      }\r\n\r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Projects not fetched'), 'Projects not fetched ' + time));\r\n    })\r\n};\r\n\r\n/**\r\n * @function fetchLayout\r\n * @description fetch layout information from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchLayout = () => (dispatch) => (\r\n  fetch(urls.get('layout_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      const layouts = response[0]['layout'];\r\n      batch(() => {\r\n        dispatch(layoutFetch(layouts));\r\n        dispatch(fetchAlternatives());\r\n        dispatch(successMessage(toast.success('Layouts fetched'), 'layouts fetched ' + time));\r\n      });\r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Layouts not fetched'), 'layouts not fetched ' + time));\r\n    })\r\n);\r\n\r\n/**\r\n * @function fetchSettings\r\n * @description fetch settings for layout\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchSettings = () => (dispatch) => (\r\n  fetch(urls.get('settings_fetch'))\r\n    .then(response => response.json())\r\n    .then((response) => {\r\n      const settings = {\r\n        alternativeImageSize: response.length !== 0 && response[0].hasOwnProperty('alternativeImageSize') ? response[0].alternativeImageSize : 180,\r\n        collectionCompactionType: response.length !== 0 && response[0].hasOwnProperty('collectionCompactionType') ? response[0].collectionCompactionType : 'none',\r\n        preventCollision: response.length !== 0 && response[0].hasOwnProperty('preventCollision') ? response[0].preventCollision : true,\r\n      };\r\n\r\n      batch(() => {\r\n        dispatch(settingsFetch(settings));\r\n        dispatch(fetchAlternatives());\r\n      });\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n);\r\n\r\n/**\r\n * @function fetchAlternatives\r\n * @description fetch the alternative data from the database and update the store with the results\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchAlternatives = () => (dispatch) => (\r\n  fetch(urls.get('alternatives_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      // TODO: ensure no null data gets in\r\n      const alternatives = response.alternatives.filter(alt => alt !== null).map(alt => shapeAlternative(alt));\r\n      batch(() => {\r\n        dispatch(alternativesFetch(alternatives));\r\n        dispatch(keySetsFetch(response.keySets));\r\n        dispatch(valueBandsFetch(response.valueBands));\r\n        dispatch(fetchCollections());\r\n        dispatch(successMessage(toast.success('Alternatives fetched'), 'alternatives fetched ' + time));\r\n      });\r\n\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('Alternatives not fetched'), 'alternatives not fetched ' + time));\r\n    })\r\n);\r\n\r\n\r\n/**\r\n * @function fetchCollections\r\n * @description fetch the collection data and update the store with the results. The collections present in the layout are put filtered and sent, the other collections are put into the sink.\r\n * @memberof fetchActions\r\n * @returns {Promise}\r\n */\r\nexport const fetchCollections = () => (dispatch, getState) => (\r\n  fetch(urls.get('collections_fetch'))\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      const inputs = getState().alternatives.get('alternatives').size > 0 ? Object.keys(getState().alternatives.get('alternatives').toJS()[0]['params']) : [];\r\n      const outputs = getState().alternatives.get('alternatives').size > 0 ? Object.keys(getState().alternatives.get('alternatives').toJS()[0]['outputs']) : [];\r\n      const layouts = getState().layouts;\r\n      const alternatives = getState().alternatives;\r\n      const altIDs = getAlternativeIDs(alternatives.get('alternatives'));\r\n      const correctedCollections = correctAltIDsInCollections(response, altIDs);\r\n      const collectionsWithoutLayout = filterCollectionsFromLayouts(correctedCollections, layouts);\r\n\r\n      for (let i = 0; i < collectionsWithoutLayout.length; i++) {\r\n\r\n        const col = collectionsWithoutLayout[i];\r\n\r\n        if (col) {\r\n          const layoutObject = Immutable.fromJS({ x: 2, y: 2, w: 3, h: 5, i: col.viewId, minW: 3, minH: 5, moved: false, static: false });\r\n\r\n          dispatch(addLayoutObject(layoutObject));\r\n        }\r\n      }\r\n      let shouldAddName = shouldAddNameView(correctedCollections)\r\n      if (shouldAddName) {\r\n        let addViewName = addCollectionNameView(correctedCollections)\r\n        addViewName.map((col => dispatch(updateCollection(col))))\r\n      }\r\n      let modifiedCollections = correctedCollections.map(col => shapeCollection(col, inputs, outputs))\r\n\r\n      batch(() => {\r\n        dispatch(collectionsFetch(modifiedCollections));\r\n        dispatch(successMessage(toast.success('Collections fetched'), 'collections fetched ' + time));\r\n      });\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      dispatch(errorMessage(toast.error('Collections not fetched'), 'collections not fetched ' + time));\r\n    })\r\n);\r\n","export const doesProjectExists = (projects, id) => {\r\n    let exists = false;\r\n    let filterProject  = projects.filter((pro) => pro.get(\"id\") === id);\r\n    if(filterProject.size > 0){\r\n        exists = true\r\n    } else {\r\n        exists = false\r\n    }\r\n    return exists;    \r\n}\r\n\r\nexport const getProjectByName = (name, projects) => {\r\n    let filterProject = projects.filter((project) => project.name === name)\r\n    return filterProject;\r\n}","/**\r\n * Action dispatchers for operations on collection objects\r\n * @namespace fetchActions\r\n */\r\n\r\nimport {urls} from '../constants/urls';\r\nimport appConstants from '../constants/appConstants';\r\nimport {\r\n  projectLoaded,\r\n  fetchingProject,\r\n  projectFetch,\r\n  updateDeletedProject,\r\n  updateProjectDetails,\r\n  edittingProject,\r\n} from './updateActions';\r\nimport {\r\n  successMessage,\r\n  errorMessage,\r\n} from './notificationActions';\r\nimport {fetchLayout} from './fetchActions'\r\nimport {toast} from 'react-toastify';\r\nimport {batch} from 'react-redux';\r\nimport {\r\n  isCreatingProject\r\n} from \"../actions/updateActions\";\r\nimport {\r\n  doesProjectExists,\r\n  getProjectByName,\r\n} from '../util/projects';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function selectProject\r\n * @description select a project\r\n * @memberof projectActions\r\n * @returns {Promise}\r\n */\r\nexport const selectProject = (project) => (dispatch) => {\r\n  dispatch(fetchingProject());\r\n  fetch(urls.get('project_select'), {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id: project.id\r\n    })\r\n  }).then((response)=> response.json())\r\n  .then((response) => {\r\n    if (response.success) {\r\n      if (response.currentProject && response.currentProject.id) {\r\n        sessionStorage.setItem(appConstants.get(\"PROJECT_ID\"),response.currentProject.id);\r\n      } \r\n      batch(() => {\r\n        dispatch(projectLoaded(project));\r\n        dispatch(fetchLayout()); \r\n      });   \r\n    }      \r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Project not selected'), 'project not fetched ' + time));\r\n  })\r\n};\r\n\r\n/**\r\n * @function createProject\r\n * @description creates a project\r\n * @memberof projectActions\r\n * @returns {Promise}\r\n */\r\nexport const createProject = (name,description,rhinoFile,grasshopperFile) => (dispatch, getState) => {\r\n  if(!doesProjectExists(getState().projects.get(\"projects\"), name)){\r\n    dispatch(fetchingProject());\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\",name);\r\n    formData.append(\"description\",description);\r\n    formData.append('rhinoFile', rhinoFile);\r\n    formData.append('grasshopperFile', grasshopperFile);\r\n\r\n    fetch(urls.get('project_create'), {\r\n      method: 'POST',\r\n      body: formData,\r\n    }).then((response)=> response.json())\r\n    .then((response) => {\r\n      if (response.db_loaded) {\r\n        if (response.currentProject && response.currentProject.id) {\r\n          sessionStorage.setItem(appConstants.get(\"PROJECT_ID\"), response.currentProject.id);\r\n        }      \r\n        batch(() => { \r\n          dispatch(isCreatingProject());\r\n          const currentProject =  getProjectByName(name, response.projects)\r\n          dispatch(projectLoaded(currentProject[0]));\r\n          dispatch(projectFetch(response));\r\n          dispatch(fetchLayout()); \r\n          dispatch(successMessage(toast.success(\"Created project successfully\"), \"Created project successfully \" + time));\r\n        });   \r\n      }      \r\n    }).catch((err) => {\r\n      dispatch(errorMessage(toast.error('Could not create project'), 'Could not create project ' + time));\r\n    })\r\n  }else{\r\n    // dispatch(isCreatingProject());\r\n    dispatch(errorMessage(toast.error('Project already exists'), 'Project already exists ' + time));\r\n  }\r\n \r\n};\r\n\r\n/**\r\n * @function deleteProject\r\n * @description deleted project\r\n * @param {String} projectId\r\n * @returns {Promise}\r\n */\r\nexport const deleteProject = (projectId) => dispatch => {\r\n  return fetch(urls.get(\"delete_project\"), {\r\n    method: \"delete\",\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify([projectId]),\r\n  }) .then((response) => response.json())\r\n  .then((response) => {\r\n    if(response){\r\n      // const projects = getState().collections.get('collections');\r\n      batch(() => {\r\n        dispatch(updateDeletedProject(projectId));\r\n        dispatch(successMessage(toast.success(\"Deleted project successfully\"), \"Deleted project successfully \" + time));\r\n      }) \r\n    }\r\n  }).catch((err) => {\r\n    dispatch(errorMessage(toast.error('Could not delete project'), 'Could not delete project ' + time));\r\n  })\r\n\r\n}\r\n\r\n/**\r\n * @function editProject\r\n * @description edits project\r\n * @param {Object} editElements \r\n * @returns {Promise}\r\n */\r\nexport const editProject = (editElements) => (dispatch, getState) => {\r\n  dispatch(edittingProject());\r\n  if(!doesProjectExists(getState().projects.get(\"projects\"), editElements.id)){\r\n    return fetch(urls.get('update_project'), {\r\n      method: \"PUT\",\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify([editElements])\r\n    }).then((response) => response.json())\r\n    .then((response) => {\r\n      if(response){\r\n        batch(() => {\r\n          dispatch(updateProjectDetails(editElements));\r\n          dispatch(successMessage(toast.success(\"Updated project successfully\"), \"Updated project successfully \" + time));\r\n        })\r\n      }\r\n    }).catch((err)=> {\r\n      dispatch(errorMessage(toast.error('Could not update project'), 'Could not update project ' + time));\r\n    })\r\n  }else{\r\n    dispatch(errorMessage(toast.error('Project already exists'), 'Project already exists ' + time));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { urls } from '../constants/urls';\r\nimport appConstants from '../constants/appConstants';\r\nimport {\r\n    userFetch,\r\n    userFetchFailed,\r\n    logoutUser,\r\n} from \"./updateActions\";\r\nimport {\r\n    errorMessage,\r\n} from './notificationActions';\r\nimport { toast } from 'react-toastify';\r\nimport { batch } from 'react-redux';\r\n\r\nconst time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n\r\n/**\r\n * @function register\r\n * @description register a new user\r\n * @memberof userActions\r\n * @returns {Promise}\r\n */\r\nexport const register = (username, password, passwordConfirmation, history) => (dispatch) => {\r\n    fetch(urls.get('user_register'), {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    }).then((response) => response.json())\r\n        .then((response) => {\r\n            if (response.success) {\r\n                if (response.user && response.user.id) {\r\n                    localStorage.setItem(appConstants.get(\"USER_ID\"), response.user.id);\r\n                    batch(() => {\r\n                        dispatch(userFetch(response.user));\r\n                        history.push(\"/projects\");\r\n                    });\r\n                }\r\n            } else {\r\n                batch(() => {\r\n                    dispatch(userFetchFailed());\r\n                    dispatch(errorMessage(toast.error('Register failed'), response.message + \" \" + time));\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            batch(() => {\r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Login failed'), 'Login was not successful ' + time));\r\n            });\r\n        })\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} username \r\n * @param {String} password\r\n * @param {history} history\r\n * @deprecated login user with user name and password \r\n * @memberof userAction\r\n * @returns {Promise}\r\n */\r\nexport const login = (username, password, history) => (dispatch) => {\r\n    fetch(urls.get('user_login'), {\r\n        method: \"POST\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    }).then((response) => response.json())\r\n        .then((response) => {\r\n            if (response.success) {\r\n                if (response.user && response.user.id) {\r\n                    localStorage.setItem(appConstants.get(\"USER_ID\"), response.user.id);\r\n                    batch(() => {\r\n                        dispatch(userFetch(response.user));\r\n                        history.push(\"/projects\");\r\n                    });\r\n                }\r\n            } else {\r\n                batch(() => {\r\n                    dispatch(userFetchFailed());\r\n                    dispatch(errorMessage(toast.error('Login failed'), response.message + \" \" + time));\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            batch(() => {\r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Login failed'), 'Login was not successfull ' + time));\r\n            });\r\n        })\r\n}\r\n\r\n\r\n/**\r\n * @function logout\r\n * @description logout of the account\r\n * @memberof userActions\r\n * \r\n */\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(appConstants.get(\"USER_ID\"));\r\n    sessionStorage.removeItem(appConstants.get(\"PROJECT_ID\"));\r\n    dispatch(logoutUser());\r\n}\r\n\r\n/**\r\n * @function fetchUser\r\n * @description fetch user information\r\n * @memberof userActions \r\n * @returns {Promise}\r\n */\r\nexport const fetchUser = () => (dispatch) => {\r\n    fetch(urls.get('user_fetch'))\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            if (response.success) {\r\n                if (response.user && response.user.id) {\r\n                    localStorage.setItem(appConstants.get(\"USER_ID\"), response.user.id);\r\n                    batch(() => {\r\n                        dispatch(userFetch(response.user));\r\n                    });\r\n                }\r\n            } else {\r\n                batch(() => {\r\n                    dispatch(userFetchFailed());\r\n                    dispatch(errorMessage(toast.error('Login failed'), response.message + \" \" + time));\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            batch(() => {\r\n                dispatch(userFetchFailed());\r\n                dispatch(errorMessage(toast.error('Login failed'), 'Login was not successfull ' + time));\r\n            });\r\n        })\r\n}\r\n\r\n\r\n\r\n","import {urls} from '../constants/urls';\r\nimport {\r\n    setCollisionPrevention,\r\n    setCompactionType,\r\n    setAlternativeSize,\r\n} from './updateActions';\r\n\r\n// const time = new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds();\r\n// TODO: add notifications/toasts below\r\n\r\nexport const updateCollisionPrevention = (payload) => (dispatch) => {\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"preventCollision\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setCollisionPrevention(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateCompactionType = (payload) => (dispatch) => {\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"collectionCompactionType\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setCompactionType(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateAlternativeSize = (payload) => (dispatch) => {\r\n    return fetch(urls.get('settings_fetch'), {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\"alternativeImageSize\": payload}),\r\n      })\r\n      .then(() => {\r\n        dispatch(setAlternativeSize(payload));\r\n      })\r\n      .catch(err => console.log(err));\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport appConstants from '../constants/appConstants';\r\nimport Collections from '../components/collections';\r\nimport {\r\n  updateMaxColumns,\r\n  layoutFetch,\r\n  selectCollection,\r\n  deselectCollection,\r\n  deselectAlternative,\r\n  dehoverAlternative,\r\n  clipAlternatives,\r\n  clipCollection,\r\n  clearAltsClipboard,\r\n  clearColsClipboard,\r\n  editNameForCollection,\r\n  isEditingCollectionsName,\r\n  removeFocus,\r\n  showHeader,\r\n  hideHeader,\r\n  saveLayoutObject,\r\n  hideSinkList,\r\n  deselectAllAlternatives,\r\n  deselectAllCollections,\r\n  toggleViewMode,\r\n  toggleAltView,\r\n  alterAlternative,\r\n  toggleSettings,\r\n  toggleSearch,\r\n  searchedCollectionSuccess,\r\n  searchedCollectionFailed,\r\n  emptyMissMatchArray,\r\n  setCollectionDestination,\r\n  setCollectionMode,\r\n  updateCollectionTags,\r\n  hoverAlternative,\r\n  selectAlternative,\r\n  updateLayoutForCollection,\r\n  editCollectionName,\r\n  showDstarMenu,\r\n  shouldShowCollectionList,\r\n  resetCollectionState,\r\n  gatherAllCollections,\r\n  setSortParams,\r\n  updateAlternativeLayoutForCollection,\r\n} from '../actions/updateActions';\r\nimport {\r\n  refAlternativesToCollection,\r\n  cloneAlternativesToCollection,\r\n  cloneEditAlternativesToCollection,\r\n  cutAlternativesFromCollection,\r\n  hoverAlternativeSpecial,\r\n  editAlternatives,\r\n  restoreAlternative,\r\n  removeAlternativesFromCollection,\r\n} from '../actions/alternativeActions';\r\nimport {\r\n  sinkCollection,\r\n  createNewCollection,\r\n  copyWithRefCollection,\r\n  cloneCollection,\r\n  deepCloneCollection,\r\n  cloneAltInNewCollection,\r\n  deleteCollections,\r\n  updateCollection,\r\n} from '../actions/collectionActions';\r\nimport {\r\n  openWebSocketConnection,\r\n  onMessageRecieved,\r\n  sendMessage,\r\n} from '../actions/websocketActions';\r\nimport {\r\n  successMessage,\r\n  warningMessage,\r\n  errorMessage,\r\n} from '../actions/notificationActions';\r\nimport {\r\n  selectProject,\r\n  createProject,\r\n} from '../actions/projectActions';\r\nimport {\r\n  login,\r\n  register,\r\n  logout\r\n} from '../actions/userActions';\r\nimport {\r\n  updateCompactionType,\r\n  updateAlternativeSize,\r\n  updateCollisionPrevention,\r\n} from '../actions/settingActions';\r\nimport { renderIf } from '../util/util';\r\n\r\n/**\r\n * This component connects the Collections component to the state.\r\n */\r\nclass CollectionContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component Collections.\r\n   * The component is only rendered after all details are fetched\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n\r\n    const projectFetched = this.props.projects.get('projectFetched');\r\n    const layoutsFetched = this.props.layouts.get('layoutsFetched');\r\n    const alternativesFetched = this.props.alternatives.get('alternativesFetched');\r\n    const collectionsFetched = this.props.collections.get('collectionsFetched');\r\n    return (\r\n      renderIf(\r\n        projectFetched && layoutsFetched && alternativesFetched && collectionsFetched,\r\n        <Collections {...this.props} />\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * state for the collection container\r\n * @param {object} state\r\n * @return {object}\r\n */\r\nconst mapStateToProps = (state) => ({\r\n  alternatives: state.alternatives,\r\n  collections: state.collections,\r\n  layouts: state.layouts,\r\n  projects: state.projects,\r\n  user: state.user,\r\n  user_fechted: state.user_fechted,\r\n  settings: state.settings,\r\n  search: state.search,\r\n  header: state.header,\r\n  websocket: state.websocket,\r\n})\r\n\r\n/**\r\n * interactions for collection container\r\n * @param {function} dispatch\r\n * @return {object}\r\n */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  /**\r\n   * Dispatches an action to update the store that the websocket is open.\r\n   */\r\n  openWebSocketConnection: () => {\r\n    dispatch(openWebSocketConnection());\r\n  },\r\n\r\n  /**\r\n   * Dispatches an action wheen a message is received.\r\n   * @param {object} ev\r\n   */\r\n  onMessageRecieved: (ev) => {\r\n    dispatch(onMessageRecieved(ev));\r\n  },\r\n\r\n  /**\r\n   * send a message.\r\n   * @param {object} websocket\r\n   * @param {String} data\r\n   */\r\n  sendMessage: (websocket, data) => {\r\n    dispatch(sendMessage(websocket, data));\r\n  },\r\n\r\n  /**\r\n   * login to an account.\r\n   * @param {string} username\r\n   * @param {string} password\r\n   */\r\n  login: (username,password) =>{\r\n    dispatch(login(username,password));\r\n  },\r\n\r\n  /**\r\n   * logout from an account.\r\n   * @param {string} username\r\n   * @param {string} password\r\n   */\r\n  logout: () =>{\r\n    dispatch(logout());\r\n  },\r\n\r\n  /**\r\n   * register a new user.\r\n   * @param {string} username\r\n   * @param {string} password\r\n   */\r\n  register: (username,password) =>{\r\n    dispatch(register(username,password));\r\n  },\r\n\r\n  /**\r\n   * selects a project.\r\n   * @param {object} project\r\n   */\r\n  selectProject: (project) => {\r\n    dispatch(selectProject(project));\r\n  },\r\n\r\n  /**\r\n   * creat a project.\r\n   * @param {string} name\r\n   * @param {string} description\r\n   */\r\n  createProject: (name, description) => {\r\n    dispatch(createProject(name, description));\r\n  },\r\n  /**\r\n   * Dispatches an action to increase the maximum number of columns\r\n   * based on the end points of the layouts\r\n   * @param {ImmutableList} layout\r\n   */\r\n  updateMaxColumns: (layouts) => {\r\n    dispatch(updateMaxColumns(layouts));\r\n  },\r\n\r\n  /**\r\n   * dipaches an action to delete an alternative from a collection\r\n   * @param {int} altID: the alternative id to delete\r\n   */\r\n  cutAlternativesFromCollection: (altID) => {\r\n    dispatch(cutAlternativesFromCollection(altID));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy (with reference) an alternative\r\n   * from one collection to another\r\n   * @param {array} alts: alternatives to ref\r\n   * @param {array} cols: destination refs\r\n   */\r\n  refAlternatives: (alts = [], cols = []) => {\r\n    dispatch(refAlternativesToCollection(alts, cols));\r\n  },\r\n  /**\r\n   * dispatches an action to copy (with reference) an alternative\r\n   * from one collection to another\r\n   * @param {string} viewId: the view ID\r\n   * @param {string} refId: the reference ID\r\n   * @param {string} collectionId: the collection ID\r\n   * @param {string} newId: new ID\r\n   */\r\n  cloneAlternatives: (alts = [], cols = [], sourceProjectId) => {\r\n    dispatch(cloneAlternativesToCollection(alts, cols, sourceProjectId));\r\n  },\r\n\r\n  cloneEditAlternatives: (alts = [], cols = []) => {\r\n    dispatch(cloneEditAlternativesToCollection(alts, cols))\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to delete a collection\r\n   * @param {string} collectionId: the id of the collection to delete\r\n   */\r\n  deleteCollections: (collectionId) => {\r\n    dispatch(deleteCollections(collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the collection with that ID\r\n   * @param {string} viewId: the view ID\r\n   */\r\n  selectCollection: (viewId) => {\r\n    dispatch(selectCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to deselect the collection with that ID\r\n   * @param {string} viewId: the view ID\r\n   */\r\n  deselectCollection: (viewId) => {\r\n    dispatch(deselectCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy the collection with that ID\r\n   * into the collections clipboard\r\n   * @param {string} viewId\r\n   * @param {string} refId\r\n   * @param {array} altIDs\r\n   * @param {array} layout\r\n   */\r\n  clipCollection: (viewId, refId, altIDs = [], layout = []) => {\r\n    dispatch(clipCollection(viewId, refId, altIDs, layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  selectAlternative: (viewId) => {\r\n    dispatch(selectAlternative(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  deselectAlternative: (viewId) => {\r\n    dispatch(deselectAlternative(viewId));\r\n  },  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  hoverAlternative: (viewId) => {\r\n    dispatch(hoverAlternative(viewId));\r\n  },\r\n\r\n  hoverAlternativeSpecial: (viewId) => {\r\n    dispatch(hoverAlternativeSpecial(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to select the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * @param {string} viewId: the alternative ID\r\n   */\r\n  dehoverAlternative: (viewId) => {\r\n    dispatch(dehoverAlternative(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to copy the alternative with that ID\r\n   * from the collection it was clicked on\r\n   * to the alternative clipboard\r\n   * @param {string} viewId: the alternative ID\r\n   * @param {string} refId: the alternative ID\r\n   * @param {string} collectionId: the collection ID\r\n   */\r\n  clipAlternatives: (viewId, refId, collectionId) => {\r\n    dispatch(clipAlternatives(viewId, refId, collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to update the grid layout of the collections\r\n   * @param {ImmutableList} layout\r\n   */\r\n  updateCollectionLayout: (layout) => {\r\n    dispatch(layoutFetch(layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to save the layout of the object\r\n   * to the layout clipboard\r\n   * @param {ImmutableList} layout\r\n   */\r\n  saveLayoutObject: (layout) => {\r\n    dispatch(saveLayoutObject(layout));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} collectionName: name of the collection\r\n   */\r\n  createNewCollection: (x, y, w, h, altids, collectionName) => {\r\n    dispatch(createNewCollection(x, y, w, h, altids, collectionName));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection as a ref\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} refId: ref id for the collection to be created\r\n   * @param {string} viewId: view id for the collection to be created\r\n   */\r\n  copyWithRefCollection: (viewId) => {\r\n    dispatch(copyWithRefCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection and copy the selected alterenatives in it\r\n   * @param {number} x: the x coordinate where the collection should be created\r\n   * @param {number} y: the x coordinate where the collection should be created\r\n   * @param {number} w: width of the collection that should be created\r\n   * @param {number} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {string} refId: ref id for the collection to be created\r\n   * @param {string} viewIds: view id for the alternatives to be created\r\n   */\r\n  cloneAltInNewCollection: (viewIds) => {\r\n    dispatch(cloneAltInNewCollection(viewIds));\r\n  },\r\n\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {int} x: the x coordinate where the collection should be created\r\n   * @param {int} y: the x coordinate where the collection should be created\r\n   * @param {int} w: width of the collection that should be created\r\n   * @param {int} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {int} refId: ref id for the collection to be created\r\n   * @param {int} viewId: view id for the collection to be created\r\n   */\r\n  cloneCollection: (viewId) => {\r\n    dispatch(cloneCollection(viewId));\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to create a new collection\r\n   * @param {int} x: the x coordinate where the collection should be created\r\n   * @param {int} y: the x coordinate where the collection should be created\r\n   * @param {int} w: width of the collection that should be created\r\n   * @param {int} h: height of the the collection that should be created\r\n   * @param {array} altids=[]: the new alternative ids to add\r\n   * @param {int} refId: ref id for the collection to be created\r\n   * @param {int} viewId: view id for the collection to be created\r\n   */\r\n  deepCloneCollection: (viewId) => {\r\n    dispatch(deepCloneCollection(viewId));\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to clear the alternatives clipboard\r\n  */\r\n  clearAltsClipboard: () => {\r\n    dispatch(clearAltsClipboard());\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to clear the collections clipboard\r\n  */\r\n  clearColsClipboard: () => {\r\n    dispatch(clearColsClipboard());\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to edit the name of a collection\r\n   * @param {string} collectionId: the ID of the collection\r\n   * @param {string} collectionName: the new name of the collection\r\n   */\r\n  editNameForCollection: (collectionId, collectionName) => {\r\n    dispatch(editNameForCollection(collectionId, collectionName));\r\n  },\r\n\r\n  isEditingCollectionsName: (refId) => {\r\n    dispatch(isEditingCollectionsName(refId));\r\n  },\r\n\r\n  removeFocus: () => {\r\n    dispatch(removeFocus())\r\n  },\r\n\r\n\r\n  editCollectionName: (name) => {\r\n    dispatch(editCollectionName(name))\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to show the header\r\n   * @param {number} headerX: x coordinate\r\n   * @param {number} headerY: y coordinate\r\n   */\r\n  showHeader: (headerX, headerY) => {\r\n    dispatch(showHeader(headerX, headerY));\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to hide the header\r\n   */\r\n  hideHeader: () => {\r\n    dispatch(hideHeader());\r\n  },\r\n\r\n  /**\r\n   * dispatches an action to sink collection with ID\r\n   * @param {string} collectionId: the ID of the collection\r\n   */\r\n  sinkCollection: (collectionId) => {\r\n    dispatch(sinkCollection(collectionId));\r\n  },\r\n\r\n  /**\r\n   * dispaches an action to hide the sink list\r\n   */\r\n  hideSinkList: () => {\r\n    dispatch(hideSinkList());\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to deselect all alternatives\r\n  */\r\n  deselectAllAlternatives: () => {\r\n    dispatch(deselectAllAlternatives());\r\n  },\r\n\r\n  /**\r\n  * dispatches an action to deselect all collections\r\n  */\r\n  deselectAllCollections: () => {\r\n    dispatch(deselectAllCollections());\r\n  },\r\n\r\n  /**\r\n   * toggles collection view mode\r\n   * @param {string} collectionId\r\n   * @param {number} viewType\r\n   */\r\n  toggleViewMode: (collectionId, viewType) => {\r\n    dispatch(toggleViewMode(collectionId, viewType));\r\n  },\r\n\r\n  /**\r\n   * toggles alternative 3D view\r\n   * @param {string} alternativeID\r\n   */\r\n  toggleAltView: (alternativeID) => {\r\n    dispatch(toggleAltView(alternativeID));\r\n  },\r\n\r\n  alterAlternative: (alternativeID, parameter, newValue) => {\r\n    dispatch(alterAlternative(alternativeID, parameter, newValue));\r\n  },\r\n\r\n  editAlternatives: (editedAlternatives) => {\r\n    dispatch(editAlternatives(editedAlternatives));\r\n  },\r\n\r\n  restoreAlternative: (viewId) => {\r\n    dispatch(restoreAlternative(viewId));\r\n  },\r\n\r\n  updateCollection: (collection) => {\r\n    dispatch(updateCollection(collection));\r\n  },\r\n\r\n  removeAlternativesFromCollection: (alts = []) => {\r\n    dispatch(removeAlternativesFromCollection(alts));\r\n  },\r\n\r\n  setAlternativeSize: (dimensions = []) => {\r\n    dispatch(updateAlternativeSize(dimensions));\r\n  },\r\n\r\n  setCompactionType: (type) => {\r\n    dispatch(updateCompactionType(type));\r\n  },\r\n\r\n  setCollisionPrevention: (payload) => {\r\n    dispatch(updateCollisionPrevention(payload));\r\n  },\r\n\r\n  toggleSettings: () => {\r\n    dispatch(toggleSettings());\r\n  },\r\n\r\n  toggleSearch: () => {\r\n    dispatch(toggleSearch());\r\n  },\r\n\r\n  /**\r\n   * sets validation to false\r\n   * \r\n   */\r\n  searchedCollectionSuccess: () => {\r\n    dispatch(searchedCollectionSuccess());\r\n  },\r\n\r\n  /**\r\n   *  sets validation to true\r\n   */\r\n  searchedCollectionFailed: (namesMissMatch) => {\r\n    dispatch(searchedCollectionFailed(namesMissMatch));\r\n  },\r\n\r\n  emptyMissMatchArray: () => {\r\n    dispatch(emptyMissMatchArray());\r\n  },\r\n\r\n  setCollectionDestination: (collection, destinations) => {\r\n    dispatch(setCollectionDestination(collection, destinations))\r\n  },\r\n\r\n  setCollectionMode: (collection, mode) => {\r\n    dispatch(setCollectionMode(collection, mode))\r\n  },\r\n\r\n  updateCollectionTags: (collectionId, tags) => {\r\n    dispatch(updateCollectionTags(collectionId, tags))\r\n  },\r\n\r\n  updateLayoutForCollection: (layoutID) => {\r\n    dispatch(updateLayoutForCollection(layoutID));\r\n  },\r\n\r\n  successMessage: (id, message) => {\r\n    dispatch(successMessage(id, message));\r\n  },\r\n\r\n  warningMessage: (id, message) => {\r\n    dispatch(warningMessage(id, message));\r\n  },\r\n\r\n  errorMessage: (id, message) => {\r\n    dispatch(errorMessage(id, message));\r\n  },\r\n\r\n  showDstarMenu: () => {\r\n    dispatch(showDstarMenu());\r\n  },\r\n\r\n  shouldShowCollectionList: () => {\r\n    dispatch(shouldShowCollectionList());\r\n  },\r\n\r\n  resetCollectionState: () => {\r\n    dispatch(resetCollectionState());\r\n  },\r\n\r\n  gatherAllCollections: () => {\r\n    dispatch(gatherAllCollections());\r\n  },\r\n\r\n  /**\r\n   * @param {String} collection\r\n   * @param {Array} sortParams\r\n   */\r\n  setSortParams: (collection, sortParams) => {\r\n    dispatch(setSortParams(collection, sortParams))\r\n  },\r\n\r\n  /**\r\n   * \r\n   * @param {String} collection \r\n   * @param {Array} layouts \r\n   */\r\n  updateAlternativeLayoutForCollection: (collection, layouts) => {\r\n    dispatch(updateAlternativeLayoutForCollection(collection, layouts))\r\n  }\r\n  \r\n\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CollectionContainer);\r\n","import React, {PureComponent} from 'react';\r\nimport appConstants from '../../constants/appConstants'\r\nimport appStyles from './App.module.scss';\r\nimport CollectionContainer from '../../containers/CollectionContainer';\r\nimport '../../../node_modules/react-grid-layout/css/styles.css';\r\nimport '../../../node_modules/react-resizable/css/styles.css';\r\n\r\n/**\r\n * main app entry point\r\n */\r\nexport default class App extends PureComponent {\r\n\r\n  /**\r\n   * fetch layout when component mounts\r\n   * this triggers a chain reaction and fetches\r\n   * collections and alternatives as well\r\n   */\r\n\r\n  \r\n  componentDidMount() {\r\n    const userLoggedIn = localStorage.getItem(appConstants.get(\"USER_ID\"));\r\n    const projectID = sessionStorage.getItem(appConstants.get(\"PROJECT_ID\"));\r\n    const projectFetched = this.props.projects.get('projectFetched');\r\n\r\n    if (userLoggedIn && projectID && !projectFetched ) {\r\n      this.props.fetchProject();\r\n    }   \r\n  }\r\n\r\n\r\n  /**\r\n   * The component should render collections container, which\r\n   * contains everything else in the app\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <div className={appStyles.App}>\r\n        <div className={appStyles.canvas}>\r\n          <div className={appStyles.container}>\r\n\r\n            <CollectionContainer \r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport App from '../components/App/App';\r\nimport {\r\n  fetchAlternatives,\r\n  fetchCollections,\r\n  fetchLayout,\r\n  fetchProject\r\n} from '../actions/fetchActions';\r\n\r\n/**\r\n * This component connects the App component to the state.\r\n * TODO: It is a temporary component and needs to be deleted after refactoring.\r\n */\r\nclass AppContainer extends Component {\r\n  /**\r\n   * The component should render the presentational component of App.\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n    return (\r\n      <App {...this.props} styles={null} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  /**\r\n   * dispatches action fetchAlternatives to fetch alternatives\r\n   */\r\n  fetchAlternatives: () => {\r\n    dispatch(fetchAlternatives());\r\n  },\r\n\r\n  /**\r\n   * dispatches action fetchCollections to fetch collections\r\n   */\r\n  fetchCollections: () => {\r\n    dispatch(fetchCollections());\r\n  },\r\n\r\n  /**\r\n   * dispatches action fetchLayout to fetch collections layout\r\n   */\r\n  fetchLayout: () => {\r\n    dispatch(fetchLayout());\r\n  },\r\n\r\n  /**\r\n   * dispatches action fetchProject to fetch project \r\n   */\r\n  fetchProject: () => {\r\n    dispatch(fetchProject());\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","export default __webpack_public_path__ + \"static/media/empty.34b6f05a.png\";","import ProjectImage from './ProjectImage';\r\n\r\nexport default ProjectImage;","import React, { PureComponent } from 'react';\r\nimport styles from \"./projectImage.module.scss\";\r\nimport { urls } from '../../constants/urls';\r\n\r\nclass ProjectImage extends PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles[\"ImageContainer\"]}>\r\n                {\r\n                    this.props.images.size >= 3 ?\r\n                        <div\r\n                            className={styles[\"imagesContainer\"]}\r\n                        >\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(0)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(1)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(2)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.images.size === 2 ?\r\n                        <div\r\n                            className={styles[\"imagesContainer\"]}\r\n                        >\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(0)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(1)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(1)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n\r\n                {\r\n                    this.props.images.size === 1 ?\r\n                        <div\r\n                            className={styles[\"imagesContainer\"]}\r\n                        >\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(0)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(0)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n\r\n                            <img\r\n                                src={urls.get(\"getHost\") + this.props.images.get(0)}\r\n                                className={styles.imageStyle}\r\n                                alt=\"alternative image\"\r\n                            />\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProjectImage;","import Project from './Project';\r\n\r\nexport default Project;","import React, { PureComponent } from 'react';\r\nimport styles from './project.module.scss';\r\nimport imageAlts from '../../../resources/empty.png';\r\nimport { MdMoreHoriz } from \"react-icons/md\";\r\nimport ProjectImage from '../../projectImage';\r\n\r\nclass Project extends PureComponent {\r\n\r\n    /**\r\n     * @function  handleSelectedProject\r\n     * @param {Object} e \r\n     * @description select an existing project and render project page\r\n     */\r\n    handleSelectedProject = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.props.selectProject(this.props.project.toJS())\r\n        this.props.history.push(\"./project\");\r\n    }\r\n\r\n    /**\r\n     * @function handleDelete\r\n     * @param {Object} e \r\n     * @description deletes project\r\n     */\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.deleteProject(this.props.project.get(\"id\"));\r\n    }\r\n\r\n    /**\r\n     * @function handleEdit\r\n     * @param {Object} e \r\n     * @description edits project\r\n     */\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.openEditProject(this.props.project)\r\n    }\r\n\r\n    onRightClick = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation();\r\n        this.props.showProjectContextMenu(e.pageX + \"px\", e.pageY + \"px\", this.props.project);\r\n\r\n    }\r\n\r\n    handelShowProjectInformation = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation();\r\n        this.props.showProjectContextMenu(e.pageX + \"px\", e.pageY + \"px\", this.props.project);\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        let username = this.props.userName ? this.props.userName : \"No Name\";\r\n        return (\r\n            <div\r\n                className={styles[\"projectContainer\"]}\r\n                onClick={this.handleSelectedProject}\r\n                onContextMenu={this.onRightClick}\r\n\r\n            >\r\n                <div className={styles[\"imageContainer\"]}>\r\n                  {\r\n                      this.props.project.get(\"images\") !== undefined && this.props.project.get(\"images\").size > 0 ?\r\n                        <ProjectImage \r\n                            images={this.props.project.get(\"images\")}\r\n                        />\r\n                      :\r\n                        <img\r\n                            src={imageAlts}\r\n                            className={styles.imageStyle}\r\n                        />\r\n                  }\r\n                     \r\n                </div>\r\n                <div className={styles[\"textContainer\"]}>\r\n\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <h3 className={styles[\"title\"]}>{this.props.name}</h3>\r\n                        {\r\n                            this.props.project.get(\"numberOfAlternatives\") !== undefined ?\r\n                            <div className={styles[\"numberOfAlts\"]}>{this.props.project.get(\"numberOfAlternatives\")}</div>\r\n                            :\r\n                            <div className={styles[\"numberOfAlts\"]}>{this.props.project.get(\"altNum\")}</div>                            \r\n                        }\r\n                    </div>\r\n\r\n                    <div className={styles[\"descriptionContainer\"]}>\r\n                        <p className={styles[\"description\"]}>{this.props.project.get(\"description\")}</p>\r\n                        <div className={styles[\"userContainer\"]}>\r\n                            <MdMoreHoriz\r\n                                className={styles[\"icon-style\"]}\r\n                                onClick={this.handelShowProjectInformation}\r\n                            />\r\n                            <div className={styles[\"circle\"]}>\r\n                                <p className={styles[\"initials\"]}>{username.charAt(0).toUpperCase()}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project;","import ProjectContextMenu from './ProjectContextMenu'; \r\n\r\nexport default ProjectContextMenu;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from \"./projectContextMenu.module.scss\";\r\n\r\nclass ProjectContextMenu extends PureComponent {\r\n\r\n    handleOpenProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.shouldCloseProjectContextMenu();\r\n        this.props.selectProject(this.props.project.toJS());\r\n        this.props.history.push(\"/project\");\r\n    }\r\n\r\n    handleEditProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.openEditProject(this.props.project)\r\n    }\r\n\r\n    handleDeleteProject = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleDeleteProject(this.props.project.get(\"id\"))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div\r\n                className={styles[\"contextMenuContainer\"]}\r\n                style={{\r\n                    top: this.props.yPos,\r\n                    left: this.props.xPos,\r\n                }}\r\n            >\r\n                <div\r\n                    onClick={this.handleOpenProject}\r\n                    className={styles[\"openContainer\"]}\r\n                >\r\n                    <p className={styles[\"listItemText\"]}>\r\n                        Open\r\n                    </p>\r\n                </div>\r\n                <div\r\n                    onClick={this.handleEditProject}\r\n                    className={styles[\"editContainer\"]}\r\n                >\r\n                    <p\r\n                        className={styles[\"listItemText\"]}\r\n                    >\r\n                        Edit\r\n                    </p>\r\n                </div>\r\n                <div\r\n                    onClick={this.handleDeleteProject}\r\n                    className={styles[\"deleteContainer\"]}\r\n                >\r\n                    <p className={styles[\"listItemText\"]}>\r\n                        Delete\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectContextMenu;","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport projStyles from './projectBox.module.scss';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\n/**\r\n * @class ProjectBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the projectBox pane, which is a popup window\r\n */\r\nclass ProjectBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true\r\n      }  \r\n      \r\n      this.rhinoSelectedFile = null;\r\n      this.grasshopperSelectedFile = null;\r\n      this.newProjectName = \"\";\r\n      this.newProjectDescription = \"\";  \r\n  }\r\n\r\n  \r\n  /**\r\n   * @function handleCreate\r\n   * @memberof projectBox\r\n   * @description creating a new project \r\n   */\r\n  handleCreate = () => {\r\n    if (this.newProjectName !== \"\" && this.rhinoSelectedFile && this.grasshopperSelectedFile) {\r\n      this.props.createProject(this.newProjectName,this.newProjectDescription,this.rhinoSelectedFile,this.grasshopperSelectedFile);\r\n      this.props.history.push(\"/project\");\r\n    }    \r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.isCreatingProject();\r\n  };\r\n\r\n  onProjectNameChange = (e) =>{\r\n    this.newProjectName = e.target.value;\r\n  }\r\n\r\n  onProjectDescriptionChange = (e) =>{\r\n    this.newProjectDescription = e.target.value;\r\n  }\r\n\r\n  rhinoFileChangeHandler = (event) => {\r\n    this.rhinoSelectedFile = event.target.files[0];    \r\n  };\r\n\r\n  grasshopperFileChangeHandler = (event) => {\r\n    this.grasshopperSelectedFile = event.target.files[0];    \r\n  };\r\n\r\n  /**\r\n   * @description renders the view for projectBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.props.isCreating}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\"  style={{color: \"black\"}}>{\"Projects\"}</DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText \r\n                    id=\"alert-dialog-description\"\r\n                    style={{color: \"black\"}}\r\n                  >\r\n                    Enter a name and description for the new project.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-name\"\r\n                    label=\"project name\"\r\n                    onChange={this.onProjectNameChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-description\"\r\n                    label=\"project description\"\r\n                    onChange={this.onProjectDescriptionChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                  <div className={projStyles[\"file-input\"]}>\r\n                    <label htmlFor=\"rhino-file-input\">Rhino File: </label>\r\n                    <input id=\"rhino-file-input\" type=\"file\" name=\"rhino-file\" accept=\".3dm\" onChange={this.rhinoFileChangeHandler} />\r\n                  </div>\r\n\r\n                  <div className={projStyles[\"file-input\"]}>\r\n                    <label htmlFor=\"grasshopper-file-input\">Grasshopper File: </label>\r\n                    <input id=\"grasshopper-file-input\" type=\"file\" name=\"grasshopper-file\" accept=\".ghx\" onChange={this.grasshopperFileChangeHandler} />                    \r\n                  </div>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleCancel} color=\"primary\" >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleCreate} color=\"primary\" autoFocus>\r\n                    create\r\n                  </Button>\r\n                </DialogActions>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default ProjectBox;","import EditProjectBox from './EditProjectBox';\r\n\r\nexport default EditProjectBox;","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\n/**\r\n * @class EditprojectBox\r\n * @extends React.PureComponent\r\n * @description presentational component for the EditProjectBox pane, which is a popup window\r\n */\r\nclass EditProjectBox extends PureComponent {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {object} props \r\n   */\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          open: true\r\n      }  \r\n\r\n      this.selectedProject = {};  \r\n      this.newProjectName = \"\";\r\n      this.newProjectDescription = \"\";  \r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setState({\r\n        newProjectName: this.props.project.get(\"name\"),\r\n        newProjectDescription: this.props.project.get(\"description\")\r\n      })\r\n  }\r\n\r\n  \r\n  /**\r\n   * @function handleCUpdate\r\n   * @memberof editProjectBox\r\n   * @description edit a new project \r\n   */\r\n  handleUpdate = () => {\r\n    if (this.state.newProjectName !== \"\") {\r\n        const editElements = {\r\n          projectName: this.state.newProjectName,\r\n          projectDescription: this.state.newProjectDescription,\r\n          projectId: this.props.project.get(\"id\"),\r\n        }\r\n        this.props.editProject(editElements);\r\n    }    \r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.openEditProject(null);\r\n  };\r\n\r\n  /**\r\n   * @function onProjectNameChange\r\n   * @param {Object } e \r\n   * @description handle name change amd updates newProjectName state\r\n   */\r\n  onProjectNameChange = (e) =>{\r\n    this.setState({\r\n        newProjectName: e.target.value\r\n    }) \r\n}\r\n\r\n  /**\r\n   * @function  onProjectDescriptionChange \r\n   * @param {Object} e\r\n   * @description handle description text change and updates newProjectDescription state \r\n   */\r\n  onProjectDescriptionChange = (e) =>{\r\n    this.setState({\r\n        newProjectDescription: e.target.value\r\n    }) \r\n  }\r\n\r\n  /**\r\n   * @description renders the view for projectBox component\r\n   * @returns {ReactPureComponent}\r\n   */\r\n  render() {\r\n      return (\r\n          <div>\r\n            <Dialog\r\n              open={this.props.isCreating}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\"  style={{color: \"black\"}}>{\"Projects\"}</DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText \r\n                    id=\"alert-dialog-description\"\r\n                    style={{color: \"black\"}}\r\n                  >\r\n                    Enter a name and description for the new project.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-name\"\r\n                    label=\"project name\"\r\n                    value={this.state.newProjectName}\r\n                    onChange={this.onProjectNameChange}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"project-description\"\r\n                    label=\"project description\"\r\n                    onChange={this.onProjectDescriptionChange}\r\n                    value={this.state.newProjectDescription}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      style: { color: '#000' },\r\n                    }}\r\n                  />\r\n                <DialogActions>\r\n                  <Button onClick={this.handleCancel} color=\"primary\" >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={this.handleUpdate} color=\"primary\" autoFocus>\r\n                    Update\r\n                  </Button>\r\n                </DialogActions>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default EditProjectBox;","import Loader from './Loader';\r\n\r\nexport default Loader; ","import React from 'react';\r\nimport styles from './loader.module.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={styles[\"loader\"]}>\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { PureComponent } from 'react';\r\nimport Project from './project'\r\nimport styles from './projects.module.scss'; \r\nimport { MdNoteAdd, MdHome,MdContentCopy } from 'react-icons/md';\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport ProjectContextMenu from './projectContextMenu';\r\nimport ProjectBox from \"./projectBox/ProjectBox\";\r\nimport EditProjectBox from './editProjectBox';\r\nimport NotificationContainer from \"../../containers/NotificationContainer\";\r\nimport MessageBox from \"../messageBox/MessageBox\";\r\nimport Loader from \"../loader\";\r\nimport { IconContext } from 'react-icons';\r\n\r\n\r\nclass Projects extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shouldWarn: false,\r\n            confirmAction: null,\r\n            warningMessage: \"\"\r\n        }\r\n      \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUserProjects();\r\n        const { history } = this.props;\r\n        history.listen((newLocation, action) => {\r\n            if(action === \"POP\" && newLocation.pathname === \"/project\"){\r\n                history.push(\"/projects\")\r\n            } else if(action === \"POP\" && newLocation.pathname === \"/login\"){\r\n                this.props.history.push(\"/\")\r\n            } else if(action === \"POP\" && this.props.history.location.pathname === \"/projects\"){\r\n                this.props.resetCollectionState();\r\n                \r\n            } \r\n\r\n        })\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n        if(prevProps.auth.get(\"userLoggedIn\") && !this.props.auth.get(\"userLoggedIn\")) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n      \r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @description log the user out of the system\r\n     */\r\n    handelLogout = () => {\r\n        this.props.logout();\r\n    }\r\n\r\n    /**\r\n     * @function handelOpenEditProject\r\n     * @param {Object} project \r\n     * @description shows EditProjectBox\r\n     */\r\n    handelOpenEditProject(project) {\r\n        this.props.openEditProject(project);\r\n    }\r\n\r\n    /**\r\n     * @function  deleteProject\r\n     * @param {String} id \r\n     * @description handles delete project\r\n     */\r\n    deleteProject(id){\r\n        this.props.deleteProject(id);\r\n        this.setState({\r\n            shouldWarn: false,\r\n            warningMessage: \"\",\r\n            confirmAction: null\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * @function handleDeleteProject\r\n     * @param {String} id \r\n     * @description shows meesageBox component\r\n     */\r\n    handleDeleteProject(id) {\r\n        this.props.shouldCloseProjectContextMenu()\r\n        this.setState({\r\n            shouldWarn: true,\r\n            warningMessage: 'Do you want to delete all selected project views and their underlying alternative?',\r\n            confirmAction: this.deleteProject.bind(this, id),\r\n        })\r\n    }\r\n\r\n    showProjectContextMenu = (xPos, yPos, project) => {\r\n      \r\n        this.props.showProjectMenu(xPos, yPos, project);\r\n    }\r\n\r\n    renderProjects = (projects) => (\r\n        projects.map((project) => {\r\n            return (\r\n                <Project\r\n                  key={project.get(\"id\")}\r\n                  project={project}\r\n                  name={project.get(\"name\")}\r\n                  selectProject={this.props.selectProject}\r\n                  deleteProject={this.handleDeleteProject.bind(this)}\r\n                  openEditProject={this.handelOpenEditProject.bind(this)}\r\n                  history={this.props.history}\r\n                  showProjectContextMenu={this.showProjectContextMenu}\r\n                  userName={this.props.auth.get('user').get('username')}\r\n                />\r\n            )\r\n        })\r\n    )\r\n\r\n    /**\r\n     * @description shows project create popup\r\n     */\r\n    handleCreateProject = () => {\r\n        this.props.isCreatingProject();\r\n    }\r\n\r\n    /**\r\n     * @description resets the state when clicking cancle in delete popup\r\n     */\r\n    handleDeleteCancel = () => {\r\n        this.setState({\r\n            shouldWarn: false,\r\n            warningMessage: \"\",\r\n            confirmAction: null\r\n        })\r\n    }\r\n\r\n    \r\n    handleClick = (e) => {      \r\n        if (e.target.type != \"file\") {\r\n          e.preventDefault();\r\n        }\r\n        if(this.props.projects.get(\"showProjectContextMenu\")){\r\n            this.props.shouldCloseProjectContextMenu()\r\n        }\r\n    }\r\n\r\n    handleHomeClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    handleAboutClick = (e) => {\r\n        e.preventDefault();\r\n        window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\" , '_blank', \"docs\");      \r\n    }\r\n\r\n\r\n    render(){\r\n        let username = this.props.auth.get('user') && this.props.auth.get('user').get('username') ? this.props.auth.get('user').get('username') : \"No Name\"\r\n        return(\r\n            <div>\r\n                {\r\n                    !this.props.projects.get(\"projectFetched\") || !this.props.auth.get(\"userFetched\") \r\n                    || typeof this.props.auth.get('user').get('username') == \"undefined\" ?\r\n                    <Loader />\r\n\r\n                    :\r\n                    <div \r\n                    className={styles[\"mainsContainer\"]}   \r\n                    onClick={this.handleClick}  \r\n                    >\r\n                    <NotificationContainer />\r\n                    <div className={styles[\"controlsContainer\"]}>\r\n                       <div className={styles[\"controlsContent\"]}>\r\n                            <div className={styles[\"homeContainer\"]}>\r\n                                    <div className={styles[\"circle\"]}>\r\n                                        <p className={styles[\"initials\"]}>{username.charAt(0).toUpperCase()}</p>\r\n                                    </div>\r\n                                    <p className={styles[\"userName\"]}>{username}</p>\r\n                            </div>\r\n                            <div className={styles[\"homeContainer\"]} onClick={this.handleHomeClick}>\r\n                                <IconContext.Provider value={{ size: '2.2em' }}>\r\n                                    <MdHome\r\n                                     style={{ marginLeft: 10}} \r\n                                    />\r\n                                </IconContext.Provider>\r\n                                    <p className={styles[\"homeText\"]}>Home </p> \r\n                                </div>\r\n                                <div className={styles[\"homeContainer\"]} onClick={this.handleAboutClick}>\r\n                                <IconContext.Provider value={{ size: '2.2em' }}>\r\n                                    <MdContentCopy\r\n                                     style={{ marginLeft: 10}} \r\n                                    />\r\n                                </IconContext.Provider>                                    \r\n                                    <p className={styles[\"homeText\"]}>About Us </p> \r\n                                </div>\r\n                                <div className={styles[\"homeContainer\"]} onClick={this.handleCreateProject}>\r\n                                <IconContext.Provider value={{ size: '2.2em' }}>\r\n                                    <MdNoteAdd\r\n                                      style={{ marginLeft: 10 }}\r\n                                    />                                \r\n                                </IconContext.Provider>                                    \r\n                                    <p className={styles[\"addProjectText\"]}>Add Project</p>\r\n                                </div>\r\n                                <div className={styles[\"homeContainer\"]} onClick={this.handelLogout}>\r\n                                <IconContext.Provider value={{ size: '2.2em' }}>\r\n                                    <FiLogOut\r\n                                     style={{ marginLeft: 10 }} \r\n                                    />\r\n                                </IconContext.Provider>                                                                       \r\n                                    <p className={styles[\"logoutText\"]}>logout</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                       </div>\r\n                    <div className={styles[\"projectsContainer\"]}>\r\n                        <div className={styles[\"projectsRow\"]}>\r\n                            {\r\n                             this.renderProjects(this.props.projects.get(\"projects\"))\r\n                            } \r\n                            {\r\n                                this.props.projects.get(\"isCreating\") ?\r\n                                    <ProjectBox\r\n                                        isCreatingProject={this.props.isCreatingProject}\r\n                                        isCreating={this.props.projects.get(\"isCreating\")}\r\n                                        createProject={this.props.createProject}\r\n                                        history={this.props.history}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                this.props.projects.get(\"showEditBox\")?\r\n                                <EditProjectBox\r\n                                    isCreatingProject={this.props.isCreatingProject}\r\n                                    isCreating={this.props.projects.get(\"showEditBox\")}\r\n                                    project={this.props.projects.get(\"editProject\")}\r\n                                    editProject={this.props.editProject}\r\n                                    openEditProject={this.props.openEditProject}\r\n                                    history={this.props.history} \r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                            {\r\n                                this.props.projects.get(\"showProjectContextMenu\")?\r\n                                <ProjectContextMenu \r\n                                    xPos={this.props.projects.get(\"contextMenuPosX\")}\r\n                                    yPos={this.props.projects.get(\"contextMenuPosY\")}\r\n                                    project={this.props.projects.get(\"contextMenuSelectedProject\")}\r\n                                    handleDeleteProject={this.handleDeleteProject.bind(this)}\r\n                                    openEditProject={this.props.openEditProject}\r\n                                    history={this.props.history}\r\n                                    shouldCloseProjectContextMenu={this.props.shouldCloseProjectContextMenu}\r\n                                    selectProject={this.props.selectProject}\r\n                                    />\r\n                                :\r\n                                null \r\n                            }\r\n    \r\n                        </div>\r\n                    \r\n                    </div> \r\n                    {this.state.shouldWarn ? <MessageBox handleDeleteCancel={this.handleDeleteCancel} confirmAction={this.state.confirmAction} message={this.state.warningMessage}/> : null} \r\n                </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProjects } from '../actions/fetchActions';\r\nimport { logout, fetchUser } from \"../actions/userActions\";\r\nimport Projects from '../components/projects/Projects';\r\nimport {\r\n  selectProject,\r\n  createProject,\r\n  editProject,\r\n  deleteProject\r\n} from '../actions/projectActions';\r\nimport {\r\n  isCreatingProject,\r\n  openEditProject,\r\n  showProjectMenu,\r\n  shouldCloseProjectContextMenu,\r\n  resetCollectionState,\r\n} from \"../actions/updateActions\";\r\n\r\n/**\r\n * This component connects the Project component to the state\r\n */\r\nclass ProjectContainer extends Component {\r\n  /**\r\n   * The component renders the presentational component Projects\r\n   * @return {ReactComponent}\r\n   */\r\n\r\n\r\n  componentDidMount() {\r\n    // we need to the api call to ftech user data\r\n    this.props.fetchUser();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Projects\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.projects,\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  /**\r\n   * selects a project.\r\n   * @param {object} project\r\n   */\r\n  selectProject: (project) => {\r\n    dispatch(selectProject(project));\r\n  },\r\n\r\n  /**\r\n   * Dispatch action createProject\r\n   * @param {String} name \r\n   * @param {String} description \r\n   */\r\n  createProject: (name, description,rhinoFile,grasshopperFile) => {\r\n    dispatch(createProject(name, description,rhinoFile,grasshopperFile));\r\n  },\r\n\r\n  /**\r\n   * Dispatch action is create a project\r\n   */\r\n  isCreatingProject: () => {\r\n    dispatch(isCreatingProject());\r\n  },\r\n\r\n  /**\r\n   * dispatches action logout to logout current user\r\n   */\r\n  logout: () => {\r\n    dispatch(logout())\r\n  },\r\n\r\n  /**\r\n   * dispatches action getUserProjects to projects that belong to current user\r\n   */\r\n  getUserProjects: () => {\r\n    dispatch(getUserProjects());\r\n  },\r\n\r\n  /**\r\n   *dispatches action fetchUser to get the user information on refresh\r\n   */\r\n  fetchUser: () => {\r\n    dispatch(fetchUser())\r\n  },\r\n\r\n  /**\r\n   * dispatches action deleteProject to delete selected project\r\n   * @param {String} projectId \r\n   */\r\n  deleteProject: (projectId) => {\r\n    dispatch(deleteProject(projectId));\r\n  },\r\n\r\n  /**\r\n   * dispatches action openEditProject to open project edit menu\r\n   * @param {ImmutableList} project \r\n   */\r\n  openEditProject: (project) => {\r\n    dispatch(openEditProject(project))\r\n  },\r\n\r\n  /**\r\n   * despatches action editProject to edit project name or description \r\n   * @param {Objects} editElements \r\n   */\r\n  editProject: (editElements) => {\r\n    dispatch(editProject(editElements));\r\n\r\n  },\r\n\r\n  /**\r\n   * dispatches an action showProjectMenu to show the project context menu  \r\n   * on right-click in the specified coordinates\r\n   * @param {String} xPos \r\n   * @param {String} yPos \r\n   * @param {ImmutableList} project \r\n   */\r\n  showProjectMenu: (xPos, yPos, project) => {\r\n    dispatch(showProjectMenu(xPos, yPos, project));\r\n  },\r\n\r\n  /**\r\n   * Dispatch cshouldCloseProjectContextMenu to close context menu\r\n   */\r\n  shouldCloseProjectContextMenu: () => {\r\n    dispatch(shouldCloseProjectContextMenu());\r\n  },\r\n\r\n  /**\r\n   *  Dispatch action reseteCollectionState when user click on the back arrow on the browser to get out of the project\r\n   */\r\n  resetCollectionState: () => {\r\n    dispatch(resetCollectionState());\r\n  }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectContainer)","import navigationItem from './naigationItem'\r\n\r\nexport default navigationItem;","import React from 'react'; \r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './navigationItem.module.scss'; \r\n\r\n\r\nconst navigationItem = (props) => (\r\n    <li\r\n     className={styles[\"navigationItem\"]}\r\n    >\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact} \r\n            activeClassName={styles['active']}\r\n        >\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n)\r\n\r\n\r\nexport default navigationItem;","import navigationItems from './navigationItems';\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport styles from './navigationItems.module.scss';\r\nimport NavigationItem from './navigationItem';\r\n\r\nconst navigationItems = (props) => {\r\n    return(\r\n        <ul\r\n        className={styles['navigationItems']}\r\n    >\r\n        \r\n         <NavigationItem\r\n            link={\"/\"}\r\n            exact\r\n        >\r\n            Home\r\n        </NavigationItem>\r\n        {\r\n            props.isLoggedIn ?\r\n            <NavigationItem \r\n             link={\"/projects\"}\r\n            >\r\n                Projects\r\n            </NavigationItem>\r\n            :\r\n            null\r\n        }\r\n\r\n        {\r\n            !props.isLoggedIn ?\r\n            <NavigationItem\r\n            link={\"/signup\"}\r\n           >\r\n               Join Us\r\n           </NavigationItem>\r\n           \r\n           :\r\n           null\r\n        }\r\n\r\n        {\r\n            !props.isLoggedIn ?\r\n             <NavigationItem\r\n             link={\"/login\"}\r\n            >\r\n                Login\r\n            </NavigationItem>\r\n            :\r\n            null\r\n        }\r\n        {\r\n            props.user ?\r\n            <li\r\n             className={styles[\"name\"]}\r\n            >\r\n                {props.user}\r\n            </li>\r\n            :\r\n            null\r\n        }\r\n\r\n        {\r\n             props.isLoggedIn ?\r\n             <li\r\n                className={styles[\"logoutItem\"]}\r\n                onClick={props.logoutClicked}\r\n             >\r\n                 logout \r\n             </li>\r\n             :\r\n             null\r\n        }\r\n       \r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems;","export default __webpack_public_path__ + \"static/media/DStaWhite.204bed7a.png\";","import Navigation from './navigation';\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport styles from './navigation.module.scss';\r\nimport NavigationItems from './navigationItems';\r\nimport logoSrc from '../../resources/DStaWhite.png'; \r\n\r\nconst Navigation = (props) => (\r\n    <header\r\n     className={styles[\"navigation\"]}\r\n    >\r\n        <div\r\n         className={styles['logo']}\r\n         onClick={props.clicked}    \r\n        >\r\n            <div className={styles.logoContainer}>\r\n                <img\r\n                 src={logoSrc}\r\n                 alt=\"DStar logo\"\r\n                 className={styles.logoStyle}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        <nav\r\n         className={styles['nav']}\r\n        >\r\n             <NavigationItems logoutClicked={props.logoutClicked} isLoggedIn={props.isLoggedIn} user={props.user} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/collections.03f2a105.png\";","import LandingPage from './LandingPage';\r\n\r\nexport default LandingPage;","import React, { PureComponent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Navigation from '../navigation';\r\nimport styles from './landingPage.module.scss';\r\nimport image from '../../resources/collections.png'\r\n\r\n\r\n\r\n\r\n/**\r\n * @class LandingPage \r\n * @extends React.PureComponent\r\n * @description Static landingPage\r\n */\r\nclass LandingPage extends PureComponent {\r\n\r\n  handleJoinButtonClick = () => {\r\n    if (this.props.user.get(\"userFetched\")) {\r\n      this.props.history.push(\"/projects\")\r\n    } else {\r\n      this.props.history.push(\"/signup\")\r\n    }\r\n  }\r\n\r\n  handleLoginClick = () => {\r\n\r\n    if (this.props.user.get(\"userFetched\")) {\r\n      window.open(\"https://dstar-design-gallery.github.io/dstar-docs/\", '_blank', \"docs\");\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n\r\n  }\r\n\r\n  handleLogoClicked = () => {\r\n    this.props.history.push(\"/\")\r\n\r\n  }\r\n\r\n  handleUserClick = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n\r\n\r\n  logoutClicked = (e) => {\r\n    e.preventDefault()\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    let buttonStyle;\r\n\r\n    if (window.innerWidth >= 1400) {\r\n      buttonStyle = {\r\n        width: 208,\r\n        height: 89,\r\n      }\r\n    } else if (window.innerWidth < 1400) {\r\n      buttonStyle = {\r\n        width: 180,\r\n        height: 89,\r\n      }\r\n    }\r\n\r\n    const ColorButton = withStyles((theme) => ({\r\n      root: {\r\n        backgroundColor: \"#176287\",\r\n        width: '30%',\r\n        height: '65%',\r\n        color: \"#fff\",\r\n        fontFamily: \"Poppins\",\r\n        fontSize: '1vw',\r\n        '&:hover': {\r\n          backgroundColor: '#0c3c46',\r\n        },\r\n      },\r\n    }))(Button);\r\n\r\n    let joinNow = \"Join Now\"\r\n    let projects = \"Projects\"\r\n    let about = \"About\"\r\n    let login = \"Login\"\r\n\r\n    return (\r\n      <div className={styles[\"mainContainer\"]}>\r\n        <Navigation\r\n          isLoggedIn={this.props.user.get(\"userFetched\")}\r\n          clicked={this.handleLogoClicked}\r\n          user={this.props.user.get(\"user\").get(\"username\")}\r\n          logoutClicked={this.logoutClicked}\r\n\r\n        />\r\n        <main className={styles[\"content\"]}>\r\n          <div className={styles[\"imageContainer\"]}>\r\n            <div className={styles[\"image\"]}>\r\n              <img src={image} alt=\"collections image\"\r\n                className={styles[\"image\"]}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles[\"titlesContainer\"]}>\r\n            <div className={styles[\"titles\"]}>\r\n              <h2 className={styles[\"mainTitle\"]}>\r\n                Explore Your Design Ideas\r\n                              </h2>\r\n              <p className={styles[\"subTitle\"]}>\r\n                Generate & Review Unlimited Alternatives\r\n                              </p>\r\n            </div>\r\n            <div className={styles[\"buttonsContainer\"]}>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={this.handleJoinButtonClick}\r\n                >\r\n                {\r\n                  this.props.user.get(\"userFetched\") ?\r\n                    projects\r\n                    :\r\n                    joinNow\r\n                }\r\n              </ColorButton>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={this.handleLoginClick}\r\n                >\r\n                {\r\n                  this.props.user.get(\"userFetched\") ?\r\n                    about\r\n                    :\r\n                    login\r\n                }\r\n              </ColorButton>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LandingPage from '../components/landingPage';\r\nimport { fetchUser,  logout} from \"../actions/userActions\";\r\nimport appConstants from  '../constants/appConstants';\r\n\r\nclass LandingPageContainer extends Component {\r\n    componentDidMount() {\r\n        // this.props.fetchUser();\r\n        const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n        if(userId && userId != null){\r\n            this.props.fetchUser();\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <LandingPage\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    /**\r\n     * dispatches fetch User\r\n     */\r\n    fetchUser: () => {\r\n        dispatch(fetchUser())\r\n    },\r\n\r\n    logout: () => {\r\n        dispatch(logout());\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPageContainer);","import Auth from \"./Auth\";\r\n\r\nexport default Auth;","import React, { PureComponent } from 'react';\r\nimport styles from './auth.module.scss';\r\nimport Navigation from '../navigation';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Auth extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            passwordConfirmation: \"\",\r\n        }\r\n    }\r\n\r\n    onUsernameChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n\r\n    onPasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n\r\n    onPasswordConfirmationChange = (e) => {\r\n        this.setState({\r\n            passwordConfirmation: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.username !== \"\" && this.state.password !== \"\" && this.state.passwordConfirmation !== \"\" && (this.state.password === this.state.passwordConfirmation)) {\r\n            this.props.register(this.state.username, this.state.password, this.state.passwordConfirmation , this.props.history);\r\n        } else if (this.state.username === null || this.state.username === \"\") {\r\n            this.props.errorMessage(toast.error(\"Name can't be empty\"), \" Name can't be empty \" + 0)\r\n        } else if (this.state.password === null || this.state.password === \"\") {\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        } else if (this.state.passwordConfirmation === null || this.state.passwordConfirmation === \"\") {\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        } else if (this.state.password !== this.state.passwordConfirmation) {\r\n            this.props.errorMessage(toast.error(\"Password does not match Password Confirmation\"), \"Password does not match Password Confirmation \" + 0)\r\n        }\r\n    }\r\n\r\n    handleLogoClicked = () => {\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles[\"mainContainer\"]}>\r\n                <Navigation\r\n                    clicked={this.handleLogoClicked}\r\n                />\r\n                <main className={styles[\"content\"]}>\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <div className={styles[\"titleBox\"]}>\r\n                            <p className={styles[\"title\"]}>\r\n                                Join Now\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"authContainer\"]}>\r\n                        <div className={styles[\"signupBox\"]}>\r\n                            <form className={styles[\"formStyle\"]}onSubmit={this.handleRegister}>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Name:\r\n                                    </p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.onUsernameChange}\r\n                                        value={this.state.username}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"name\"\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password:\r\n                                    </p>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        onChange={this.onPasswordChange}\r\n                                        value={this.state.password}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password Confirmation:\r\n                                    </p>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password-confirmation\"\r\n                                        onChange={this.onPasswordConfirmationChange}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className={styles[\"buttonContainer\"]}>\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Join Now\"\r\n                                        className={styles[\"submitInput\"]}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n\r\n","import Login from './Login';\r\n\r\nexport default Login;","import React, {PureComponent} from 'react';\r\nimport styles from './login.module.scss';\r\nimport Navigation from '../../navigation';\r\nimport {toast} from 'react-toastify';\r\n\r\nclass Login extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password:  \"\",\r\n          }\r\n    }\r\n  \r\n\r\n\r\n    onUsernameChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value,  \r\n        });\r\n      }\r\n    \r\n    onPasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n          });\r\n      }\r\n\r\n    handelLogin = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.username !== \"\" && this.state.password !== \"\") {\r\n            this.props.login(this.state.username, this.state.password, this.props.history);\r\n        }else if(this.state.username === null || this.state.username === \"\"){\r\n            this.props.errorMessage(toast.error(\"Name can't be empty\"), \" Name can't be empty \" + 0)\r\n        }else if(this.state.password === null || this.state.password === \"\"){\r\n            this.props.errorMessage(toast.error(\"Password can't be empty\"), \" Password can't be empty \" + 0)\r\n        }\r\n      }\r\n\r\n      handleLogoClicked = () => {\r\n        this.props.history.push(\"/\")\r\n      }\r\n\r\n\r\n   \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className={styles[\"mainContainer\"]}>\r\n                <Navigation\r\n                    clicked={this.handleLogoClicked} \r\n \r\n                />\r\n                <main className={styles[\"content\"]}>\r\n                    <div className={styles[\"titleContainer\"]}>\r\n                        <div className={styles[\"titleBox\"]}>\r\n                            <p className={styles[\"title\"]}>\r\n                                Login\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles[\"authContainer\"]}>\r\n                        <div className={styles[\"signupBox\"]}>\r\n                            <form className={styles[\"formStyle\"]} onSubmit={this.handelLogin}>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Name:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.onUsernameChange}\r\n                                        value={this.state.username}\r\n                                        className={styles[\"textInput\"]}\r\n                                        // autofocus=\"true\"\r\n                                        autoComplete=\"name\"\r\n                                    />\r\n                                </div>\r\n                                <div className={styles[\"inputContainer\"]}>\r\n                                    <p className={styles[\"inputStyle\"]}>\r\n                                        Password:\r\n                                    </p>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        onChange={this.onPasswordChange}\r\n                                        value={this.state.password}\r\n                                        className={styles[\"textInput\"]}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className={styles[\"buttonContainer\"]}>\r\n                                    <input\r\n                                        type=\"submit\" \r\n                                        value=\"Login\"\r\n                                        className={styles[\"submitInput\"]}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register, logout, login, fetchUser } from '../actions/userActions';\r\nimport Auth from '../components/Auth';\r\nimport Login from '../components/Auth/login';\r\nimport {\r\n    errorMessage,\r\n} from '../actions/notificationActions';\r\n\r\n\r\nclass AuthContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.location.pathname === \"/login\" ?\r\n                        <Login {...this.props} />\r\n                        :\r\n                        <Auth  {...this.props} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    /**\r\n     * dispatches action  register to create user\r\n     * @param {String} username \r\n     * @param {String} password \r\n     * @param {String} passwordConfirmation \r\n     * @param {Object} history \r\n     */\r\n    register: (username, password, passwordConfirmation,history) => {\r\n        dispatch(register(username, password, passwordConfirmation,history));\r\n    },\r\n\r\n    /**\r\n     * dispatches action logou, to logout the current user\r\n     */\r\n    logout: () => {\r\n        dispatch(logout());\r\n    },\r\n\r\n    /**\r\n     * dispatches action login to authenticate user\r\n     * @param {String} username \r\n     * @param {String} password \r\n     * @param {Object} history \r\n     */\r\n    login: (username, password, history) => {\r\n        dispatch(login(username, password, history));\r\n    },\r\n\r\n    /**\r\n     * dispatches action errorMessage \r\n     * @param {String} id \r\n     * @param {String} message \r\n     */\r\n    errorMessage: (id, message) => {\r\n        dispatch(errorMessage(id, message))\r\n    },\r\n\r\n    /**\r\n     * dispatches fetchUser to fetchUser information\r\n     */\r\n    fetchUser: () => {\r\n        dispatch(fetchUser());\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer);","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport AppContainer from '../containers/AppContainer';\r\nimport ProjectContainer from '../containers/ProjectContainer';\r\nimport LandingPageContainer from '../containers/LandingPageContainer';\r\nimport AuthContainer from '../containers/AuthContainer';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/**\r\n * This component contains all the routing details.\r\n */\r\nclass AppRouter extends React.PureComponent {\r\n  \r\n  /**\r\n   * @return {ReactComponent}\r\n   */\r\n  render() {\r\n\r\n    let routes;\r\n\r\n    if (this.props.auth.get(\"userFetched\")) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/projects\" component={ProjectContainer} />\r\n          <Route path=\"/project\" component={AppContainer} />\r\n          <Route exact path=\"/\" component={LandingPageContainer} />\r\n      </Switch>)\r\n    } else {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/projects\" component={ProjectContainer} />\r\n          <Route path=\"/project\" component={AppContainer} />\r\n          <Route path=\"/signup\" component={AuthContainer} />\r\n          <Route path=\"/login\" component={AuthContainer} />\r\n          <Route exact path=\"/\" component={LandingPageContainer} />\r\n        </Switch>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n          <ToastContainer\r\n            position={'bottom-right'}\r\n            draggable={false}\r\n            closeButton={false}\r\n            autoClose={3000}\r\n            rtl={true}\r\n          />\r\n          {routes}\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AppRouter);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './store';\r\nimport AppRouter from './router/AppRouter'\r\nimport './index.css';\r\nimport appConstants from './constants/appConstants';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n// Add a custom event keyed as `optimizedResize`. This event lies in stark\r\n// contrast to `resize`. `resize` can happen in some time spanning less than\r\n// one frame 60 frames per second, and may result in resource hog. This new\r\n// event only fires on the next animation frame, and upon a successful resize.\r\n(function() {\r\n  var throttle = function(type, name, obj) {\r\n    obj = obj || window;\r\n    var running = false;\r\n    var func = function() {\r\n      if (running) { return; }\r\n      running = true;\r\n      requestAnimationFrame(function() {\r\n        obj.dispatchEvent(new CustomEvent(name));\r\n        running = false;\r\n      });\r\n    };\r\n    obj.addEventListener(type, func);\r\n  };\r\n\r\n  /* init - you can init any event */\r\n  throttle(\"resize\", \"optimizedResize\");\r\n})();\r\n\r\n// setting userId and projectId for all the requests \r\n// TODO: does this have to modify fetch?\r\nconst oldFetch = fetch;\r\n\r\nfetch = (url , data) => {\r\n  const userId = localStorage.getItem(appConstants.get('USER_ID'));\r\n  const projectId = sessionStorage.getItem(appConstants.get('PROJECT_ID'));\r\n  \r\n  const defaultData = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json'},\r\n  };\r\n\r\n  if (!data){\r\n    data = defaultData;\r\n  }\r\n\r\n  if (!data.headers) {\r\n    data.headers = {};\r\n  }\r\n  data.headers.userid = userId;\r\n  data.headers.projectid = projectId;\r\n  \r\n  return oldFetch(url, data);\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorBlack\":\"#000\",\"colorWhite\":\"#fff\",\"colorScrollBarTrack\":\"#ccc\",\"colorScrollBarThumb\":\"#777\",\"colorBoxShadow\":\"rgba(0,0,0,0.2)\",\"colorGreyScale1\":\"#ccc\",\"colorUnselected\":\"rgba(145,145,145,0.4)\",\"colorHovered\":\"#cb1010\",\"colorSelected\":\"#57b25a\",\"colorSelectedRelated\":\"#cad100\",\"colorHoveredRelated\":\"#ff808e\",\"colorHoveredSelectedRelated\":\"red\",\"colorHoveredSelected\":\"red\",\"colorSketch\":\"red\",\"colorSketchPath\":\"red\",\"colorBrush\":\"#0796e4\",\"colorBrushed\":\"rgba(22,243,30,0.6)\",\"colorBrushSelected\":\"#91ee91\",\"colorQuerySelected\":\"rgba(240,36,121,0.3)\",\"colorQueryNotSelected\":\"rgba(0,179,255,0.3)\",\"colorSelectedCoordinate\":\"#fceef2\",\"colorCurrentCommand\":\"orange\",\"colorNotificationBorder\":\"rgba(153,0,0,0.7)\",\"colorNotificationSuccessBackground\":\"#bcfda0\",\"colorNotificationSuccessGradient1\":\"#5bff14\",\"colorNotificationSuccessGradient2\":\"#00b812\",\"colorNotificationWarningBackground\":\"#faefa8\",\"colorNotificationWarningGradient1\":\"#fd0\",\"colorNotificationWarningGradient2\":\"#ffd500\",\"colorNotificationErrorBackground\":\"#ff8a8a\",\"colorNotificationErrorGradient1\":\"#db0000\",\"colorNotificationErrorGradient2\":\"#900\",\"opacity0\":\"0\",\"opacityMid1\":\".33\",\"opacityMid2\":\".67\",\"opacity1\":\"1\",\"button-div\":\"parallelMenu_button-div__CqXRo\",\"button\":\"parallelMenu_button__3HJW0\",\"button-visible\":\"parallelMenu_button-visible__QLnNP\",\"button-hidden\":\"parallelMenu_button-hidden__1ElCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"login_mainContainer__2ftiI\",\"content\":\"login_content__3M0Jt\",\"authContainer\":\"login_authContainer__4MJkX\",\"titleContainer\":\"login_titleContainer__2jWjK\",\"signupBox\":\"login_signupBox__1PVdU\",\"formStyle\":\"login_formStyle__1ZL-j\",\"inputContainer\":\"login_inputContainer__G2f8_\",\"buttonContainer\":\"login_buttonContainer__34ri8\",\"inputStyle\":\"login_inputStyle__3lT9w\",\"textInput\":\"login_textInput__U9FHG\",\"submitInput\":\"login_submitInput__2lG_8\",\"titleBox\":\"login_titleBox__1e0sH\",\"title\":\"login_title__1sS8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectContainer\":\"project_projectContainer__tkzkA\",\"imageContainer\":\"project_imageContainer__1iaDM\",\"textContainer\":\"project_textContainer__1denn\",\"titleContainer\":\"project_titleContainer__yV22N\",\"title\":\"project_title__Oc0MX\",\"numberOfAlts\":\"project_numberOfAlts__3y1zV\",\"imageStyle\":\"project_imageStyle__1Of8d\",\"descriptionContainer\":\"project_descriptionContainer__2ooeR\",\"description\":\"project_description__14DCK\",\"userContainer\":\"project_userContainer__3zH_V\",\"circle\":\"project_circle__o2MnR\",\"icon-style\":\"project_icon-style__2nIfK\",\"initials\":\"project_initials__3tjbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageContainer\":\"projectImage_ImageContainer__kZFJu\",\"imagesContainer\":\"projectImage_imagesContainer__2Mm53\",\"imageStyle\":\"projectImage_imageStyle__7iUoK\"};"],"sourceRoot":""}